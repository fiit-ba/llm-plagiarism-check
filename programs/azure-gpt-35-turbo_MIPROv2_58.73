{
  "prog": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "code_sample_1": "public class T5 {  public static void main(String[] args) {   System.out.print(\"Enter an integer: \");   java.util.Scanner input = new java.util.Scanner(System.in);   int number = input.nextInt();   reverse(number);  }  public static void reverse(int number) {   while (number != 0) {    int remainder = number % 10;    System.out.print(remainder);    number = number \/ 10;   }   System.out.println();  } }",
        "code_sample_2": "public class L1 { public static void main(String[] args)  { System.out.print(\"Enter an integer: \"); java.util.Scanner input = new java.util.Scanner(System.in); int number = input.nextInt(); reverse(number); } public static void reverse(int number) {  while (number != 0) { int remainder = number % 10; System.out.print(remainder); number = number \/ 10; } System.out.println(); } }",
        "rationale": "produce the plagiarized. We ...",
        "explanation": "The two code samples are identical in structure, logic, and even variable names, indicating that one was directly copied from the other. The lack of any meaningful differences or variations in implementation strongly suggests that one code sample was simply copied and pasted into the other, with no attempt to modify or adapt the code.",
        "plagiarized": "Yes"
      },
      {
        "augmented": true,
        "code_sample_1": "import java.util.Scanner;  public class T2 {  public static void main(String[] args) {  Scanner input = new Scanner(System.in);   \/\/ Enter radius of the cylinder  System.out.print(\"Enter the radius and length of a cylinder: \");  double radius = input.nextDouble();  double length = input.nextDouble();   double area = radius * radius * 3.14159;  double volume = area * length;   System.out.println(\"The area is \" + area);  System.out.println(\"The volume of the cylinder is \" + volume);  }  }",
        "code_sample_2": "import java.util.Scanner; \/** * * @author 65FBEF05E01FAC390CB3FA073FB3E8CF (452BF208BF901322968557227B8F6EFE010) *\/ public class T02 { public static void main(String[] args) {  Scanner s = new Scanner(System.in);  System.out.print(\"Enter the radius and length of a cylinder: \");  float r = s.nextFloat();  float l = s.nextFloat();  System.out.println(\"The area is \" + r * r * 3.14159);  System.out.println(\"The volume is \" + (r * r * 3.14159) * l);  } }",
        "rationale": "produce the plagiarized. We ...",
        "explanation": "The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying.",
        "plagiarized": "No"
      },
      {
        "augmented": true,
        "code_sample_1": "import java.util.Scanner;  public class T2 {  public static void main(String[] args) {  Scanner input = new Scanner(System.in);   \/\/ Enter radius of the cylinder  System.out.print(\"Enter the radius and length of a cylinder: \");  double radius = input.nextDouble();  double length = input.nextDouble();   double area = radius * radius * 3.14159;  double volume = area * length;   System.out.println(\"The area is \" + area);  System.out.println(\"The volume of the cylinder is \" + volume);  }  }",
        "code_sample_2": "import java.util.Scanner; public class L1 { public static void main(String[] args) {  Scanner input = new Scanner(System.in); System.out.print(\"\"Enter the radius and length of a cylinder: \"\");  double radius = input.nextDouble();  double length = input.nextDouble();  double area = radius * radius * 3.14159;  double volume = area * length;  System.out.println(\"\"The area is \"\" + area + \"\", \"\");  System.out.print(\"\"The volume of the cylinder is \"\" + volume);  } }",
        "rationale": "produce the plagiarized. We ...",
        "explanation": "The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source.",
        "plagiarized": "Yes"
      },
      {
        "augmented": true,
        "code_sample_1": "import java.util.Scanner; public class T3 {  public static void main(String[] args) {  Scanner input = new Scanner(System.in); \/\/ Prompt the user to enter weight in pounds  System.out.print(\"Enter weight in pounds: \");  double weight = input.nextDouble(); \/\/ Prompt the user to enter height  System.out.print(\"Enter feet: \");  double feet = input.nextDouble();  System.out.print(\"Enter inches: \");  double inches = input.nextDouble(); double height = feet * 12 + inches; \/\/ Compute BMI  double bmi = weight * 0.45359237 \/ ((height * 0.0254) * (height * 0.0254)); \/\/ Display result  System.out.println(\"BMI is \" + bmi);  if (bmi < 18.5)  System.out.println(\"Underweight\");  else if (bmi < 25)  System.out.println(\"Normal\");  else if (bmi < 30)  System.out.println(\"Overweight\");  else  System.out.println(\"Obese\");  } }",
        "code_sample_2": "import java.util.*; public class L2 { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.print(\"Enter weight in pounds: \"); double berat = sc.nextDouble(); System.out.print(\"Enter feet: \"); double feet = sc.nextDouble(); System.out.print(\"Enter inches: \"); double inci = sc.nextDouble(); double tinggi = feet * 12 + inci; double bmi = berat * 0.45359237 \/ ((tinggi * 0.0254) * (tinggi * 0.0254)); System.out.println(\"BMI is \" + bmi); if (bmi < 18.5) { System.out.println(\"Underweight\"); } else if (bmi < 25) { System.out.println(\"Normal\"); } else if (bmi < 30) { System.out.println(\"Overweight\"); } else { System.out.println(\"Obese\"); } } }",
        "rationale": "produce the plagiarized. We ...",
        "explanation": "The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source.",
        "plagiarized": "Yes"
      },
      {
        "code_sample_1": "public class T5 {  public static void main(String[] args) {   System.out.print(\"Enter an integer: \");   java.util.Scanner input = new java.util.Scanner(System.in);   int number = input.nextInt();   reverse(number);  }  public static void reverse(int number) {   while (number != 0) {    int remainder = number % 10;    System.out.print(remainder);    number = number \/ 10;   }   System.out.println();  } }",
        "code_sample_2": "public class L4 { public static void main(String[] args)  { int nomor = 0; System.out.print(\"Enter an integer: \"); java.util.Scanner input = new java.util.Scanner(System.in); nomor = input.nextInt(); int sisa = 0 ;  while (nomor != 0) { sisa = nomor % 10; System.out.print(sisa); nomor = nomor \/ 10; } System.out.println(); } }",
        "plagiarized": "Yes",
        "explanation": "The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
      },
      {
        "code_sample_1": "import java.util.Scanner; public class T7 {  public static void main(String[] args) {   Scanner input = new Scanner(System.in);   System.out.print(\"Enter a 4 by 4 matrix row by row: \");   double[][] m = new double[4][4];   for (int i = 0; i < 4; i++)    for (int j = 0; j < 4; j++)     m[i][j] = input.nextDouble();   System.out.print(\"Sum of the elements in the major diagonal is \" + sumMajorDiagonal(m));  }  public static double sumMajorDiagonal(double[][] m) {   double sum = 0;   for (int i = 0; i < m.length; i++)    sum += m[i][i];   return sum;  } }",
        "code_sample_2": "import java.util.*; public class L4 { public static double jumlahDiagonal(double[][] m) { double sum = 0; for (int i = 0; i < m.length; i++) { sum += m[i][i]; } return sum; } public static void print(double[][] m) { System.out.print(\"Sum of the elements in the major diagonal is \" + jumlahDiagonal(m)); } public static void main(String[] args) { Scanner sc = new Scanner(System.in); double[][] m = new double[4][4]; System.out.println(\"Enter a 4 by 4 matrix row by row: \"); for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) { m[i][j] = sc.nextDouble(); } } print(m); } }",
        "plagiarized": "Yes",
        "explanation": "The two code samples exhibit nearly identical logic, structure, and even wording in output messages, which is highly unlikely to occur independently. While there are minor differences in naming and code organization, the core implementation - especially the method for summing the diagonal elements - is almost exactly the same, strongly suggesting that one sample was derived from the other or both were derived from a common source."
      },
      {
        "code_sample_1": "import java.util.Scanner; public class T7 {  public static void main(String[] args) {   Scanner input = new Scanner(System.in);   System.out.print(\"Enter a 4 by 4 matrix row by row: \");   double[][] m = new double[4][4];   for (int i = 0; i < 4; i++)    for (int j = 0; j < 4; j++)     m[i][j] = input.nextDouble();   System.out.print(\"Sum of the elements in the major diagonal is \" + sumMajorDiagonal(m));  }  public static double sumMajorDiagonal(double[][] m) {   double sum = 0;   for (int i = 0; i < m.length; i++)    sum += m[i][i];   return sum;  } }",
        "code_sample_2": "import java.util.Scanner; \/**  *  * @author ASUS  *\/ public class Nomor7_2451041557A22145B3701B0184109CAB013 { \/**  * @param args the command line arguments  *\/ public static void main(String[] args) { Scanner sc = new Scanner(System.in); int [][] matrix = new int [4][4]; int sum =0; System.out.println(\"Enter a 4-by-4 matrix row by row: \"); for(int i =0 ;i<4;i++){ for(int j=0;j<4;j++){ matrix[i][j]= sc.nextInt(); if(i==j){ sum += matrix[i][j]; } } } System.out.println(\"Sum of the elements in the major diagonal is \"+sum); } }",
        "plagiarized": "No",
        "explanation": "These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including separate methods vs. inline calculation, different data types, and unique looping structures. While they share the common goal of summing a matrix's diagonal, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
      },
      {
        "code_sample_1": "public class T1 {  public static void main(String[] args) {  System.out.println(\"Welcome to Java\");  System.out.println(\"Welcome to Java\");  System.out.println(\"Welcome to Java\");  System.out.println(\"Welcome to Java\");  System.out.println(\"Welcome to Java\");  }  }",
        "code_sample_2": "public class L6 { public static void print() { for (int i = 5; i > 0; i--) {  System.out.print(\"\"Welcome to Java\\n\"\");  }  } public static void main(String[] args) {  print();  } }",
        "plagiarized": "Yes",
        "explanation": "These code samples can be considered plagiarism because they produce identical, specific output and solve the same unusual task, with the second sample appearing to be an attempt to disguise copied code through minimal modifications. Despite superficial differences in implementation (using a loop and separate method in Sample 2), the core functionality and purpose remain the same, indicating a lack of originality that would likely be considered plagiarism in academic or professional contexts."
      }
    ],
    "signature_instructions": "Detect if two code samples are plagiarized. In plagiarized field answer only : Yes if the code samples are plagiarized, No otherwise. In explenation field add the reason why the code samples are\/ are not plagiarized.",
    "signature_prefix": "Plagiarized:",
    "extended_signature_instructions": "Detect if two code samples are plagiarized. In plagiarized field answer only : Yes if the code samples are plagiarized, No otherwise. In explenation field add the reason why the code samples are\/ are not plagiarized.",
    "extended_signature_prefix": "Plagiarized:"
  }
}