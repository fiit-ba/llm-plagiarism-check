L,case,sample_1,sample_2,plagiarized,reason,pred_predicted,pred_explanation
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T07 {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.println(""Enter a 4-by-4 matrix row by row"");
        double[][] a = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                a[i][j] = s.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(a));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if(i==j)
                    sum += m[i][j];
            }
        }

        return sum;
    }

}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method for summing the diagonal elements. Code Sample 1 uses a single loop within a dedicated method to sum the diagonal elements, while Code Sample 2 uses nested loops and an inline condition to achieve the same result. These differences in implementation details, coding style, and structure suggest that they are"
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;
public class T07
{
   public static void main(String[] args)
   {
      
      Scanner sc = new Scanner(System.in);
      double[][] numbers = new double[4][4];
      System.out.println(""Enter a 4-by4 matrix row by row:"");

      for(int i=0;i < 4;i++)
      {
         String rows = sc.nextLine();
         String[] rowssplit = rows.split(""\\s+"");
         for (int j = 0; j < 4; j++)
         {
            numbers[i][j] = Double.parseDouble(rowssplit[j]);
         }
      }
     System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(numbers));

   }
   public static double sumMajorDiagonal (double[][] m)
   {
      double jumdiagonal = 0;
      for(int i=0;i < 4;i++)
      {
         for(int j = 0; j < 4; j++)
         {
            if(i == j)
            {
               jumdiagonal = jumdiagonal + m[i][j];
            }
         }
       }
       return jumdiagonal;
    }

}",False,,False,"The two code samples share the same goal of summing the major diagonal of a 4x4 matrix, but they differ significantly in their implementation details. Code Sample 1 reads the matrix elements directly into a 2D array and calculates the diagonal sum using a single loop. Code Sample 2, on the other hand, reads the matrix elements as strings, splits them, and then parses them into a 2D array, followed by a nested loop to calculate the diagonal sum. The differences in data handling, loop structures"
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T07 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] arr = new double[4][4];
        
        System.out.println(""Enter a 4-by-4 row by row: "");
        for(int i = 0; i < 4; i++) {
            for(int j = 0; j < 4; j++) {
                arr[i][j] = sc.nextDouble();
            }
            System.out.print("""");
        }
        sumMajorDiagonal(arr);
    }
    
    public static double sumMajorDiagonal(double[][] m) {
        double total = m[0][0] + m[1][1] + m[2][2] + m[3][3];
        System.out.println(""Sum of the elements in the major diagonal is "" + total);
        return total;
    }
}",False,,False,"The two code samples share the same goal of summing the major diagonal of a 4x4 matrix and have similar input prompts and output formats. However, they differ significantly in their implementation details. Code Sample 1 uses a loop to sum the diagonal elements, while Code Sample 2 explicitly sums the diagonal elements without a loop. Additionally, the variable names and the way the sum is printed are different. These differences suggest that the two samples were likely developed independently, even though they solve the same problem.

Plagiarized"
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    public static double sumMajorDiagonal(double[][] m){
        double hasil=0;
        for(int i=0;i<4;i++){
            hasil+=m[i][i];
        }
        return hasil;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        double[][] m=new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row:"");
        for(int i=0;i<4;i++){
            for(int j=0;j<4;j++){
                m[i][j]=sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(m));
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in the loop structure, the core logic and approach are nearly identical. This suggests that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        double a[][] =new double[4][4];
        for (int i=0;i<4;i++)
        {
            for (int j=0;j<4;j++)
            {
                 a[i][j]=sc.nextDouble();
            }
          }
        
        
        for (int i=0;i<4;i++)
        {
            for (int j=0;j<4;j++)
            {   if(a[i][j]%1==0){
                    DecimalFormat decimalFormat = new DecimalFormat(""#"");
                    String numberAsString = decimalFormat.format(a[i][j]);
                    System.out.print(numberAsString);
                }
                else{
                        System.out.print(a[i][j]);
                }
                System.out.print("" "");
            }
              System.out.println("""");
        }
        
        
         
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(a));
    }
    
public static double sumMajorDiagonal(double[][] array)
{
    double total = 0;

    for (int index = 0; index < array.length; index++)
    {
            total += array[index][index];
    }

    return total;
}
}",False,,False,"The two code samples share the same basic goal of summing the major diagonal of a 4x4 matrix, but they differ significantly in their implementation details. Code Sample 1 uses a straightforward approach to read the matrix and calculate the sum, while Code Sample 2 includes additional functionality for formatting the matrix output and uses a different method for summing the diagonal. The differences in coding style, additional features, and overall structure suggest that these are independent solutions to the same problem rather than instances of plagiarism."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t07 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] matriks = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row: "");
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matriks[i][j] = sc.nextDouble();
            }

        }

        System.out.println(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(matriks));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double hasil = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if (i == j) {
                    hasil += m[i][j];
                }
            }

        }
        return hasil;
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method of summing the diagonal elements, variable names, and overall code organization. Sample 1 uses a single loop to sum the diagonal elements directly, while Sample 2 uses nested loops with an additional condition to check for diagonal elements. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T07 {
    static Scanner sc = new Scanner(System.in);
    public static double sumMajorDiagonal(double[][] m) {
        double hasil = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
                if(i==j){
                    hasil += m[i][j];
                }
            }
        }
        return hasil;
    }
    public static void main(String[] args) {
        
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row:"");
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(m));
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method of input collection, the structure of the loops, and the way the sum is calculated and returned. Sample 1 uses nested loops for input collection and a separate method for summing the diagonal, while Sample 2 combines input collection and summing within the same method. These differences in coding"
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T07 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row to row : "");
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = sc.nextDouble();
            }
        }
        double result = sumMajorDiagonal(matrix);
        System.out.println(""Sum of the element in the major diagonal is "" + result);
    }

    public static double sumMajorDiagonal(double[][] m) {
        double result = 0;
        for (int i = 0; i < 4; i++) {
            result+=m[i][i];
        }
        return result;
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in the loop structure, the core logic and approach are nearly identical, suggesting that the second sample (T07) is likely derived from the first (T7) with minor modifications to disguise the copying."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T07 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        double[][] matrix = new double[4][4];
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter a 4-by-4 matrix row by row"");
        for(int i=0;i<4;i++){
            for(int j=0;j<4;j++){
                matrix[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(matrix));
    }
    
    public static double sumMajorDiagonal(double[][] m){
        double sum = 0;
        for(int i=0;i<4;i++){
            sum += m[i][i];
        }
        return sum;
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in the loop structure, the core logic and approach are nearly identical. This suggests that the second sample (T07) is likely derived from the first (T7) with minor modifications to disguise the copying."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D Afiany 2451041557A22145B3701B0184109CAB035
 */
public class T07 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        double[][] m = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row: "");
        for (int i = 0; i < m.length; i++) {
            for (int j = 0; j < m.length; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(m));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double tambah = m[0][0] + m[1][1] + m[2][2] + m[3][3];
        return tambah;
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method for summing the diagonal elements. Code Sample 1 uses a loop to iterate through the matrix, while Code Sample 2 explicitly sums the diagonal elements without a loop. These differences in implementation suggest that the solutions were likely developed independently rather than one being derived from the other.

Plagiar"
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No7 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        double[][] matrix = new double[4][4];
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter a 4-by-4 matrix row by row"");
        for(int i=0;i<4;i++){
            for(int j=0;j<4;j++){
                matrix[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(matrix));
    }
    
    public static double sumMajorDiagonal(double[][] m){
        double sum = 0;
        for(int i=0;i<4;i++){
            sum += m[i][i];
        }
        return sum;
    }
    
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the way the matrix is populated, the method for summing the diagonal, and the overall code organization. Sample 1 uses nested for-loops directly in the main method, while Sample 2 separates the summing logic into a distinct method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 2645BB47F923271FA1FC06C04E9691EA
 */
public class Soal7 {
    
    public static double sumMajorDiagonal(double[][] m){
        double hasil=0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if(i==j){
                    hasil += m[i][j];
                }
            }
        }
        return hasil;
    }
    
    public static void main(String[] args) {
        double[][] m = new double[4][4];
        Scanner sc = new Scanner(System.in);
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
    }
    
         
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method of summing the diagonal elements, variable names, and overall code organization. Sample 1 uses a single loop within a method to sum the diagonal, while Sample 2 uses nested loops and an if condition within the main method. These differences suggest they are likely independent solutions rather than a case"
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static double hasilPertambahanDiagonal(double[][] m) {
        double sum = 0;
        
        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        
        return sum;
    }
    
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        System.out.print(""Sum of the elements in the major diagonal is "" + hasilPertambahanDiagonal(n));
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in code organization, the core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 0; i < 4; i++)
			for (j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
		System.out.print(""Sum of the elements in the major diagonal is ""+ sum(ma));
	}
	

}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in the code, the core logic and approach are nearly identical, suggesting that the second sample (multiarray) is likely derived from the first (T7) with minor modifications to disguise the copying."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
        double hasil;
        hasil=HitungDiagonal(matrix);                         
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ hasil);//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal(double[][] matriks) {//fungsi untuk mengitung diagonal
        double total;
        total = 0;
        for (int i = 0; i < matriks.length; i++) {
            total += matriks[i][i];
        }
        return total;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as method names, variable names, and the way the matrix is processed. Sample 2 uses a more descriptive method name (`HitungDiagonal`) and includes additional comments in a different language, suggesting a different author. The differences in coding style, variable names, and overall structure indicate they are likely independent solutions"
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];
        Scanner s = new Scanner(System.in);
        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");


        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                mtx[i][j] = s.nextDouble();


        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in code style, the core logic and approach are nearly identical. This suggests that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L3 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = inp.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonalKanan(matrix));
    }

    public static double jumlahDiagonalKanan(double[][] matrix) {
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in comments and formatting, the core logic and approach are nearly identical, suggesting that the second sample (Kasus7L3) is likely derived from the first (T7) with minor modifications to disguise the copying."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        double[][] matriks = new double[4][4];
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int bar = 0; bar < 4; bar++) {
            for (int kol = 0; kol < 4; kol++) {
                matriks[bar][kol] = scan.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is ""
                + diagonal(matriks));
    }

    public static double diagonal(double[][] x) {
        double jumlah = 0;
        for (int i = 0; i < x.length; i++)
            jumlah += x[i][i];
        return jumlah;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and variable names, the core logic and approach are nearly identical, suggesting that the second sample (Level3) is likely derived from the first (T7) with minor modifications to disguise the copying."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L3 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in the loop structure, the core logic and approach are nearly identical. This suggests that the second sample (L3) is likely derived from the first (T7) with minor modifications to disguise the copying."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(arr));
    }

    public static double sumMajorDiagonal(double[][] m) {
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        double sum = 0;
        
        for (int i = 0; i < n.length; i++)
            sum += n[i][i];
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, matrix dimensions, and the method for summing the major diagonal of a matrix. However, the second sample (Main) does not use a separate method for summing the diagonal, and the variable names and some minor details differ. Despite these differences, the core logic and approach are nearly identical, suggesting that the second sample is likely derived from the first with minor modifications to disguise the copying."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus7 {

    public static void inputMatrix(double[][] matrix, int n) {
        Scanner sc = new Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = sc.nextDouble();
            }
        }
    }
    
    public static void sumMajorDiagonal(double[][] matrix) {
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sum);
    }
    
    public static void main(String[] args) {
        
        int n=4;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[n][n];
        
        inputMatrix(matrix, n);
        sumMajorDiagonal(matrix);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 1 integrates the input and diagonal summation within the main method, while Sample 2 separates these tasks into distinct methods (`inputMatrix` and `sumMajorDiagonal`). These differences in coding style and structure suggest that they are likely independent solutions"
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 0; i < 4; i++)
			for (j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
			
					double sum = 0;
		for ( i = 0; i < ma.length; i++)
			sum += ma[i][i];

		System.out.print(""Sum of the elements in the major diagonal is ""+ sum);
	}
	

}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as method names, variable usage, and overall code organization. Sample 1 uses a separate method `sumMajorDiagonal` to calculate the sum, while Sample 2 performs the calculation directly in the `main` method. Additionally, Sample 2 includes comments and different variable names, suggesting they are likely independent"
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    static Scanner s = new Scanner(System.in);
    public static void inputData(double[][] mtx){

        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                mtx[i][j] = s.nextDouble();

    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        inputData(mtx);



        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,True,"The two code samples share significant structural similarities, including the same input prompt, matrix size, and method for summing the major diagonal of a matrix. Both samples use nested loops for input and a separate method for calculating the diagonal sum. However, there are notable differences in the organization and naming conventions, such as the use of a static method for input in Sample 2 and different method names. Despite these differences, the core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first"
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i][i];
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sum);
    }

}",True,,False,"The two code samples share significant structural similarities, including identical input prompts, the same approach to populating the matrix, and the method for summing the major diagonal. However, there are notable differences in the implementation details, such as the use of different variable names, comments, and slight variations in the loop structures. These differences suggest that while the two samples solve the same problem in a similar manner, they are likely independent implementations rather than direct copies."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double[][] matriks;
        matriks = new double[4][4];
        double sum = 0;
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int b = 0; b < 4; b++) {
            for (int k = 0; k < 4; k++) {
                matriks[b][k] = in.nextDouble();
            }
        }
        
        for (int x = 0; x < matriks.length; x++){
            sum += matriks[x][x];
        }
            
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as variable names, loop structures, and the way the sum is calculated and printed. These differences suggest that they are likely independent solutions to a common programming exercise rather than a case of direct plagiarism."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L4 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = inp.nextDouble();
            }
        }
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (Kasus7L4) is likely derived from the first (T7) with minor modifications to disguise the copying."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L4 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }

    public static void print(double[][] m) {
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        print(m);
    }

}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (L4) is likely derived from the first (T7) with minor modifications to disguise the copying."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
        double hasil;
        hasil = 0;
        for (int i = 0; i < matrix.length; i++) {
            hasil += matrix[i][i];
        }
                         
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ hasil);//menampilkan fungsi hasil perhitungan diagonal
    }
}",True,,False,"The two code samples share the same goal of summing the major diagonal of a 4x4 matrix and have similar input prompts and output formats. However, they differ significantly in their implementation details. Code Sample 1 uses nested for-loops for input and a separate method for summing the diagonal, while Code Sample 2 uses nested for-loops for both input and summing the diagonal within the main method. The differences in variable names, method organization, and overall structure suggest that these are independent implementations of a common problem"
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        double sum = 0;
        
        int i=0;
        while(i<n.length){
            sum += n[i][i];
        }
            
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses nested `for` loops for input and a separate method for summing the diagonal, while Sample 2 uses nested `for` loops for input and an inline `while` loop for summing the diagonal. These differences suggest"
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus7 {
    
    public static void sumMajorDiagonal(double[][] matrix, int n) {
        double sum = 0;
        Scanner sc = new Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            int j=0;
            while(j<n) {
                 matrix[i][j] = sc.nextDouble();
                j++;
            }
        }
        
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sum);
    }
    
    public static void main(String[] args) {
        
        int n=4;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[n][n];
        
        sumMajorDiagonal(matrix , n);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method of input collection, the structure of the loops, and the organization of the code. Sample 1 uses nested for-loops for input collection and a separate method for summing the diagonal, while Sample 2 uses a combination of for-loops and while-loops for input collection and performs"
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 0; i < 4; i++)
			for (j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
			
					double sum = 0;
		i=0;
		while(i<ma.length)
		{
			sum += ma[i][i];
			i++;
		}
			

		System.out.print(""Sum of the elements in the major diagonal is ""+ sum);
	}
	

}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as method names, loop structures, and variable usage. Sample 1 uses a nested `for` loop for input and a separate method for summing the diagonal, while Sample 2 uses a `while` loop for summing the diagonal directly in the `main` method. These differences suggest they are"
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    static Scanner s = new Scanner(System.in);
    public static void inputData(double[][] mtx){
        int i =0;
        int j=0;
        while(i<4) {
            while(j<4){
                mtx[i][j] = s.nextDouble();
                j++;
            }
			j=0;
        i++;
        }

    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        inputData(mtx);

        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method of input collection, variable usage, and overall code organization. Sample 1 uses nested `for` loops for input collection, while Sample 2 uses nested `while` loops within a separate method. The differences in coding style, method organization, and variable handling suggest that these are likely independent"
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menjumlahkan angka yang terdapat di dalam array
        double sum;
        sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i][i];
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sum);
    }

}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] matriks = new double[4][4];
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int bar = 0; bar < 4; bar++) {
            for (int kol = 0; kol < 4; kol++) {
                matriks[bar][kol] = sc.nextDouble();
            }
        }
        
        hasil(matriks);
    }

    public static double sum(double[][] x) {
        double jumlah = 0;
        int i = 0;
        while(i < 4){
            jumlah += x[i][i];
            i++;
        }
        return jumlah;
    }

    //fungsi output program
    private static void hasil(double[][] x) {
        System.out.print(""Sum of the elements in the major diagonal is ""+ sum(x));
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names, variable names, and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (Level5) is likely derived from the first (T7) with minor modifications to disguise the copying."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L5 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        int i = 0;
        double sum = 0;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        while (i < 4) {
            int j = 0;
            while (j < 4) {
                matrix[i][j] = inp.nextDouble();
                j++;
            }
            i++;
        }

        i = 0;
        while (i < matrix.length) {
            sum += matrix[i][i];
            i++;
        }

        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses nested `for` loops for input and a separate method for summing the diagonal, while Sample 2 uses `while` loops for both input and summing the diagonal. These differences suggest they are likely independent solutions rather than"
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L5 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        int hit = 0;

        while (hit != m.length) {
            sum += m[hit][hit];
            hit++;
        }
        return sum;
    }

    public static void print(double[][] m) {
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        print(m);
    }

}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (L5) is likely derived from the first (T7) with minor modifications to disguise the copying."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
        double hasil;
        hasil=HitungDiagonal(matrix);                         
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ hasil);//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal(double[][] matriks) {//fungsi untuk mengitung diagonal
        double total;
        total = 0;
        int i;
        i=0;
        while(i<matriks.length){
         total+=matriks[i][i];
         i++;
        }
        return total;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as method names, loop structures, and variable usage. Sample 1 uses nested `for` loops and a separate method for summing the diagonal, while Sample 2 uses nested `for` loops for input and a `while` loop for summing the diagonal within a separate method. These differences in"
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        System.out.print(""Sum of the elements in the major diagonal is "" + hasilPertambahanDiagonal(n));
    }

    public static double hasilPertambahanDiagonal(double[][] m) {
        double sum = 0;
        
        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in the loop structure, the core logic and approach are nearly identical. This suggests that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
		System.out.print(""Sum of the elements in the major diagonal is ""+ sum(ma));
	}
	
	// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor comments, the core logic and approach are nearly identical, suggesting that the second sample (multiarray) is likely derived from the first (T7) with minor modifications to disguise the copying."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
                                 
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ HitungDiagonal(matrix));//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal(double[][] matriks) {//fungsi untuk mengitung diagonal
        double total = 0;
        for (int i = 0; i < matriks.length; i++) {
            total += matriks[i][i];
        }
        return total;
    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as method names, variable names, and comments. Sample 2 includes additional comments and uses different naming conventions, which suggests a different coding style. Despite these differences, the core logic and approach are very similar, indicating that one sample may have been derived from the other with some modifications to disguise the copying."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] mtx = new double[4][4];

        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                mtx[i][j] = s.nextDouble();


        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in variable names, the core logic and approach are nearly identical. This suggests that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L2 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];
        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = inp.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonalKanan(matrix));
    }

    public static double jumlahDiagonalKanan(double[][] matrix) {
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in comments and formatting, the core logic and approach are nearly identical. This suggests that the second sample (Kasus7L2) is likely derived from the first (T7) with minor modifications to disguise the copying."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];
        for (int x = 0; x < 4; x++) 
        {
            for (int y = 0; y < 4; y++) 
            {
                matrix[x][y] = sc.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is ""
                + hitungDiagonal(matrix));
    }

    public static double hitungDiagonal(double[][] matrix) 
    {
        double jumlah = 0;
        for (int i = 0; i < matrix.length; i++) 
        {
            jumlah += matrix[i][i];
        }
        return jumlah;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and variable names, the core logic and approach are nearly identical, suggesting that the second sample (Level2) is likely derived from the first (T7) with minor modifications to disguise the copying."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;
public class L2 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        for (int i = 0; i < 4; i++) 
        {
            for (int j = 0; j < 4; j++)
            {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) 
        { 
            sum += m[i][i];
        }
        return sum;
    }
    
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and minor variations in the loop structure, the core logic and approach are nearly identical. This suggests that the second sample (L2) is likely derived from the first (T7) with minor modifications to disguise the copying."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(arr));
    }

    public static double sumMajorDiagonal(double[][] m) {
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        
        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        
        return sum;
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for summing the major diagonal of a 4x4 matrix. Both samples use the same approach to input, matrix population, and diagonal summation, including the same method name (`sumMajorDiagonal`) and similar looping constructs. The minor differences, such as the presence of author comments and slight variations in formatting, do not significantly alter the core algorithm, suggesting that one sample was likely derived from the other or both from a common source, indicating likely plagiarism.

Pl"
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];
		//masukan array
		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();
		System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(m));
	}
	
	// menambahkan seluruh isi array
	public static double sumMajorDiagonal(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in comments and minor formatting, the core logic and approach are nearly identical, suggesting that the second sample (multiarray) is likely derived from the first (T7) with minor modifications to disguise the copying."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class multiarray {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
                                 
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ sumMajorDiagonal(m));//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double sumMajorDiagonal(double[][] m) {//fungsi untuk mengitung diagonal
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,False,"The two code samples share the same basic purpose and approach for summing the major diagonal of a 4x4 matrix, including the input prompt and the method for summing the diagonal. However, there are notable differences in the implementation details, such as the use of comments in different languages, the inclusion of additional imports in Sample 2, and slight variations in the loop structure and variable names. These differences suggest that while the samples solve the same problem in a similar way, they were likely developed independently rather than being direct copies"
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];

        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                m[i][j] = input.nextDouble();


        System.out.print(""Sum of the elements in the major diagonal is ""          + sumMajorDiagonal(m));
        }
    //function for Summary
    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;

        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Both samples use a nested loop to populate a 4x4 matrix and a separate method to calculate the sum of the major diagonal. The core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L1 {

    public static void main(String[] args) {
        //minta input
        Scanner input = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));

    }

    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in comments and minor formatting, the core logic and approach are nearly identical, suggesting that the second sample (Kasus7L1) is likely derived from the first (T7) with minor modifications to disguise the copying."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in); //harus import dulu
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(m));
    }

    //fungsi untuk menjumlahkan diagonal
    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in comments and minor formatting, the core logic and approach are nearly identical, suggesting that the second sample (Level1) is likely derived from the first (T7) with minor modifications to disguise the copying."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(m));
    }

    public static double sumMajorDiagonal(double[][] m) {
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in comments and minor formatting, the core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T7) with minor modifications to disguise the copying."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        double sum = 0;
        
        int i=0;
        while(i<n.length){
            sum += n[i][i];
            i++;
        }
            
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method of summing the diagonal elements (a for loop in Sample 1 vs. a while loop in Sample 2), variable names, and overall code organization. These differences suggest that they are likely independent solutions rather than a case of direct plagiarism."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus7 {

    public static void inputMatrix(double[][] matrix, int n) {
        Scanner sc = new Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = sc.nextDouble();
            }
        }
    }
    
    public static double sumMajorDiagonal(double[][] matrix, int n) {
        if(n>=0) {
            return matrix[n][n] + sumMajorDiagonal(matrix, --n);
        }
        else
            return 0;
    }
    
    public static void main(String[] args) {
        
        int n=4;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[n][n];
        
        inputMatrix(matrix, n);
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(matrix, --n));
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a matrix. However, they differ significantly in implementation details such as the method of input, the approach to summing the diagonal (iterative vs. recursive), and the overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 3; i >=0; i--)
			for (j = 3; j >= 0; j--)
				ma[3-i][3-j] = input.nextDouble();
			
					double sum = 1;
		i=1;
		while(i<=ma.length)
		{
			sum += ma[i][i];
			i++;
		}
			

		System.out.print(""Sum of the elements in the major diagonal is ""+ (sum-1));
	}
	

}",True,,False,"The two code samples share the same goal of summing the major diagonal of a 4x4 matrix and have similar input prompts. However, they differ significantly in their implementation details. Code Sample 1 uses nested `for` loops to populate the matrix and a separate method to sum the diagonal elements. Code Sample 2, on the other hand, uses a combination of nested `for` loops and a `while` loop for the same tasks, and it includes additional comments and variable manipulations that are not present in Code"
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    static Scanner s = new Scanner(System.in);
    public static void inputData(double[][] mtx){
        int i =0;
        int j=0;
        while(i<4) {
            while(j<4){
                mtx[i][j] = s.nextDouble();
                j++;
            }
			j = 0;
            i++;
        }

    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i=+2)
            sum += mtx[i][i]+mtx[i+1][i+1];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        inputData(mtx);

        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as the method of input, the structure of the loops, and the way the sum is calculated. Sample 1 uses nested `for` loops for input and a simple `for` loop for summing the diagonal, while Sample 2 uses nested `while` loops for input and a different approach to"
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menjumlahkan angka yang terdapat di dalam array
        double sum;
        sum = 0;
        for (int i = 0; i < arr.length; i = i + 1) {
            sum += arr[i][i];
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sum);
    }

}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as variable names, loop structures, and overall code organization. Sample 1 uses a separate method to calculate the sum of the major diagonal, while Sample 2 performs the calculation inline within the main method. These differences suggest that the samples are likely independent solutions to a common programming exercise rather than a case of"
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 
{
    public static void main(String[] args) 
    {
        Scanner masukkan = new Scanner(System.in);
        double[][] mat = new double[4][4];
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int baris = 0; baris < 4; baris+=1) 
        {
            for (int kolom = 0; kolom < 4; kolom+=1) 
            {
                mat[baris][kolom] = masukkan.nextDouble();
            }
        }
        
        ngitung(mat);
    }

    public static void ngitung(double[][] matriks) 
    {
        double jumlah = 0;
        int i = 3;
        while(i >= 0){
            jumlah += matriks[i][i];
            i--;
        }
        System.out.print(""Sum of the elements in the major diagonal is ""+ jumlah);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names, variable names, and loop structures, the core logic and approach are nearly identical. The second sample (Level6) appears to be a slightly modified version of the first (T7), with changes likely made to disguise the copying. The similarities in the core algorithm and even some verbatim code segments strongly suggest that one sample was"
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L6 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        int i = 0;
        double sum = 0;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        while (i < 4) {
            int j = 0;
            while (j < 4) {
                matrix[i][j] = inp.nextDouble();
                
                if(i == j){
                    sum += matrix[i][j];
                }
                
                j++;
            }
            i++;
        }

        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of summing the major diagonal of a 4x4 matrix. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses nested `for` loops and a separate method for summing the diagonal, while Sample 2 uses nested `while` loops and performs the summing operation inline. These differences suggest they are likely independent solutions rather than a case"
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L6 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        int hit = m.length-1;

        while (hit >= 0) {
            sum += m[hit][hit];
            hit--;
        }
        return sum;
    }

    public static void print(double[][] m) {
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 3; i >= 0 ; i--) {
            for (int j = 3; j >= 0; j--) {
                m[i][j] = sc.nextDouble();
            }
        }
        print(m);
    }

}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the method for summing the major diagonal of a matrix. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (L6) is likely derived from the first (T7) with minor modifications to disguise the copying."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {
   
    public static void main(String[] args) {
        
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        
                
       
        
                  
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ HitungDiagonal());//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal() {//fungsi untuk mengitung diagonal
        Scanner sc = new Scanner(System.in);
        double hasil=0;
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
         for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
               matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
               if(x==y)
               {
                  hasil+=matrix[x][y];
               }
            }
                          
        }
        return hasil;
    }
}",True,,False,"The two code samples share the same goal of summing the major diagonal of a 4x4 matrix, and they both prompt the user to enter the matrix row by row. However, they differ significantly in their implementation details. Code Sample 1 uses a nested `for` loop within the `main` method to populate the matrix and a separate method `sumMajorDiagonal` to calculate the sum. Code Sample 2, on the other hand, encapsulates the entire process within a single method `HitungDiagonal`, which"
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T06 {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int[] a = new int[10];
        for (int i = 0; i < a.length; i++) {
            System.out.print(""Read a number: "");
            a[i] = s.nextInt();
        }
        for (int i = a.length-1; i >= 0 ; i--) {
            System.out.println(a[i]);
        }
        
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;
public class T06
{
   public static void main(String[] args)
   {
      
      Scanner sc = new Scanner(System.in);
      int[] numbers = new int[10];
      for(int i=0;i < 10;i++)
      {
         System.out.print(""Read a number: "");
         numbers[i]= sc.nextInt();
      }
      for(int i=9;i > -1 ;i--)
      {
         System.out.println(numbers[i]);
      }

   }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and slight variations in loop conditions, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T06 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];
        
        for(int i = 0; i < 10; i++) {
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        
        for(int i = 9; i >= 0; i--) {
            System.out.println(arr[i]);
        }
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int[] numbers=new int[10];
        for(int i=0;i<10;i++){
            System.out.print(""Read a number: "");
            numbers[i]=sc.nextInt();
        }
        for(int i=9;i>=0;i--){
            System.out.println(numbers[i]);
        }
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a[]=new int[10];
        
        for (int i=0;i<10;i++)
        {
            System.out.print(""Read a number: "");
            int number = sc.nextInt();
            a[i]=number;
        }
        
        for (int i=9;i>=0;i--)
        {
            System.out.println(a[i]);
        }


    }
    
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t06 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arrNum = new int[10];
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number: "");
            arrNum[i] = sc.nextInt();
        }
        for (int i = 9; i > -1; i--) {
            System.out.println(arrNum[i]);
        }
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T06 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a[] = new int[10];
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number"");
            a[i] = sc.nextInt();
        }
        for (int i = 0; i < 10; i++) {
            System.out.println(a[9-i]);
        }
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of reading and reversing an array of numbers. However, they differ significantly in implementation details such as the loop structure for displaying the array in reverse order. Sample 1 uses a single loop that decrements the index, while Sample 2 uses a loop that calculates the reverse index within the loop body. These differences in implementation suggest that they are likely independent solutions rather than a case of direct plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T06 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] numbers = new int[10];
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number : "");
            numbers[i] = sc.nextInt();
        }
        for (int i = 9; i > -1; i--) {
            System.out.println(numbers[i]);
        }
    }
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and slight variations in the loop conditions, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T06 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int[] arr = new int[10];
        Scanner sc = new Scanner(System.in);
        for(int i=0;i<10;i++){
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        for(int i=9;i>=0;i--){
            System.out.println(arr[i]);
        }
    }
    
}",False,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T06 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] array = new int[10];
        for (int i = 0; i < array.length; i++) {
            System.out.print(""Read a number: "");
            array[i] = sc.nextInt();
        }

        System.out.println(array[9]);
        System.out.println(array[8]);
        System.out.println(array[7]);
        System.out.println(array[6]);
        System.out.println(array[5]);
        System.out.println(array[4]);
        System.out.println(array[3]);
        System.out.println(array[2]);
        System.out.println(array[1]);
        System.out.println(array[0]);

    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of reading and reversing an array of numbers. However, they differ significantly in implementation details such as the method of printing the array in reverse order. Sample 1 uses a loop to print the array in reverse, while Sample 2 uses individual print statements for each element. These differences in implementation suggest they are likely independent solutions rather than a case of direct plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No6 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int[] arr = new int[10];
        Scanner sc = new Scanner(System.in);
        for(int i=0;i<10;i++){
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        for(int i=9;i>=0;i--){
            System.out.println(arr[i]);
        }
    }
    
}",False,,False,"The two code samples share the same basic structure and logic for reading and reversing an array of integers. Both use a `for` loop to read 10 integers into an array and another `for` loop to print the array in reverse order. However, the differences in variable names, comments, and minor implementation details suggest that these are likely independent solutions to a common beginner's programming exercise rather than a case of direct plagiarism. The similarities can be attributed to the straightforward nature of the task."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 2645BB47F923271FA1FC06C04E9691EA
 */
public class Soal6 {
    public static void reverse(String number){
        
        for(int i = number.length()-1; i>-1; i--){
            System.out.println(number.charAt(i));
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        String input = """";
        int a;
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number: "");
            a = sc.nextInt();
            input+=a;
        }
        reverse(input);
    }
}",False,,False,"The two code samples share the same basic task of reading a series of numbers and then displaying them in reverse order. However, they differ significantly in their approach and implementation details. Code Sample 1 uses an array to store the numbers and then prints them in reverse order using a loop. Code Sample 2, on the other hand, concatenates the numbers into a single string and then reverses the string using a different method. The differences in data handling, loop structures, and overall approach suggest that these are independent solutions to a common problem rather than instances of plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(nums[i]);
        }
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reading and reversing an array of integers, including the same approach to input, output formatting, and loop structure. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];
	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		for (int i = 0; i < 10; i++) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
		}
		for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        for (int x = 0; x < 10; x++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
        }
        for (int x = 9; x >= 0; x--) {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

public class Main {


    public static void main (String[] args) {
        int[] number = new int[10];
     Scanner s = new Scanner(System.in);



        for (int i = 0; i < 10; i++) {

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
        }

        // Output the number
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L3 {
    public static void main (String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
        }
        // Display the array
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(arrNum[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        java.util.Scanner in = new java.util.Scanner(System.in);
        int[] arrAngka;
        arrAngka = new int[10];
        
        for (int x = 0; x < 10; x++) {
            System.out.print(
                    ""Read a number: "");
            arrAngka[x] = in.nextInt();
        }

        for (int x = 9; x >= 0; x--) {
            System.out.println(arrAngka[x]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;
public class L3 {

    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < 10; i++) 
        {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
        }

        for (int i = 9; i >= 0; i--)
        {
            
            System.out.println(angka[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(angka[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static int[] nums;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        outputs();
    }
    
    public static void outputs(){
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(nums[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus6 {
    
    public static void simpanArray(int[] arr, int n) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        
    }
    
    public static void tampilArray(int[] arr, int n) {
        for (int i = n-1 ; i >= 0 ; i--) {
            System.out.println(arr[i]);
        }
    }
    
    public static void main(String[] args) {
        int n=10;
        int[] arr = new int[n];
        simpanArray(arr, n);
        tampilArray(arr, n);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of reading and reversing an array of integers. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 2 introduces separate methods for reading and displaying the array, which is a notable structural difference from Sample 1. These differences suggest that the samples are likely independent solutions to a common beginner's task rather than a case of direct plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];
	static void print()
	{
				for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		for (int i = 0; i < 10; i++) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
		}
print();
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {
    public static void printNumber(int[] number){
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }

    }

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];


        for (int i = 0; i < 10; i++) {

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
        }

        // Output the number
        printNumber(number);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        showArray(angka);
    }
    
    public static void showArray(int[] angka){
         // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(angka[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method names, comments, and minor formatting, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        proses();
    }
    
    public static void proses(){
        java.util.Scanner in;
        in = new java.util.Scanner(System.in);
        int[] angka;
        angka = new int[10];
        for (int a = 0; a < 10; a++) {
            System.out.print(""Read a number: "");
            angka[a] = in.nextInt();
        }

        for (int b = 9; b >= 0; b--) {
            System.out.println(angka[b]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method names and minor variations in code organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L4 {
    public static void main (String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
        }
        // Display the array
        Reverse(arrNum);
    }
    
    private static void Reverse(int[] arr){
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(arr[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method names and the organization of the code (e.g., the use of a separate method for reversing the array in Sample 2), the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;
public class L4 {
public static void print (int [] arr)
{
    
        for (int i = 9; i >= 0; i--)
        {
            
            System.out.println(arr[i]);
        }
}
    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < 10; i++) 
        {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
        }

       print(angka);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        arr=inputArr(arr);
        printArr(arr);
    }
    
    public static int[] inputArr(int[] arr)
    {
      Scanner sc = new Scanner(System.in);
      for (int x = 0; x < 10; x++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
      }
      return arr;
    }
    
    public static void printArr(int[] arr)
    {
         for (int x = 9; x >= 0; x--) {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
         }

    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of reading and reversing an array of integers. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 2 uses separate methods for input and output, while Sample 1 handles everything within the `main` method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static int[] nums;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        outputs();
    }
    
    public static void outputs(){
        //Display the array
        int i = 9;
        while(i >= 0){
            System.out.println(nums[i--]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus6 {
    
    public static void simpanArray(int[] arr, int n) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
    }
    
    public static void tampilArray(int[] arr, int i) {
        System.out.println(arr[i]);
    }
    
    public static void main(String[] args) {
        int n=10;
        int[] arr = new int[n];
        simpanArray(arr, n);
        for (int i = n-1 ; i >= 0 ; i--) {
            tampilArray(arr, i);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. However, they differ in their method organization and naming conventions. Sample 2 introduces separate methods for storing and displaying the array, which adds a layer of abstraction not present in Sample 1. Despite these differences, the core algorithm and approach are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];
	static void print()
	{
				for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		int i=0;
		while (i < 10) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
			i++;
		}
print();
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method names, variable names, and loop structures, the core logic and approach are nearly identical. This suggests that the second sample (singlearray) is likely derived from the first (T6) with minor modifications to disguise the copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {
    public static void printNumber(int[] number){
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }

    }

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];
        int i=0;
        while(i<10){

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
            i++;
        }

        // Output the number
        printNumber(number);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        showArray(angka);
    }
    
    public static void showArray(int[] angka){
         // Menampilkan array
        int i = 9;
        while ( i >= 0) {
            System.out.println(angka[i]);
             i--;
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method names and minor variations in the loop structure, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); //panggil dari package
        int arrAngka[] = new int[10];

        for (int x = 0; x < 10; x++) {
            System.out.print(""Read a number: "");
            arrAngka[x] = sc.nextInt();
        }

        for (int x = 9; x >= 0; x--)
            System.out.println(arrAngka[x]);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L5 {

    public static void main(String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        int i = 0;
        while(i < 10){
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
            i++;
        }
        // Display the array
        Reverse(arrNum);
    }

    private static void Reverse(int[] arr) {
        int i = 9;
        while (i >= 0) {
            //Print angka dalam array
            System.out.println(arr[i]);
            i--;
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method names, variable names, and the use of a separate method for reversing the array in the second sample, the core algorithm and approach are nearly identical. This suggests that the second sample (Kasus6L5) is likely derived from the first (T6) with minor modifications to disguise the copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

public class L5 {

    public static void print(int[] arr) {
        int i = 9;
        while (i >= 0) {

            System.out.println(arr[i]);
            i--;
        }
    }

    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        int i = 0;
        while (i != 10) {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
            i++;
        }

        print(angka);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        arr=inputArr(arr);
        printArr(arr);
    }
    
    public static int[] inputArr(int[] arr)
    {
      Scanner sc = new Scanner(System.in);
      int x=0;
      while(x<10) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
            x++;
      }
      return arr;
    }
    
    public static void printArr(int[] arr)
    {
         int x=9;
         while(x>=0)  {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
            x--;
         }

    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of reading and reversing an array of integers. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 2 uses separate methods for input and output, while Sample 1 handles everything within the `main` method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(nums[i]);
        }
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reading and reversing an array of integers, including the same approach to input, output formatting, and loop structure. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	public static void main (String[] args)
	{
		java.util.Scanner inp = new java.util.Scanner(System.in);
		int[] n = new int[10];
		for (int i = 0; i < 10; i++) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
		}
		for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        for (int x = 0; x < 10; x++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
        }
        for (int x = 9; x >= 0; x--) {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];


        for (int i = 0; i < 10; i++) {

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
        }

        // Output the number
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and class names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L2 {
    public static void main (String[] args) {
        //Delarasi
        Scanner inp = new Scanner(System.in);
        int[] arrNum = new int[10];
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
        }
        // Display the array
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(arrNum[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        java.util.Scanner masukkan = new java.util.Scanner(System.in);
        int[] number = new int[10];
        
        //masukkan data
        for (int a = 0; a < 10; a++) {
            System.out.print(
                    ""Read a number: "");
            number[a] = masukkan.nextInt();
        }

        //tampilkan ke layar
        for (int a = 9; a >= 0; a--) {
            System.out.println(number[a]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class L2_6 {

    public static void main(String[] args) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        int[] angka = new int[10];
        
        for (int i = 0; i < 10; i++) 
        {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
        }

        for (int i = 9; i >= 0; i--)
        {
            
            System.out.println(angka[i]);
        }
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reading and reversing an array of integers, including the same approach to input, array population, and output. Despite minor differences in variable names and class names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(angka[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
            java.util.Scanner input = new java.util.Scanner(System.in);
            int[] num = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            num[i] = input.nextInt();
        }
        
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(num[i]);
        }
    }
}",True,,True,"The two code samples are almost identical in terms of structure, logic, and specific details. Both samples use the same approach to read numbers into an array and then print the array in reverse order. The only differences are minor formatting and the presence of an author comment in the second sample. These similarities strongly suggest that one sample was derived from the other or both were derived from a common source, indicating likely plagiarism."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	public static void main (String[] args)
	{
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];
		for (int i = 0; i < 10; i++) 
		{
			System.out.print(
			""Read a number: "");
			num[i] = input.nextInt();
		}
		for (int i = 9; i >= 0; i--) 
		{
			System.out.println(num[i]);
		}
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in class names and formatting, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class singlearray {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];//inisialisasi array
        for (int i = 0; i < 10; i++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            num[i] = input.nextInt();//input ke array
        }
        for (int i = 9; i >= 0; i--) {//looping untuk menampilkan array
            System.out.println(num[i]);//menampilkan array
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {

    public static void main (String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];


        for (int i = 0; i < 10; i++) {

            // Input the number

              System.out.print(""Read a number: "");
            num[i] = input.nextInt();
        }

        // Output the number
          for (int i = 9; i >= 0; i--) {
              System.out.println(num[i]);
          }
    }
}",True,,True,"The two code samples are almost identical in terms of structure, logic, and specific details. Both samples use a `Scanner` to read 10 integers into an array and then print the array in reverse order. The only differences are the class names and minor comments. Given the high degree of similarity, it is highly likely that one sample was derived from the other or both were derived from a common source, indicating likely plagiarism."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L1 {
    public static void main (String[] args) {
        //Delarasi
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            num[i] = input.nextInt();
        }
        // Display the array
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(num[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in comments and formatting, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 
{
    public static void main(String[] args) 
    {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];
        for (int i = 0; i < 10; i++) 
        {
            System.out.print(
                    ""Read a number: "");
            num[i] = input.nextInt();
        }
        
        //tampilkan ke layar
        for (int i = 9; i >= 0; i--) 
        {
            System.out.println(num[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in comments and formatting, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            num[i] = input.nextInt();
        }
        // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(num[i]);
        }
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in comments and formatting, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static int[] nums;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        nums = new int[10];
        
        for (int i = 10; i >= 0; i--) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        outputs();
    }
    
    public static void outputs(){
        //Display the array
        int i = 9;
        while(i >= 0){
            System.out.println(nums[i--]);
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of reading and reversing an array of integers. However, they differ significantly in implementation details such as the loop structure, variable usage, and method organization. Sample 1 uses a `for` loop to populate the array and another `for` loop to print it in reverse, while Sample 2 uses a `for` loop to populate the array and a `while` loop within a separate method to print it in reverse"
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus6 {
    
    public static void simpanArray(int[] arr, int i) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        
        if(i>0) {
            simpanArray(arr, --i);
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        
    }
    
    public static void tampilArray(int[] arr, int i) {
        if(i>=0){
            System.out.println(arr[i]);
            tampilArray(arr, --i);
        }
    }
    
    public static void main(String[] args) {
        int n=10;
        int[] arr = new int[n];
        simpanArray(arr, n);
        tampilArray(arr, --n);
    }
}",True,,False,"The two code samples share the same basic purpose of reading and displaying an array of integers in reverse order. However, they differ significantly in their implementation details. Code Sample 1 uses iterative loops for both reading and displaying the array, while Code Sample 2 employs recursive methods for these tasks. The differences in approach, method names, and overall structure suggest that these are independent solutions to a common problem rather than instances of plagiarism."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];

	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		int i=9;
		int a=0;
		while (i >=0) 
		{
			System.out.print(""Read a number: "");
			n[a] = inp.nextInt();
			a++;
			i--;
		}
	print();
	}
		static void print()
	{
				for (int a = 0; a <=9; a++) 
		{
			System.out.println(n[9-a]);
		}
	}
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {
    public static void printNumber(int[] number){
        for (int i = 0; i < 10; i++) {
            System.out.println(number[i]);
        }

    }

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];
        int i=9;
        while(i>=0){

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
            i--;
        }

        // Output the number
        printNumber(number);
    }
}",True,,False,"The two code samples share the same basic purpose of reading and printing an array of numbers, but they differ significantly in their implementation details. Code Sample 1 reads the numbers in a forward loop and prints them in reverse, while Code Sample 2 reads the numbers in reverse order and prints them in a forward loop using a separate method. The differences in loop structures, method usage, and variable handling suggest that these are independent solutions to a common problem rather than instances of plagiarism."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        showArray(angka);
    }
    
    public static void showArray(int[] angka){
         // Menampilkan array
        int i = 0;
        while ( i <= 9) {
            System.out.println(angka[i]);
             i++;
        }
    }
}",True,,False,"The two code samples share the same basic task of reading 10 integers and displaying them, but they differ significantly in their implementation details. Code Sample 1 reads the numbers into an array and then prints them in reverse order using a `for` loop. Code Sample 2 reads the numbers into an array and prints them in the same order using a `while` loop within a separate method. The differences in loop structures, method organization, and the order of output suggest that these are likely independent solutions to a common beginner programming exercise"
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 
{
    static Scanner sc = new Scanner(System.in);
    
    public static void tampil(int[]angka){
        for (int x = 10; x > 0; x--)
            System.out.println(angka[x]);
    }
    
    public static void main(String[] args) 
    {
        int arrAngka[] = new int[10];

        for (int x = 0; x < arrAngka.length; x++) 
        {
            System.out.print(""Read a number: "");
            arrAngka[x] = sc.nextInt();
        }

        tampil(arrAngka);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite some differences in method names and loop structures, the core logic and approach are nearly identical, suggesting that the second sample (Level6) is likely derived from the first (T6) with minor modifications to disguise the copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L6 {
    
    public static void main(String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        int i = 9;
        while(i >= 0){
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
            i--;
        }
        
        // Display the array
        Reverse(arrNum);
    }

    private static void Reverse(int[] arr) {
        int i = 0;
        while (i < 10) {
            //Print angka dalam array
            System.out.println(arr[i]);
            i++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of reading and reversing a fixed number of inputs. However, they differ significantly in implementation details such as the order of input collection, the use of different loop structures, and the method of displaying the array. Sample 1 uses a `for` loop for input and a `for` loop for output, while Sample 2 uses a `while` loop for input and a separate method with a `while` loop for"
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

public class L6 {

    public static void print(int[] arr) {
        int i = 9;
        int j = 0;
        while (j < 10) {

            System.out.println(arr[i]);
            i--;
            j++;
        }
    }

    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        int i = 0;
        while (i != 10) {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
            i++;
        }

        print(angka);
    }
}",True,,True,"The two code samples exhibit significant similarities in their overall structure, purpose, and specific details like the input prompt and the way the array is populated and printed in reverse order. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        
        printArr(inputArr(arr));
    }
    
    public static int[] inputArr(int[] arr)
    {
      Scanner sc = new Scanner(System.in);
      int x=0;
      int[] arr2=new int [10];
      while(x<10) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
            x++;
      }
      x=9;
      for(int i=0;i<10;i++){
         arr2[i]=arr[x];
         x--;
      }
      return arr2;
    }
    
    public static void printArr(int[] arr)
    {
         int x=0;
         while(x<10)  {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
            x++;
         }

    }
}",True,,False,"The two code samples share the same basic purpose of reading 10 integers and then printing them in reverse order. However, they differ significantly in their implementation details. Code Sample 1 uses a single method to handle both input and output, while Code Sample 2 separates these concerns into different methods (`inputArr` and `printArr`). Additionally, Code Sample 2 uses an intermediate array (`arr2`) to store the reversed values before printing, which is a different approach compared to the direct reversal in Code Sample 1. These"
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T01 {
    public static void main(String[] args) {
        for (int i=0;i<5;i++){
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class T01
{
   public static void main(String[] args)
   {
      for(int i=0;i < 5;i++)
      {
         System.out.println(""Welcome To Java"");
      }
      
   }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

public class T01 {
    public static void main(String[] args) {
        for(int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {

    public static void main(String[] args) {
	    for(int i=0;i<5;i++){
	        System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author 672CAF27F5363DC833BDA5099775E891
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        String a = ""Welcome To Java"";
        for(int i=0;i<6;i++)
        {
            System.out.println(a);
        }
        
    }
    
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
public class t01 {

    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }

    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T01 {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T01 {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T01 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        for(int i=0;i<5;i++)
            System.out.println(""Welcome To Java"");
    }
    
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T01 {

    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No1 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
    }
    
}",False,,True,"The two code samples produce the same output using identical print statements repeated five times. The only differences are the presence of author comments and minor formatting variations, which do not significantly alter the core functionality. Given the simplicity of the task and the identical nature of the output, it is highly likely that one sample was directly copied from the other or both were derived from a common source."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal1 {
    public static void main(String[] args) {
        for(int i = 0; i<5; i++)    
            System.out.println(""Welcome to Java"");
        
    }
}",False,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	public static void main(String[] args)
	{
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,True,The two code samples produce identical output by using the same repetitive print statements. The only differences are the class names and the presence of a comment and a unique identifier in the second sample. These differences are superficial and do not change the core functionality or logic of the code. The identical nature of the print statements and the overall structure strongly suggests that the second sample is a direct copy of the first with minimal modifications to disguise the copying.
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }
}",True,,True,"The two code samples produce identical output by using the same repetitive print statements. The only difference is the addition of comments in Code Sample 2, which do not alter the core functionality or logic of the code. Given the simplicity of the task and the identical nature of the output and structure, it is highly likely that one sample was directly copied from the other, with comments added to disguise the copying."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus1L3 {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //Print Welcome to java 5 kali
		String teks = ""Welcome to Java"";
        System.out.println(teks);
        System.out.println(teks);
        System.out.println(teks);
        System.out.println(teks);
        System.out.println(teks);
    }
    
}",True,,False,"The two code samples produce the same output by printing ""Welcome to Java"" five times. However, they differ in their implementation details. Code Sample 1 directly uses `System.out.println` statements, while Code Sample 2 stores the string in a variable and then prints it multiple times. Additionally, Code Sample 2 includes a comment and author information, which suggests a different context or purpose. These differences indicate that the samples are likely independent solutions to a common beginner exercise rather than a case of direct plagiarism."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples are nearly identical in their implementation, with both using repetitive print statements to output the same message five times. The only differences are the class names and the presence of a comment header in the second sample. These minor differences do not significantly alter the core functionality or structure of the code, suggesting that one sample was likely copied from the other with minimal changes to disguise the copying."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L3 {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples are identical in terms of structure, logic, and specific details. Both samples print the same message ""Welcome to Java"" five times using `System.out.println` statements. There are no differences in variable names, method organization, or any other aspect of the code. This level of similarity strongly suggests that one sample was directly copied from the other or both were copied from a common source."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 //class
{
    public static void main(String[] args) //main method
    {
        System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples produce identical output and use the same approach of repetitive print statements to achieve this. However, the second sample includes additional comments and a different class name, which are superficial changes that do not alter the core functionality. The presence of these minor modifications suggests an attempt to disguise the copied code, indicating likely plagiarism."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
        cetak();
    }
    public static void cetak(){
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples produce the same output and use the same repetitive print statements. However, the second sample encapsulates the print statements within a separate method (`cetak`) and includes additional comments and metadata. Despite these differences, the core functionality and output are identical, suggesting that the second sample may have been derived from the first with minor modifications to disguise the copying."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	static String s;
	static void Cetak()
	{
		System.out.println(s);
		
		System.out.println(s);
		System.out.println(s);
		
		System.out.println(s);
		
		System.out.println(s);
	}
	public static void main(String[] args)
	{
		s = ""Welcome to Java"";
		// code to print ""Welcome to Java""
		Cetak();
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements directly within the `main` method, while Code Sample 2 employs a separate method (`Cetak`) to handle the repetitive printing, and uses a static variable to store the string. The differences in implementation, such as the use of a separate method and static variable in the second sample, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {

    public static void main(String[] args) {
        printHello();

    }

    private static void printHello() {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }

}",True,,False,"The two code samples produce the same output by printing ""Welcome to Java"" five times. However, they differ significantly in their implementation details. Code Sample 1 uses direct `System.out.println` statements within the `main` method, while Code Sample 2 encapsulates the print statements within a separate method `printHello` and includes comments in a different language. These differences in structure and additional elements suggest that the two samples were independently created to solve the same problem rather than one being a direct copy of the other."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {
    public static void printOut(){
        System.out.println(""Welcome to Java"");
    }

    public static void main(String[] args) {
        //print 5x ""Welcome To Java""
        printOut();
        printOut();
        printOut();
        printOut();
        printOut();
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a method to encapsulate the print statement and then calls this method multiple times. The differences in implementation, such as the use of a method in the second sample and the presence of unique elements like the method name, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L4 {

    public static void print() {
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }

    public static void main(String[] args) {
        
        print();
    }
}",True,,True,"The two code samples produce the same output and use the same repetitive print statements to achieve this. However, the second sample encapsulates the print statements within a separate method called `print()`, which is then called from the `main` method. Despite this minor structural difference, the core functionality and the specific details of the print statements are identical, suggesting that the second sample may have been derived from the first with minimal modifications to disguise the copying."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        String kal = ""Welcome to Java"";
        tampil(kal);
    }

    //fungsi menampilkan kalimat
    private static void tampil(String kalimat) {
        System.out.println(kalimat);
        System.out.println(kalimat);
        System.out.println(kalimat);
        System.out.println(kalimat);
        System.out.println(kalimat);
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements directly within the `main` method, while Code Sample 2 employs a separate method (`tampil`) to handle the repetitive printing. Additionally, Code Sample 2 includes a comment header and a different class name, which suggests a more structured approach. The differences in implementation, such as the use of a separate method in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism.

Pl"
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class WelcomeToJava {
    public static void test(int i) {
        while(i>0) {
            System.out.println(""Welcome To Java"");
            i--;
        }
    }
    
    public static void main(String[] args) {
        test(5);
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure within a separate method to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment and method structure, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {

    public static void main(String[] args) {
        printHello();

    }

    private static void printHello() {
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi lagi
    }

}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements directly within the `main` method, while Code Sample 2 employs a separate method (`printHello`) to encapsulate the print statements and includes comments in a different language. The differences in implementation, such as the use of a separate method and comments in the second sample, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class PrintJava {

    public static void main(String[] args) {
        printAll();
    }

    public static void printAll() {
        //mencetak welcome to java sebanyak 5 kali
        for (int i = 0; i < 5; i++) {
            System.out.print(""Welcome to Java"");
            System.out.println("""");
        }
    }

}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure and a separate method to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment and method organization, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
        cetak();
    }
    public static void cetak(){
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome to Java""); 
            
        }
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure within a separate method to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment and method `cetak()`, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L5 {

    public static void print() {

        for (int i = 0; i < 5; i++) {
            System.out.print(""Welcome to Java\n"");
        }
    }

    public static void main(String[] args) {
        print();
    }
}",True,,True,"These code samples can be considered plagiarism because they produce identical, specific output and solve the same unusual task, with the second sample appearing to be an attempt to disguise copied code through minimal modifications. Despite superficial differences in implementation (using a loop and separate method in Sample 2), the core functionality and purpose remain the same, indicating a lack of originality that would likely be considered plagiarism in academic or professional contexts."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class WelcomeToJava {
    public static void main(String[] args) {
		{
            System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
        }
    }
}",True,,True,"The two code samples produce the same output and use nearly identical print statements to achieve this. However, the second sample includes additional comments and a different class name, which are superficial changes that do not alter the core functionality. The identical sequence of print statements strongly suggests that one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }
}",True,,True,"The two code samples produce identical output by using the same repetitive print statements. The only difference is the addition of comments in Code Sample 2, which do not alter the core functionality or logic of the code. Given the simplicity of the task and the identical nature of the output and structure, it is highly likely that one sample was directly copied from the other, with comments added to disguise the copying."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class PrintJava {
    public static void main(String[] args) {
            //mencetak welcome to java sebanyak 5 kali
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples produce the same output and use identical print statements to achieve this. However, the second sample includes additional comments and a different class name, which are superficial changes that do not alter the core functionality. The identical nature of the print statements and the overall structure strongly suggests that the second sample is a direct copy of the first with minimal modifications to disguise the copying."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples are nearly identical in their implementation, with both using repetitive print statements to output the same message five times. The only differences are the class names and the presence of a comment header in the second sample. These minor differences do not significantly alter the core functionality or structure of the code, suggesting that one sample was likely copied from the other with minimal changes to disguise the copying."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author 19984DCAEA13176BBB694F62BA6B5B35
 */
public class L2 {
     public static void main(String[] args) {
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples are identical in terms of their structure, logic, and specific details. Both samples print the same message ""Welcome to Java"" five times using repetitive `System.out.println` statements. The only difference is the presence of a comment block in Code Sample 2, which does not affect the core functionality of the code. Given the simplicity and identical nature of the task, it is highly likely that one sample was directly copied from the other or both were derived from a common source."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples are nearly identical in their implementation, with both using repetitive print statements to output the same message five times. The only differences are the class names and the presence of a comment header in the second sample. These minor differences do not significantly alter the core functionality or structure of the code, suggesting that one sample was likely copied from the other with minimal changes to disguise the copying."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}",True,,True,"The two code samples are identical in every aspect, including class name, method name, and the exact sequence of `System.out.println` statements. There are no differences in implementation, variable names, or structure. This indicates that one sample is a direct copy of the other without any modifications, which is a clear case of plagiarism."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	public static void main(String[] args)
	{
		
		// code to print ""Welcome to Java""
		System.out.println(""Welcome to Java"");
		
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		
		System.out.println(""Welcome to Java"");
		
		System.out.println(""Welcome to Java"");
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,True,"The two code samples produce the same output by using identical print statements to display ""Welcome to Java"" five times. However, the second sample includes additional comments and a different class name, which are superficial changes that do not alter the core functionality. The identical nature of the print statements and the overall structure strongly suggest that the second sample is a direct copy of the first with minimal modifications to disguise the copying."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {

    public static void main(String[] args) {
        //print ""Welcome To Java""

    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");

    }
}",True,,True,"The two code samples are nearly identical in their structure and output. Both samples print ""Welcome to Java"" five times using repetitive `System.out.println` statements. The only difference is the class name and a comment in the second sample. Given the simplicity of the task and the minimal differences, it is highly likely that one sample was directly copied from the other or both were derived from a common source without significant modification."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
            //mencetak welcome to java sebanyak 5 kali
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples produce the same output using identical print statements repeated five times. The only differences are the presence of comments and author information in the second sample, which do not affect the core functionality. Given the simplicity of the task and the identical nature of the code, it is highly likely that one sample was copied from the other or both were derived from a common source."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args)
    {
        //menampilkan sesuatu ke layar
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples produce the same output using identical print statements repeated five times. However, the second sample includes additional comments and a different class name, which are superficial changes that do not alter the core functionality. The identical nature of the print statements and the overall structure strongly suggests that one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus1L1 {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //Print Welcome to java 5 kali
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples produce the same output and use identical print statements to achieve this. However, the second sample includes additional comments and a different class name, which are superficial changes that do not alter the core functionality. The identical nature of the print statements and the overall structure strongly suggests that one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }
}",True,,True,"The two code samples produce the same output by printing ""Welcome to Java"" five times. The first sample uses straightforward repetitive print statements, while the second sample does the same but includes comments in a different language (presumably Indonesian) explaining each print statement. Despite the added comments, the core functionality and structure are identical, suggesting that the second sample is likely derived from the first with minimal modifications to disguise the copying."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
        cetak();
    }
    public static void cetak(){
        for (int i = 5; i > -1; i--) {
            System.out.println(""Welcome to Java""); 
            
        }
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure within a separate method to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment and method naming, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class WelcomeToJava {
    public static String test(int i) {
        if(i>0) {
            System.out.println(""Welcome To Java"");
            return test(--i);
        }
        else
            return """";
    }
    
    public static void main(String[] args) {
        int i=5;
        test(i);
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a recursive function to achieve the same result. The differences in implementation, such as the use of recursion in the second sample and the presence of unique elements like the author comment, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	static String s;
	static void Cetak()
	{
		for(int a=5;a>0;a--)
		System.out.println(s);

	}
	public static void main(String[] args)
	{
		s = ""Welcome to Java"";
		// code to print ""Welcome to Java""
		Cetak();
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,False,"The two code samples produce the same output, ""Welcome to Java"" printed five times, but they achieve this through different methods. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop within a separate method to achieve the same result. The differences in implementation, such as the use of a loop and the presence of unique elements like static variables and method calls in the second sample, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {

    public static void main(String[] args) {
	//print ""welcome to java"" 5x
    String java=""Welcome To Java"";
for(int baris=9;baris>=0;baris-=2){
    System.out.print(java);
    System.out.println();
}
    }
}",True,,False,"The two code samples aim to produce the same output, ""Welcome to Java"" printed five times. However, they achieve this using different approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure with a decrementing counter to print the same message. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the variable `java` and the loop decrement logic, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class PrintJava {

    public static void main(String[] args) {
        printAll();
    }

    public static void printAll() {
        //mencetak welcome to java sebanyak 5 kali
        for (int i = 5; i > 0; i--) {
            System.out.print(""Welcome to Java"");
            System.out.println("""");
        }
    }

}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure and a separate method to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment and method organization, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 
{
    public static void main(String[] args) 
    {
        String input = ""Welcome to Java\n"";
        keluaran(input);
    }
    
    private static void keluaran(String kal) 
    {
        int limit=0; //batas perulangan
        while(limit!=5) //perulangan sebanyak 5x
        {
            System.out.print(kal);
            limit++;
        }
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure and a separate method to achieve the same result. The differences in implementation, such as the use of a loop and a method in the second sample, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus1L6 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //Print Welcome to java 5 kali
        cetakTeks(""Welcome to Java"");
    }

    private static void cetakTeks(String teks) {
        int i = 5;
        while(i > 0){
            System.out.println(teks);
            i--;
        }
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure within a separate method to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of unique elements like the author comment and method encapsulation, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L6 {

    public static void print() {

        for (int i = 5; i > 0; i--) {
            System.out.print(""Welcome to Java\n"");
        }
    }

    public static void main(String[] args) {
        print();
    }
}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements, while Code Sample 2 employs a loop structure to achieve the same result. The differences in implementation, such as the use of a loop in the second sample and the presence of a separate method for printing, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {

    public static void main(String[] args) {
        printHello();

    }

    private static void printHello() {
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi lagi
    }

}",True,,False,"The two code samples produce the same output but utilize different programming approaches. Code Sample 1 uses repetitive print statements directly within the `main` method, while Code Sample 2 employs a separate method (`printHello`) to encapsulate the print statements and includes comments in a different language. The differences in implementation, such as the use of a separate method and comments in the second sample, suggest these are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T04 {
    public static void main(String[] args) {
        System.out.println(""Miles           Kilometers"");
        for (int i = 1; i < 10; i++) {
            System.out.println(i+""               ""+i*1.609);
        }
        System.out.println(10+""              ""+10*1.609);
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop to iterate from 1 to 10, while Sample 2 uses a `for` loop and handles the last iteration separately. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;
public class T04
{
   public static void main(String[] args)
   {
      System.out.println(""Miles       Kilometers"");

      for(int i=1;i < 11;i++)
      {
         if(i < 10)
         {
            System.out.println(i+""           ""+i*1609);
         }
         else
         {
            System.out.println(i+""          ""+i*1609);
         }
      }

   }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop and a more straightforward approach, while Sample 2 uses a `for` loop with conditional statements. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.text.DecimalFormat;

public class T04 {
    public static void main(String[] args) {
        DecimalFormat d = new DecimalFormat(""0.000"");
        
        System.out.println(""Miles\tKilometers"");
        for(int i = 1; i <= 10; i++) {
            System.out.println(i + ""\t"" + d.format(i * 1.609));
        }
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop and simple print statements, while Sample 2 uses a `for` loop and a `DecimalFormat` object to format the output. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles    Kilometers"");
        for(int i=1;i<=10;i++){
            System.out.println(i+""        ""+i*1609);
        }
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop and a specific conversion factor (1.609), while Sample 2 uses a `for` loop and a different conversion factor (1609). These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int miles = 1;
        System.out.print(""Miles    Kilometer"");
        for(int i=0;i<10;i++)
        {
            double kilo = miles*1.609;
            System.out.println("""");
            System.out.print(miles+""        ""+kilo);
            miles++;

        }
        
    }
    
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop and a tab-separated format for output, while Sample 2 uses a `for` loop and a different approach to formatting the output. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
public class t04 {

    public static void main(String[] args) {
        System.out.println(""Miles\tKilometers"");
        for (int i = 1; i < 11; i++) {
            System.out.println(i + ""\t"" + i * 1.609);
        }
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop and includes a more detailed output format with tabs and a separator line, while Sample 2 uses a `for` loop and a simpler output format. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T04 {
    public static void main(String[] args) {
        System.out.println(""miles \t kilometers"");
        for (int i = 0; i < 10; i++) {
            System.out.println(i+1+""\t""+((i+1)*1.609));
        }
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop and includes a header for the table, while Sample 2 uses a `for` loop and a different approach to formatting the output. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T04 {
    public static void main(String[] args) {
        double kilo;
        double milToKilo = 1.609;
        System.out.println(""Miles\tKilometers"");
        for (int i = 1; i < 11; i++) {
            kilo = i * milToKilo;
            System.out.println(i + ""\t"" + kilo);
        }
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop and prints the results directly within the loop, while Sample 2 uses a `for` loop and calculates the kilometers in a separate variable before printing. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T04 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int mil = 1609;
        System.out.println(""Miles\tKilometers"");
        for(int i=1;i<=10;i++){
            System.out.println(i + ""\t"" + i*mil);
        }
    }
    
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and the conversion factor. Sample 1 uses a `while` loop and a conversion factor of `1.609`, while Sample 2 uses a `for` loop and a conversion factor of `1609`. These differences in implementation suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.text.DecimalFormat;
import java.text.NumberFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T04 {

    public static void main(String[] args) {
        NumberFormat formatter = new DecimalFormat(""#0"");
        System.out.println(""Miles"" + ""\t"" + ""Kilometers"");
        System.out.println(""1"" + ""\t"" + (1 * 1.609));
        System.out.println(""2"" + ""\t"" + (2 * 1.609));
        System.out.println(""3"" + ""\t"" + (3 * 1.609));
        System.out.println(""4"" + ""\t"" + (4 * 1.609));
        System.out.println(""5"" + ""\t"" + (5 * 1.609));
        System.out.println(""6"" + ""\t"" + (6 * 1.609));
        System.out.println(""7"" + ""\t"" + (7 * 1.609));
        System.out.println(""8"" + ""\t"" + (8 * 1.609));
        System.out.println(""9"" + ""\t"" + (9 * 1.609));
        System.out.println(""10"" + ""\t"" + (10 * 1.609) + formatter.format(0.0));
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop to iterate through the miles and calculate the kilometers, while Sample 2 uses individual print statements for each mile and includes additional formatting with `DecimalFormat`. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author Elvark
 */
public class No4 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int mil = 1609;
        System.out.println(""Miles\tKilometers"");
        for(int i=1;i<=10;i++){
            System.out.println(i + ""\t"" + i*mil);
    }
    }
    
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and output formatting. Sample 1 uses a `while` loop and a conversion factor of `1.609`, while Sample 2 uses a `for` loop and a conversion factor of `1609`. These differences in implementation suggest they are likely independent solutions rather than a case of direct plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.text.DecimalFormat;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal4 {
    public static void main(String[] args) {
        int arr[][] = new int[11][2];
        DecimalFormat df = new DecimalFormat(""#.###"");
        for(int i = 0; i<11; i++){
            if(i==0)
                System.out.println(""Miles \t Kilometers"");
            else
                System.out.println(i + ""\t"" + df.format(i*1.609));
        }
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Code Sample 1 uses a `while` loop and directly prints the results, while Code Sample 2 uses a `for` loop and a `DecimalFormat` object to format the output. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        int mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        
        //Use while loop
        while (mile <= 10) {
                System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
        }
    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. They both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The differences are minimal, such as the variable name (`miles` vs. `mile`) and the presence of an author comment in the second sample. These differences are not substantial enough to suggest independent creation, especially given the identical logic and structure."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void Konversi(int n) {
        int miles = 1;
        while (miles <= n) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        Konversi(10);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the use of a separate method for conversion in Sample 2, and the way the loop is handled. Sample 1 directly includes the loop in the `main` method, while Sample 2 encapsulates the loop within a separate method `Konversi`. These differences in code organization and structure suggest that they are likely independent solutions rather than a case of direct plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		int m = 1;
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		
		while (m <= 10) {
		System.out.println(m + ""\t\t"" + m * 1.609);
		m++;
		//ditambahin iteratornya
		}
	}
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, comments, and overall code organization. Sample 2 includes comments in a different language and uses a different class name, suggesting that while the core logic is similar due to the nature of the problem, the differences in implementation indicate they are likely independent solutions rather than a case of direct plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        //declare MIL
        int mil=1;
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, comments, and overall code organization. Sample 2 includes additional comments and a different class name, suggesting that while the core logic is similar due to the nature of the problem, the differences in implementation indicate they are likely independent solutions rather than a case of direct plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        while (jarak <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
            jarak++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, comments, and overall code organization. The second sample includes additional comments and uses a different variable name for the distance (`jarak` instead of `miles`). These differences suggest that while the samples solve the same problem, they are likely independent solutions rather than a case of direct plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        //inisialisasi
        int mile = 1;
        
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        while (mile <= 10) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
            mile++;
        }
    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. Both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The differences are minimal and mostly superficial, such as variable names and comments. Given the simplicity of the task and the high similarity in the approach, it is likely that one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L3 {
    public static void main(String[] args) {
        int counter = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        while (counter <= 10) {
            //Menampilkan hasil
            //counter = miles
            System.out.println(counter + ""\t\t"" + counter * 1.609);
            counter++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, comments, and overall code organization. Sample 2 includes additional comments and uses a different variable name (`counter` instead of `miles`). These differences suggest that while the samples solve the same problem, they are likely independent solutions rather than a case of direct plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L3 {

    public static void main(String[] args) {
        int mil = 0 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        mil = 1;

        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }

    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable initialization and usage. Sample 1 initializes the `miles` variable directly within the loop, while Sample 2 initializes the `mil` variable separately before the loop. Despite these differences, the overall approach and specific details like the conversion factor and output format are very similar, suggesting that one sample may have been derived from the other with some modifications to disguise the copying."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil ;
        mil= 1;//inisialisasi while pertama kali
        while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }//looping dari 1 sampai 10
   }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses a `while` loop with a simple increment, while Sample 2 also uses a `while` loop but includes additional comments and a slightly different initialization approach. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int mile;
    public static void main(String[] args) {
        mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        loops();
    }
    
    public static void loops(){
        //Use while loop
        while (mile <= 10) {
                System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the use of a separate method for the loop in Sample 2, the use of a private static variable, and the overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void Konversi(int miles) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        for(int miles=1 ; miles<=10 ; miles++)
            Konversi(miles);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, method usage, and overall code organization. Sample 1 uses a `while` loop directly within the `main` method, while Sample 2 uses a `for` loop and separates the conversion logic into a distinct method (`Konversi`). These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	static void hitHasil(int m)
	{
		while (m <= 10) 
		{
		System.out.println(m + ""\t\t"" + m * 1.609);
		m++;
		//ditambahin iteratornya
		}
	}
	public static void main(String[] args) 
	{
		int m = 1;
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		hitHasil(m);
		
	}
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for converting miles to kilometers, including the same approach to input, output formatting, and loop structure. Despite minor differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {
    public static void printMil (int mil){
        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
    public static void main(String[] args) {
        //declare MIL
        int mil=1;
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        printMil(mil);
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for converting miles to kilometers, including the same approach to input, output formatting, and loop structure. Despite minor differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        printJarakDalamMilDanKilo(jarak);
        
    }
   
    public static void printJarakDalamMilDanKilo(int jarak){
        while (jarak <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
            jarak++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 1 uses a `while` loop directly within the `main` method, while Sample 2 separates the loop into a different method (`printJarakDalamMilDanKilo`). Additionally, Sample 2 includes comments and a different approach to variable initialization and method calls. These differences suggest that the samples are likely independent solutions rather than a case of"
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 
{

    public static void main(String[] args) 
    {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        tabelKonversi();
    }

    private static void tabelKonversi() 
    {
        int mil = 1;
        while (mil <= 10) 
        {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }
    }
}",True,,False,"The two code samples share the same core logic and output format for converting miles to kilometers. Both use a `while` loop to iterate from 1 to 10 and print the conversion results. However, they differ in their method organization and structure. Code Sample 2 encapsulates the conversion logic within a separate method (`tabelKonversi`), while Code Sample 1 includes the logic directly within the `main` method. Despite these differences, the overall approach and specific details like the conversion factor and output format are very similar, suggesting that one sample may have been derived from the other with some"
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L4 {
    public static void main(String[] args) {
        int counter = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        while (counter <= 10) {
            //Menampilkan hasil
            //counter = miles
            System.out.println(counter + ""\t\t"" + ConvertMilesToKilo(counter));
            counter++;
        }
    }
    
    private static double ConvertMilesToKilo(int miles){
        return miles * 1.609;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the use of a helper method (`ConvertMilesToKilo`) in Sample 2, different variable names, and the overall structure of the code. These differences suggest that the samples are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L4 {

    public static void print(int mil)
    {
          while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }
    }
    public static void main(String[] args) {
        
        int mil = 1 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        print(mil);

    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for converting miles to kilometers, including the same approach to input, output formatting, and loop structure. Despite minor differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil ;
        print(mil=1);
   }
   
   public static void print(int mil)
   {
       while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }//looping dari 1 sampai 10

   }
}",True,,True,"The two code samples share the same core logic and output format for converting miles to kilometers. However, they differ in their loop structures and the way they handle the iteration. Sample 1 uses a `while` loop directly within the `main` method, while Sample 2 uses a `while` loop within a separate `print` method. Despite these differences, the overall approach and specific details like the conversion factor and output format are very similar, suggesting that one sample may have been derived from the other with some modifications to disguise the copying."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int mile;
    public static void main(String[] args) {
        mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        loops();
    }
    
    public static void loops(){
        //Use while loop
        for (int i = 1; i <= 10; i++) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
            
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method called `loops()`. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static double Konversi(int miles) {
            return miles * 1.609;
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        for(int miles=1 ; miles<=10 ; miles++)
            System.out.println(miles + ""\t\t"" + Konversi(miles));
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and the introduction of a separate conversion method in the second sample. These differences suggest that while both samples address the same problem, they do so in distinct ways, indicating independent solutions rather than direct plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	static void hitHasil(int m)
	{
		for(int a=m;a<=10;a++)
		{
		System.out.println(a + ""\t\t"" + a * 1.609);
		//ditambahin iteratornya
		}
	}
	public static void main(String[] args) 
	{
		int m = 1;
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		hitHasil(m);
		
	}
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, method usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate static method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {
    public static void printMil (int mil){

            for(int i =1;i<=10;i++){
            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
    public static void main(String[] args) {
        //declare MIL
        int mil=1;
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        printMil(mil);
    }
}",True,,True,"The two code samples share the same core logic and output format for converting miles to kilometers. However, they differ in their loop structures and the way they handle the iteration. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method (`printMil`). Despite these differences, the overall approach and specific details like the conversion factor and output format are very similar, suggesting that one sample may have been derived from the other with some modifications to disguise the copying."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        printJarakDalamMilDanKilo(jarak);
        
    }
   
    public static void printJarakDalamMilDanKilo(int jarak){
        for(jarak = jarak; jarak <= 10; jarak++){
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method. Additionally, Sample 2 includes comments and a different approach to variable initialization and method calls. These differences suggest they are likely independent solutions rather than a case of direct plagiarism.

Plag"
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        convert();
    }

    //pakai for
    private static void convert() {
        for(int mill = 1; mill <=10; mill++)
            System.out.println(mill + ""\t\t"" + mill * 1.609);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate `convert` method. These differences in implementation suggest they are likely independent solutions rather than a case of direct plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L5 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use for loop
        for (int i = 1; i <= 10; i++) {
            //Menampilkan hasil
            //i = miles
            System.out.println(i + ""\t\t"" + ConvertMilesToKilo(i));
        }
    }

    private static double ConvertMilesToKilo(int miles) {
        return miles * 1.609;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop and a separate method for the conversion. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L5 {

    public static void print(int mil)
    {
          for ( int i = 0 ; i < 10 ; i ++){

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }
    }
    public static void main(String[] args) {
        
        int mil = 1 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        print(mil);

    }
}",True,,True,"The two code samples share the same core logic and output format for converting miles to kilometers. However, they differ in their loop structures and the way they handle the iteration. Sample 1 uses a `while` loop, while Sample 2 uses a `for` loop within a separate method. Despite these differences, the overall approach and specific details like the conversion factor and output format are very similar, suggesting that one sample may have been derived from the other with some modifications to disguise the copying."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil ;
        print(mil=1);
   }
   
   public static void print(int mil)
   {
       for(int i=mil;i<=10;i++) {
            System.out.println(i + ""\t\t"" + i * 1.609);         
        }//looping dari 1 sampai 10

   }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate `print` method. These differences suggest that they are likely independent solutions rather than a case of direct plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        
        //Use while loop
        int mile = 1;
        while (mile <= 10) {
                System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
        }
    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. They both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The differences are minimal, such as the variable name (`miles` vs. `mile`) and the presence of an author comment in the second sample. These differences are not substantial enough to suggest independent creation, especially given the identical logic and structure."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void Konversi() {
        for (int miles = 1 ; miles <= 10 ; miles++) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
        }
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        Konversi();
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, method usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method called `Konversi`. These differences in implementation suggest they are likely independent solutions rather than a case of direct plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		int m = 1;
		while (m <= 10) {
		System.out.println(m + ""\t\t"" + m * 1.609);
		m++;
		//ditambahin iteratornya
		}
	}
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the use of comments, variable names, and overall code organization. Sample 2 includes comments in a different language and uses a different class name, suggesting that while the core logic is similar due to the nature of the problem, the differences in implementation indicate they are likely independent solutions rather than a case of direct plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        int mil = 1;

        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. They both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The differences are minimal, such as the class name (`T4` vs. `Main`) and the variable name (`miles` vs. `mil`). These minor changes do not significantly alter the core logic and structure of the code, suggesting that one sample may have been derived from the other with minimal modifications to disguise the copying.

Pl"
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        int jarak = 1;
        while (jarak <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
            jarak++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, comments, and overall code organization. The second sample includes comments in a different language and uses a different variable name for the distance. These differences suggest that while the two samples solve the same problem, they are likely independent solutions rather than a case of direct plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        //ulang sebanyak 10x
        int mil = 1;
        while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }
    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. They both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The differences are minimal and mostly superficial, such as the class name and the presence of comments in the second sample. Given the simplicity of the task and the high likelihood of similar solutions, these differences are not sufficient to conclude independent development. The overall structure and logic are too similar, suggesting that one sample may have been derived from the other"
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L2 {
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        int counter = 1;
        while (counter <= 10) {
            //Menampilkan hasil
            //counter = miles
            System.out.println(counter + ""\t\t"" + counter * 1.609);
            counter++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names (`miles` vs. `counter`), comments, and overall code organization. These differences suggest that they are likely independent solutions rather than a case of direct plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L2 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");

        System.out.println(""-------------------------------"");

        int mil = 1;

        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }

    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. They both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The differences are minimal, such as the variable name (`miles` vs. `mil`), but the core logic and structure are identical. This suggests that one sample may have been derived from the other or both from a common source, indicating likely plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil = 1;//inisialisasi while pertama kali
        while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }//looping dari 1 sampai 10
   }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the presence of comments, variable names, and overall code organization. Sample 2 includes comments and a different class name, suggesting it was written independently. The similarities are likely due to the nature of the problem and the constraints of the Java language, rather than plagiarism."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        
        //Use while loop
        int miles = 1;
        while (miles <= 10) {
                System.out.println(miles + ""\t\t"" + miles * 1.609);
                miles++;
        }
    }
}",True,,True,"The two code samples are nearly identical in every aspect, including the class structure, variable names, loop structure, and output formatting. The only difference is the author comment in Code Sample 2, which does not affect the core logic or implementation. This high degree of similarity strongly suggests that one sample was directly copied from the other or both were copied from a common source, indicating plagiarism."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}
}",True,,True,"The two code samples are nearly identical in every aspect, including the structure, logic, and specific details such as the use of a `while` loop, the output format, and the conversion factor for miles to kilometers. The only differences are in the class names and the presence of a comment header in the second sample. These minor changes do not significantly alter the core functionality or implementation, strongly suggesting that one sample was directly copied from the other with minimal modifications to disguise the copying."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		int miles = 1;
		while (miles <= 10) {
		System.out.println(miles + ""\t\t"" + miles * 1.609);
		miles++;
		//ditambahin iteratornya
		}
	}
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as class names, comments, and minor formatting differences. The second sample includes additional comments and a different class name, which suggests some level of independent thought. Despite these differences, the core logic and approach are identical, indicating that one sample may have been derived from the other with minor modifications to disguise the copying."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
           int miles = 1;

        while (miles <= 10) {

            System.out.println(miles + ""\t\t"" + miles * 1.609);


            miles++;
            }
        }
    }",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. They both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The core logic and output formatting are identical, suggesting that one sample may have been derived from the other. However, the second sample includes a comment and a different class name (`Main`), which are minor modifications that do not significantly alter the core functionality. These superficial changes are often indicative"
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        int miles = 1;
        while (miles <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as comments, variable usage, and overall code organization. The second sample includes comments in a different language and additional explanations, suggesting they are likely independent solutions rather than a case of direct plagiarism."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 
{
    public static void main(String[] args) 
    {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        int miles = 1;
        while (miles <= 10) 
        {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
}",True,,True,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. They both use a `while` loop to iterate from 1 to 10 and print the miles and their corresponding kilometers. The similarities in the structure, logic, and specific details such as the loop and the conversion factor strongly suggest that one sample was derived from the other or both from a common source. The presence of a license header in the second sample does not significantly alter the core logic and structure, indicating likely plagiarism."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L1 {
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        int miles = 1;
        while (miles <= 10) {
            //Menampilkan hasil
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the presence of comments in different languages, the use of different class names, and the overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class pengulangan {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int miles = 1;//inisialisasi while pertama kali
        while (miles <= 10) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }//looping dari 1 sampai 10
   }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the inclusion of comments, variable usage, and overall code organization. The second sample includes additional comments and a different class name, suggesting that while they solve the same problem, they were likely developed independently rather than being direct copies of each other."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int mile;
    public static void main(String[] args) {
        mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        loops();
    }
    
    public static void loops(){
        //Use while loop
        for (int i = 10; i > 0; i--) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
            
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method called `loops`. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static double Konversi(int miles) {
        if(miles <=10) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            return Konversi(++miles);
        }
        return 0;
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        Konversi(1);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as the use of recursion in Sample 2 versus a `while` loop in Sample 1. The recursive approach in Sample 2 is a distinct and more complex method compared to the iterative approach in Sample 1. These differences in coding style, method usage, and overall structure suggest they are likely independent solutions rather than a case of direct plagiarism."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	static void hitHasil(int a)
	{
		for(;a<=10;a++)
		{
			System.out.println(a + ""\t\t"" + a * 1.609);
		}
	}
	public static void main(String[] args) 
	{
		// print seusatu
	System.out.print(""Miles\t\tKilometers\n"");
	System.out.print(""-------------------------------\n"");
	// pake pengulangan while
		hitHasil(1);
		
	}
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, method usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a separate static method `hitHasil` and a `for` loop. Additionally, Sample 2 includes extra comments and a different approach to printing the header. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {
    public static void printMil (){

        for(int i =1;i<=10;i++){
            System.out.println(i + ""\t\t"" + i * 1.609);

        }
    }
    public static void main(String[] args) {

        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        printMil();
    }
}",True,,True,"The two code samples share the same core logic and output format for converting miles to kilometers. However, they differ in their loop structures and the way they handle the iteration. Sample 1 uses a `while` loop directly within the `main` method, while Sample 2 uses a `for` loop within a separate method (`printMil`). Despite these differences, the overall approach and specific details like the conversion factor and output format are very similar, suggesting that one sample may have been derived from the other with some modifications to disguise the copying."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        printJarakDalamMilDanKilo(jarak);
        
    }
   
    public static void printJarakDalamMilDanKilo(int jarak){
        for(jarak = jarak; jarak <= 10; jarak = jarak + 1){
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
        }
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, output formatting, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method. Additionally, Sample 2 includes comments and a different approach to variable initialization and method calls. These differences suggest they are likely independent solutions rather than a case of direct plagiarism.

Plag"
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void konversi(int mile) {
        if (mile != 11) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
            mile++;
            konversi(mile);
        }
    }
    
    public static void main(String[] args) {
        int mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        konversi(mile);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses a `while` loop to iterate through the miles, while Sample 2 uses a recursive method to achieve the same result. These differences in approach and coding style suggest that they are likely independent solutions rather than a case of direct plagiarism."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L6 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        ShowTable(10);
    }

    private static void ShowTable(int jumlahData) {
        for (int i = jumlahData; i >= 1; i--) {
            //Menampilkan hasil
            int temp = jumlahData + 1 - i;
            System.out.println(temp + ""\t\t"" + ConvertMilesToKilo(temp));
        }
    }

    private static double ConvertMilesToKilo(int miles) {
        return miles * 1.609;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, method usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method (`ShowTable`) and includes an additional method (`ConvertMilesToKilo`) for the conversion. These differences in coding style, method organization, and variable handling suggest they are likely independent solutions rather than"
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L6 {

    public static void print(int mil)
    {
          for ( int i = 10 ; i > 0 ; i --){

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }
    }
    public static void main(String[] args) {
        
        int mil = 1 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        print(mil);

    }
}",True,,True,"The two code samples share the same core logic and output format for converting miles to kilometers. However, they differ in their loop structures and the way they handle the iteration. Sample 1 uses a `while` loop, while Sample 2 uses a `for` loop within a separate method. Despite these differences, the overall approach and specific details like the conversion factor and output format are very similar, suggesting that one sample may have been derived from the other with some modifications to disguise the copying."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        print(1);
   }
   
   public static void print(int mil)
   {
       int x;
       for(int i=mil;i<=10;i++) {
            x=(int)(i*1.609);
            System.out.println(i + ""\t\t"" + x);         
        }//looping dari 1 sampai 10

   }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as loop structure, variable usage, and overall code organization. Sample 1 uses a `while` loop directly in the `main` method, while Sample 2 uses a `for` loop within a separate method. Additionally, Sample 2 includes a conversion to an integer for the kilometers, which is not present in Sample 1. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T03 {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = s.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = s.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = s.nextDouble();

        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI Is "" + bmi);

        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        }
        else if(bmi>=18.5 && bmi<25){
            System.out.println(""Normal"");
        }
        else if(bmi>=25 && bmi<35){
            System.out.println(""Overweight"");
        }
        else {
            System.out.println(""Obese"");
        }
    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;
public class T03
{
   public static void main(String[] args)
   {
     Scanner sc = new Scanner(System.in);
      System.out.print(""Enter weight in pounds: "");
      int w= sc.nextInt();
      System.out.print(""Enter feet: "");
      int f= sc.nextInt();
      System.out.print(""Enter inches: "");
      int i= sc.nextInt();
      double bmi = ((w*0.45359237)/(((f*12+ i)*0.0254)*((f*12+i)*0.0254)));
      System.out.println(""BMI is ""+bmi);
      if(bmi < 18.5)
      {
         System.out.println(""Underweight"");
      }
      else if(bmi >= 18.5 && bmi < 25)
      {
         System.out.println(""Normal"");
      }
      else if(bmi >= 25 && bmi < 35)
      {
         System.out.println(""Overweight"");
      }
      else if(bmi >= 35)
      {
         System.out.println(""Obese"");
      }


   }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as different variable names and a slightly different approach to the BMI calculation and conditional checks, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T03 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double weight, feet, inches, height, bmi;
        
        System.out.print(""Enter weight in pounds: "");
        weight = sc.nextDouble();
        
        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        
        System.out.print(""Enter inches: "");
        inches = sc.nextDouble();
        
        height = feet * 12 + inches;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        
        System.out.println(""BMI is "" + bmi);
        if(bmi < 18.5) {
            System.out.println(""Underweight"");
        }else if (bmi >= 18.5 && bmi < 25) {
            System.out.println(""Normal"");
        }else if(bmi >= 25 && bmi < 35) {
            System.out.println(""Overweight"");
        }else if(bmi >= 35) {
            System.out.println(""Obese"");
        }
    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        int weight=sc.nextInt();
        System.out.print(""Enter feet: "");
        int feet=sc.nextInt();
        System.out.print(""Enter inches: "");
        int inches=sc.nextInt();
        double height=feet*12+inches;
        double bmi=weight*0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is ""+bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi>=18.5 && bmi<25)
            System.out.println(""Normal"");
        else if(bmi>=25 && bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pound: "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = sc.nextDouble();
        double height = feet*12+inches;
        double bmi = weight*0.45359237/((height*0.0254)*(height*0.0254));
        System.out.println(""BMI is ""+bmi);
        if(bmi<18.5)
        {
            System.out.println(""Underweight"");
        }
        else if(bmi>=18.5 && bmi<25)
        {
            System.out.println(""Normal"");
        }
        else if(bmi>=25 && bmi<35)
        {
            System.out.println(""Overweight"");
        }
        else
        {
            System.out.println(""Obese"");
        }
    }
    
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t03 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds : "");
        double weight = sc.nextDouble();

        System.out.print(""Enter feet : "");
        double feet = sc.nextDouble();

        System.out.print(""Enter inches : "");
        double inches = sc.nextDouble();

        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254)
                * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""underweight"");
        } else if (bmi >= 18.5 && bmi < 25) {
            System.out.println(""normal"");
        } else if (bmi >= 25 && bmi < 35) {
            System.out.println(""overweight"");
        } else {
            System.out.println(""obese"");
        }

    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T03 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter Inches: "");
        double inches = sc.nextDouble();
        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / Math.pow((height * 0.0254), 2);
        System.out.println(""BMI is ""+ bmi);
        if(bmi<18.5){
            System.out.println(""underweight"");
        } else if(bmi<25){
            System.out.println(""normal"");
        } else if(bmi<35){
            System.out.println(""overweight"");
        } else{
            System.out.println(""obese"");
        }
    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T03 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds : "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet : "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches : "");
        double inches = sc.nextDouble();
        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254)) ;
        System.out.println(""The area is "" + bmi);
        if (bmi < 18.5){
            System.out.println(""Underweight"");
        }else if (bmi < 25){
            System.out.println(""Normal"");
        }else if (bmi < 35){
            System.out.println(""Overweight"");
        }else {
            System.out.println(""Obese"");
        }
    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a slightly different range for the ""Overweight"" category, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T03 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double weight, feet, inches, bmi, height;
        System.out.print(""Enter weight in pounds: "");
        weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inches = sc.nextDouble();
        height = feet * 12 + inches;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi<25)
            System.out.println(""Normal"");
        else if(bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
    
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as slightly different variable names and a minor change in the BMI category threshold (using 35 instead of 30 for ""Overweight""), indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 95F548D9E3DDDD7F63A8FCEF1E4957F4 F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T03 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter weight in pounds : "");
        double weight = sc.nextDouble();

        System.out.print(""Enter feet : "");
        double feet = sc.nextDouble();

        System.out.print(""Enter inches : "");
        double inches = sc.nextDouble();

        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254)
                * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi >= 18.5 && bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi >= 25 && bmi < 35) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""obese"");
        }
    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No3 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
                Scanner sc = new Scanner(System.in);
        double height,weight,feet,inches,bmi;
        System.out.print(""Enter weight in pounds: "");
        weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inches = sc.nextDouble();
        height = feet * 12 + inches;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi<25)
            System.out.println(""Normal"");
        else if(bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
    
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a slightly different approach to the BMI categorization (e.g., using 35 instead of 30 for the ""Overweight"" category), indicating it's not a direct copy but rather a closely inspired adaptation."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal3 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = sc.nextDouble();
        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height *0.0254)*(height *0.0254));
        System.out.println(""BMI is ""+bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi>=18.5 && bmi<25)
            System.out.println(""Normal"");
        else if(bmi>=25 && bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",False,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as the inclusion of additional imports (e.g., `DecimalFormat`), slight changes in the conditional statements, and a different class name, indicating it's not a direct copy but rather a closely inspired adaptation."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
    }
}",True,,True,"The two code samples are nearly identical in structure, logic, and specific details, including the input prompts, BMI calculation formula, and output format. The only differences are in the comments and the class names, which are superficial and do not affect the core functionality of the code. This high degree of similarity strongly suggests that one sample was copied from the other or both were derived from a common source, indicating likely plagiarism."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		double kaki;
		double bobot;
		double bmi;
		double inc;
		double height;
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = kaki * 12 + inc;
		 bmi = bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure, indicating it's not a direct copy but rather a closely inspired adaptation."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); //menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Prompt the user to enter weight in pounds

        //enter inches
        System.out.print(""Enter inches: "");
        double inchesUser = sc.nextDouble();

        System.out.print(""Enter weight in pounds: "");
        double weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feetUser = sc.nextDouble();

        //process
        double heightUser = feetUser * 12 + inchesUser;
        // Compute BMI
        double bmi = weightUser * 0.45359237 / ((heightUser * 0.0254) * (heightUser * 0.0254));
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L3 {
    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        double tinggi = kaki * 12 + inch;

        double rata = berat * 0.45359237 /((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + rata);
        if (rata < 18.5)
            System.out.println(""Underweight"");
        else if (rata < 25)
            System.out.println(""Normal"");
        else if (rata < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double berat;
        double feet;
        double inches;
        double tinggi;
        double bmi;

        System.out.print(""Enter weight in pounds: "");
        berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        feet = in.nextDouble();
        System.out.print(""Enter inches: "");
        inches = in.nextDouble();
        tinggi = feet * 12 + inches;

        bmi = berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L3 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat = 0;
        double inci = 0;
        double tinggi = 0 ;
        double bmi = 0;
        double feet = 0;
        
        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
         tinggi = feet * 12 + inci;

       bmi = berat * 0.45359237
                / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure, indicating it's not a direct copy but rather a closely inspired adaptation. The core logic and approach are nearly identical, suggesting that the second sample (L3) is likely derived from the first (T3) with minor modifications to disguise the copying.

Pl"
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat;
        double feet;
        double inches;
        double height;
        double bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double weights,feets,inches,heights,bmi;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        
        //Compute BMI
        heights = feets * 12 + inches;
        bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        cetak();
    }
    public static void cetak(){
        //Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, a reorganized code structure with a separate function for displaying the result, and additional private static variables, indicating it's not a direct copy but rather a closely inspired adaptation."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double feet, double inches) {
        return weight * 0.45359237 / ((hitungTinggi(feet, inches) * 0.0254) * (hitungTinggi(feet, inches) * 0.0254));
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        // Compute BMI
        double bmi = hitungBmi(weight, feet, inches);
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, the introduction of helper methods (`hitungTinggi` and `hitungBmi`), and a reorganized code structure. These modifications indicate that while the second sample is not a direct copy, it is a closely inspired adaptation of the first sample."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	static double hitHeight(double kaki, double inc)
	{
		return kaki * 12 + inc;
	}
	static double hitBmi(double bobot, double height)
	{
		return bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
	}
	public static void main(String[] args) 
	{
		double kaki;
		double bobot;
		double bmi;
		double inc;
		double height;
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = hitHeight(kaki,inc);
		 bmi = hitBmi(bobot,height);
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, a reorganized code structure with separate functions for height and BMI calculations, and additional comments. These modifications indicate it's not a direct copy but rather a closely inspired adaptation."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {
    public static double countHeightUser(double feet,double inches){
        return feet*12+inches;
    }
    public static double countBmi (double height,double weight){
        return  weight * 0.45359237 /        ((height * 0.0254) * (height * 0.0254));
    }
    public static void printBmi(double bmi){
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");

    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Prompt the user to enter weight in pounds

        //enter inches
        System.out.print(""Enter inches: "");
        double inchesUser = sc.nextDouble();

        System.out.print(""Enter weight in pounds: "");
        double weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feetUser = sc.nextDouble();

        //process
        double heightUser = countHeightUser(feetUser,inchesUser);
        // Compute BMI
        double bmi =countBmi(heightUser,weightUser);
        // Display result
        System.out.println(""BMI is "" + bmi);
        printBmi(bmi);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as the use of separate methods for height calculation, BMI calculation, and BMI category printing, indicating it's not a direct copy but rather a closely inspired adaptation. The core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T3) with some modifications"
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat,feet,inches,height,bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = hitungBmi(berat, height);
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
        
    }
    
    public static double hitungBmi(double berat, double height){
        double bmi;
        bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        return bmi;
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 
{
    public static void main(String[] args) 
    {
        Scanner in = new Scanner(System.in);
        double berat;
        double kaki;
        double inchi;
        double tinggi;

        System.out.print(""Enter weight in pounds: "");
        berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        kaki = in.nextDouble();
        System.out.print(""Enter inches: "");
        inchi = in.nextDouble();
        tinggi = kaki * 12 + inchi;

        hitungBmi(berat, tinggi);
    }

    //calculate BMI and output message
    private static void hitungBmi(double weight, double height) {
        double bmi;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
        {
            System.out.println(""Underweight"");
        }
        else if (bmi < 25)
        {
            System.out.println(""Normal"");
        }
        else if (bmi < 30)
        {
            System.out.println(""Overweight"");
        }
        else
        {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L4 {
    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        double tinggi = kaki * 12 + inch;

        double rata = hitungBMI(berat, tinggi);

        BMIKategori(rata);
    }
    
    private static double hitungBMI(double weight, double height){
        return weight * 0.45359237 /((height * 0.0254) * (height * 0.0254));
    }
    
    private static void BMIKategori(double BMI){
        System.out.println(""BMI is "" + BMI);
        if (BMI < 18.5)
            System.out.println(""Underweight"");
        else if (BMI < 25)
            System.out.println(""Normal"");
        else if (BMI < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, a reorganized code structure with separate functions for BMI calculation and categorization, and additional comments. These modifications indicate that while the second sample is not a direct copy, it is a closely inspired adaptation of the first sample."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L4 {
    public static double hitBmi(double berat, double tinggi)
    {
        return berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat = 0;
        double inci = 0;
        double tinggi = 0 ;
       
        double feet = 0;
        
        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
         tinggi = feet * 12 + inci;

        System.out.println(""BMI is "" + hitBmi(berat,tinggi));
        if (hitBmi(berat,tinggi) < 18.5) {
            System.out.println(""Underweight"");
        } else if (hitBmi(berat,tinggi) < 25) {
            System.out.println(""Normal"");
        } else if (hitBmi(berat,tinggi) < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = HitBMI(w, h);//menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        Result(TotalBmi);
    }
    
    public static double HitBMI(double w,double h)
    {
        return  w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); 
    }
    
    public static void Result(double TotalBmi)
    {
         if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for BMI calculation and result display, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double weights,feets,inches,heights,bmi;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        
        //Compute BMI
        heights = feets * 12 + inches;
        bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        cetak();
    }
    public static void cetak(){
        //Display result
        System.out.println(""BMI is "" + bmi); 
        if (bmi >= 30){
            System.out.println(""Obese"");
        } else if (bmi >= 25) {
            System.out.println(""Overweight"");
        }else if (bmi >= 18.5) {
            System.out.println(""Normal"");
        } else {
            System.out.println(""Underweight"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double height) {
        return weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
    }
    
    public static void cekBmi(double bmi) {
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        // Compute BMI
        double bmi = hitungBmi(weight, hitungTinggi(feet, inches));
        // Display result
        System.out.println(""BMI is "" + bmi);
        cekBmi(bmi);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, a reorganized code structure with separate functions for height calculation, BMI calculation, and BMI category checking, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	static double kaki,bobot,bmi,inc,height;
	static double hitHeight(double kaki, double inc)
	{
		return kaki * 12 + inc;
	}
	static double hitBmi(double bobot, double height)
	{
		return bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
	}
	public static void main(String[] args) 
	{
		
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = hitHeight(kaki,inc);
		 bmi = hitBmi(bobot,height);
		
		
		// hasil
		System.out.print(""BMI is "" + bmi+""\n"");
		if (bmi < 18.5)
		System.out.print(""Underweight""+""\n"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for height and BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {
    public static double countHeightUser(double feet,double inches){
        return feet*12+inches;
    }
    public static double countBmi (double height,double weight){
        return  weight * 0.45359237 /        ((height * 0.0254) * (height * 0.0254));
    }
    public static void printBmi(double bmi){
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");

    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        //declare
        double inchesUser,weightUser,feetUser,heightUser,bmi;

        //enter inches
        System.out.print(""Enter inches: "");
        inchesUser = sc.nextDouble();

        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
       weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
       feetUser = sc.nextDouble();

        //process
        heightUser = countHeightUser(feetUser,inchesUser);
        // Compute BMI
        bmi =countBmi(heightUser,weightUser);
        // Display result
        System.out.print(""BMI is "");
        System.out.println(bmi);
        printBmi(bmi);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating BMI. However, they differ significantly in implementation details such as the use of helper methods in Sample 2 (`countHeightUser`, `countBmi`, and `printBmi`), variable names, and overall code organization. These differences suggest that the two samples were likely developed independently, even though they address the same problem."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat,feet,inches,height,bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = hitungBmi(berat, height);
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
        
    }
    
    public static double hitungBmi(double berat, double height){
        double bmi;
        bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        return bmi;
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double berat = 0;
        double feet, inches, tinggi = 0;

        System.out.print(""Enter weight in pounds: ""); berat = in.nextDouble();
        System.out.print(""Enter feet: ""); feet = in.nextDouble();
        System.out.print(""Enter inches: ""); inches = in.nextDouble();
        
        tinggi = feet * 12 + inches;
        
        bmi(berat, tinggi);
    }
    
    private static void bmi(double weight, double height) {
        double bmi = weight * 0.45359237 / Math.pow((height * 0.0254), 2);
        
        System.out.println(""BMI is "" + bmi);
        
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L5 {
    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();

        BMIKategori(hitungBMI(berat, kaki * 12 + inch));
    }
    
    private static double hitungBMI(double weight, double height){
        return weight * 0.45359237 /((height * 0.0254) * (height * 0.0254));
    }
    
    private static void BMIKategori(double BMI){
        System.out.println(""BMI is "" + BMI);
        if (BMI < 18.5)
            System.out.println(""Underweight"");
        else if (BMI < 25)
            System.out.println(""Normal"");
        else if (BMI < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for BMI calculation and categorization, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L5 {

    public static double hitBmi(double berat, double tinggi) {
        return berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat, inci, tinggi, feet = 0;

        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
        tinggi = feet * 12 + inci;

        System.out.println(""BMI is "" + hitBmi(berat, tinggi));
        if (hitBmi(berat, tinggi) < 18.5) {
            System.out.println(""Underweight"");
        } else if (hitBmi(berat, tinggi) < 25) {
            System.out.println(""Normal"");
        } else if (hitBmi(berat, tinggi) < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = HitBMI(w, h);//menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        Result(TotalBmi);
    }
    
    public static double HitBMI(double w,double h)
    {
        return  w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); 
    }
    
    public static void Result(double TotalBmi)
    {
         if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for BMI calculation and result display, indicating it's not a direct copy but rather a closely inspired adaptation."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        double weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        double feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        
        double heights = feets * 12 + inches;
        
        //Compute BMI
        double bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        
        //Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as slightly different variable names and a reorganized code structure, indicating it's not a direct copy but rather a closely inspired adaptation."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double height) {
        return weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = hitungTinggi(feet, inches);
        // Compute BMI
        double bmi = hitungBmi(weight, height);
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for height and BMI calculations, indicating it's not a direct copy but rather a closely inspired adaptation."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		double bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		double kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		double inc = input.nextDouble();
		double height = kaki * 12 + inc;
		double bmi = bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure, indicating it's not a direct copy but rather a closely inspired adaptation. The core logic and approach are nearly identical, suggesting that the second sample (inputoutput) is likely derived from the first (T3) with minor modifications to disguise the copying.

Pl"
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feetUser = sc.nextDouble();
        //enter inches
        System.out.print(""Enter inches: "");
        double inchesUser = sc.nextDouble();

        //process
        double heightUser = feetUser * 12 + inchesUser;
        // Compute BMI
        double bmi = weightUser * 0.45359237 / ((heightUser * 0.0254) * (heightUser * 0.0254));
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        double berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;
        // Hitung bmi di sini
        double bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with comments in a different language, indicating it's not a direct copy but rather a closely inspired adaptation."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = in.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = in.nextDouble();
        double tinggi = feet * 12 + inches;

        double bmi = berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L2 {
    public static void main(String[] args) {
        Scanner inp = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        double tinggi = kaki * 12 + inch;

        double rata = berat * 0.45359237 /((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + rata);
        if (rata < 18.5)
            System.out.println(""Underweight"");
        else if (rata < 25)
            System.out.println(""Normal"");
        else if (rata < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L2 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        double inci = sc.nextDouble();
        double tinggi = feet * 12 + inci;

        double bmi = berat * 0.45359237
                / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure, indicating it's not a direct copy but rather a closely inspired adaptation. The core logic and approach are nearly identical, suggesting that the second sample (L2) is likely derived from the first (T3) with minor modifications to disguise the copying.

Pl"
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print(""Enter weight in pounds : "");
        double w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        double f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        double i = input.nextDouble();//inputan inches
        double h = f * 12 + i;// menghitung tinggi       
        double TotalBmi = w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); //menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with comments in a different language, indicating it's not a direct copy but rather a closely inspired adaptation."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        
        double height = feet * 12 + inches;
        
        //Compute BMI
        double bmi = weight * 0.45359237
        / ((height * 0.0254) * (height * 0.0254));
        
        //Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of minor formatting differences and the presence of author comments, indicating it's not a direct copy but rather a closely inspired adaptation. The core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T3) with minimal modifications to disguise the copying."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		double weight = input.nextDouble();
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();
		double height = feet * 12 + inches;
		double bmi = weight * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as a different class name and minor changes in comments and formatting, indicating it's not a direct copy but rather a closely inspired adaptation."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class percabangan {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();//inputan weight
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();//inputan feet
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();//inputan inches
        double height = feet * 12 + inches;// menghitung tinggi       
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254)); //menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with additional comments in a different language, indicating it's not a direct copy but rather a closely inspired adaptation."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        //enter inches
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();

        //process
        double height = feet * 12 + inches;
        // Compute BMI
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as slight changes in comments and formatting, indicating it's not a direct copy but rather a closely inspired adaptation."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L1 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();

        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;

        double bmi = weight * 0.45359237 /((height * 0.0254) * (height * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //masukkan berat dan tinggi
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;
        
        //hitung BMI
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        
        //kategori
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;
        // Hitung bmi di sini
        double bmi = weight * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated comments and a slightly different code structure, indicating it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double weights,feets,inches,heights,bmi;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        
        //Compute BMI
        heights = feets * 12 + inches;
        bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        cetak();
    }
    public static void cetak(){
        //Display result
        System.out.println(""BMI is "" + bmi); 
        if (bmi >= 30){
            System.out.println(""Obese"");
        } else if (bmi >= 25) {
            System.out.println(""Overweight"");
        }else if (bmi >= 18.5) {
            System.out.println(""Normal"");
        } else {
            System.out.println(""Underweight"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double feet, double inches) {
        return weight * 0.45359237 / ((hitungTinggi(feet, inches) * 0.0254) * (hitungTinggi(feet, inches) * 0.0254));
    }
    
    public static String cekBmi(double bmi) {
        if (bmi < 18.5) {
            return ""Underweight"";
        } else if (bmi < 25) {
            return ""Normal"";
        } else if (bmi < 30) {
            return ""Overweight"";
        } else {
            return ""Obese"";
        }
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        // Display result
        System.out.println(""BMI is "" + hitungBmi(weight, feet, inches));
        System.out.println(cekBmi(hitungBmi(weight, feet, inches)));
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, a reorganized code structure with separate functions for height and BMI calculation, and a method for checking BMI categories. These modifications indicate it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	static double kaki,bobot,bmi,inc,height;
	static double hitHeight(double kaki, double inc)
	{
		return kaki * 12 + inc;
	}
	static double hitBmi(double bobot, double height)
	{
		return bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
	}
	public static void main(String[] args) 
	{
		
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = hitHeight(kaki,inc);
		 bmi = hitBmi(bobot,height);
		
		
		// hasil
		System.out.print(""BMI is "" + bmi+""\n"");
		if(bmi>=30)
		System.out.println(""Obese"");
	else if(bmi>=25)
		System.out.println(""Overweight"");
	else if (bmi >= 18.5)
		System.out.println(""Normal"");
	else
		System.out.print(""Underweight""+""\n"");
	
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, a reorganized code structure with separate functions for height and BMI calculation, and a different class structure, indicating it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {
    public static double countHeightUser(double feet,double inches){
        return feet*12+inches;
    }
    public static double countBmi (double height,double weight){
        return  weight * 0.45359237 /    (Math.pow((height * 0.0254),2));
    }
    public static void printBmi(double bmi){
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi > 18.5&& bmi < 25)
            System.out.println(""Normal"");
        else if (bmi > 25&& bmi < 30)
            System.out.println(""Overweight"");
        else if(bmi > 30)
            System.out.println(""Obese"");

    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        //declare
        double inchesUser,weightUser,feetUser,heightUser,bmi;

        //enter inches
        System.out.print(""Enter inches: "");
        inchesUser = sc.nextDouble();

        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        feetUser = sc.nextDouble();

        //process
        heightUser = countHeightUser(feetUser,inchesUser);
        // Compute BMI
        bmi =countBmi(heightUser,weightUser);
        // Display result
        System.out.print(""BMI is "");
        System.out.println(bmi);
        printBmi(bmi);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as the use of separate methods for height calculation, BMI calculation, and BMI category printing, indicating it's not a direct copy but rather a closely inspired adaptation. The core logic and approach are nearly identical, suggesting that the second sample (Main) is likely derived from the first (T3) with some modifications"
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat,feet,inches,height,bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = hitungBmi(berat, height);
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
        
    }
    
    public static double hitungBmi(double berat, double height){
        double bmi;
        bmi = berat * 0.45359237
                / (Math.pow((height * 0.0254), 2));
        return bmi;
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double berat, feet,inches, tinggi;

        System.out.print(""Enter weight in pounds: "");
        berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        feet = in.nextDouble();
        System.out.print(""Enter inches: "");
        inches = in.nextDouble();
        
        result(fungsiBmi(berat, feet, inches));
    }

    private static double fungsiBmi(double berat, double feet, double inches) {
        double tinggi = feet * 12 + inches;
        return berat * 0.45359237 / Math.pow((tinggi * 0.0254), 2);
    }
    
    private static void result(double res) {
        System.out.println(""BMI is "" + res);
        if (res < 18.5)
            System.out.println(""Underweight"");
        else if (res >= 18.5 && res < 25)
            System.out.println(""Normal"");
        else if (res >= 25 && res < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for BMI calculation and result display, indicating it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L6 {

    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        
        //Print Hasil perhitungan
        BMIKategori(hitungBMI(berat, kaki * 12 + inch));
    }

    private static double hitungBMI(double weight, double height) {
        double temp = height * 0.0254;
        return weight * 0.45359237 / (temp * temp);
    }

    private static void BMIKategori(double BMI) {
        System.out.println(""BMI is "" + BMI);
        if (BMI > 30) {
            System.out.println(""Obese"");
        } else if (BMI > 25) {
            System.out.println(""Overweight"");
        } else if (BMI > 18.5) {
            System.out.println(""Normal"");
        } else {
            System.out.println(""Underweight"");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for BMI calculation and categorization, indicating it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L6 {

    public static double hitBmi(double berat, double tinggi) {
        return berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat, inci, tinggi, feet = 0;

        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
        tinggi = feet * 12 + inci;

        System.out.println(""BMI is "" + hitBmi(berat, tinggi));
        if (hitBmi(berat, tinggi) < 25 && hitBmi(berat, tinggi) > 18.5) {
            System.out.println(""Normal"");
        } else if (hitBmi(berat, tinggi) < 30 && hitBmi(berat, tinggi) > 25) {
            System.out.println(""Overweight"");
        } else if (hitBmi(berat, tinggi) > 30) {
            System.out.println(""Obese"");
        } else {
            System.out.println(""Underweight"");
        }
    }

}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate function for BMI calculation, indicating it's not a direct copy but rather a closely inspired adaptation."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = HitBMI(w, h);//menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        Result(TotalBmi);
    }
    
    public static double HitBMI(double w,double h)
    {
        return  (w * 0.45359237) / ((h * 0.0254) * (h * 0.0254)); 
    }
    
    public static void Result(double TotalBmi)
    {
         if (TotalBmi > 30) {
            System.out.println(""Obese "");
        } else if (TotalBmi < 25 && TotalBmi>18.5) {
            System.out.println(""Normal "");
        } else if (TotalBmi>25 && TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Underweight "");
        }
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, BMI calculation formulas, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names, a reorganized code structure with separate functions for BMI calculation and result display, and additional comments. These modifications indicate it's not a direct copy but rather a closely inspired adaptation."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T02 {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder :"");
        double radius = s.nextDouble();
        double length = s.nextDouble();
        double area = radius *radius * 3.14159;

        DecimalFormat df = new DecimalFormat("".####"");
        DecimalFormat df2= new DecimalFormat("".#"");
        double volume = area * length;
        System.out.println(""The area is ""+df.format(area));
        System.out.println(""The volume is ""+df2.format(volume));
    }
}",False,,False,"The two code samples share the same basic purpose and mathematical calculations for determining the area and volume of a cylinder, which is expected given they solve the same problem. However, they differ significantly in implementation details such as the use of `DecimalFormat` for formatting the output in Sample 2, and the presence of additional comments and formatting in Sample 2. These differences in coding style, variable handling, and output formatting suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;
public class T02
{
   public static void main(String[] args)
   {
      Scanner sc = new Scanner(System.in);
      System.out.print(""Enter the radius and length of a cylinder: "");
      String radlen= sc.nextLine();
      String[] splited = radlen.split(""\\s+"");
      float rad = Float.parseFloat(splited[0]);
      float len = Float.parseFloat(splited[1]);
      System.out.println(""The area is ""+Math.round(rad*rad*3.14159*10000.0)/10000.0);
      System.out.println(""The volume is ""+Math.round(rad*rad*3.14159*len*10.0)/10.0);

   }
}",False,,False,"The two code samples share the same basic purpose and input/output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as how they handle input (one uses `nextDouble` while the other uses `nextLine` and splits the string), the precision of the output, and the use of mathematical functions. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;
import java.text.DecimalFormat;

public class T02 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double radius, length, area, volume;
        
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = sc.nextDouble();
        length = sc.nextDouble();
        
        area = radius * radius * 3.14159;
        volume = area * length ;
        
        DecimalFormat a = new DecimalFormat(""0.0000"");
        DecimalFormat v = new DecimalFormat(""0.0"");
        
        System.out.println(""The area is "" + a.format(area));
        System.out.println(""The volume is "" + v.format(volume));
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of `DecimalFormat` for formatting the output in Sample 2, variable declarations, and overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.sql.SQLOutput;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius=sc.nextDouble();
        int length=sc.nextInt();

        double area=radius*radius*3.14159;
        System.out.println(""The area is ""+area);
        System.out.println(""The volume is ""+area*length);
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ in several key aspects, such as the use of different variable types for the length (double vs. int), the inclusion of an unnecessary import statement in the second sample, and slight differences in the output statements. These differences suggest that while the samples solve the same problem, they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 672CAF27F5363DC833BDA5099775E891
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        System.out.print(""Enter the radius and length of a cylinder:"");
        Scanner sc = new Scanner(System.in);
        double radius = sc.nextDouble();
        int length = sc.nextInt();
        double area = radius*radius*3.14159;
        double volume = length*radius;
        System.out.println(""The area is ""+area);
        System.out.println(""The volume is ""+volume);
        
    }
    
}",False,,False,"The two code samples share the same basic purpose and input/output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the data type for the length variable, the calculation of the volume, and the overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.text.DecimalFormat;
import java.util.Scanner;

public class t02 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder : "");
        double radius = sc.nextDouble();
        double length = sc.nextDouble();
        double area = radius * radius * 3.14159;
        double volume = (radius * radius * 3.14159) * length;
        DecimalFormat areaFormat = new DecimalFormat(""#.#####"");
        DecimalFormat volumeFormat = new DecimalFormat(""#.#"");

        System.out.println(""The area is "" + areaFormat.format(area));
        System.out.println(""The volume is "" + volumeFormat.format(volume));
    }

}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of `DecimalFormat` for formatting the output in Sample 2, and the overall code organization and variable naming conventions. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T02 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder:"");
        double radius = sc.nextDouble();
        double length = sc.nextDouble();
        double area = Math.pow(radius, 2) * Math.PI;
        double volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
        
        
    }
}",False,,False,"The two code samples share the same basic purpose and input/output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ in their implementation details, such as the use of `Math.pow` and `Math.PI` in Sample 2 versus direct multiplication and a hardcoded value for π in Sample 1. These differences in coding style and specific implementation details suggest that they are likely independent solutions to a common beginner programming exercise rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author Shiroinu
 */
public class T02 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and the length of the cilinder : "");
        double rad = sc.nextDouble();
        double length = sc.nextDouble();
        double area = Math.PI * rad * rad;
        double volume = Math.PI * rad * rad* length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of `Math.PI` in Sample 2 versus a hardcoded value of `3.14159` in Sample 1, variable names, and slight differences in the input prompt and output messages. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T02 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double radius, length, area, volume;
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = sc.nextDouble();
        length = sc.nextDouble();
        area = radius * radius * 3.14159;
        volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
    }
    
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable declaration, input handling, and overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T02 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter the radius and length of a cylinder : "");
        double radius = sc.nextDouble();
        double length = sc.nextDouble();

        double area = radius * radius * 3.14159;
        double volume = area * length;

        System.out.println(""The area is "" + area);
        System.out.println(""The volume "" + volume);

    }
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, input prompts, and overall code organization. The differences in coding style, such as the use of comments and formatting, suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No2 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        double radius, length, area, volume;
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = sc.nextDouble();
        length = sc.nextDouble();
        area = radius * radius * 3.14159;
        volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
        
    }
    
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable declaration, comments, and overall code organization. Sample 1 uses inline variable declarations and a more straightforward approach, while Sample 2 includes additional comments and a slightly different structure. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        DecimalFormat dfArea = new DecimalFormat(""#.####"");
        DecimalFormat dfVolume = new DecimalFormat(""#.#"");

        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = sc.nextDouble();
        double panjang = sc.nextDouble();
        System.out.println(""The area is "" + dfArea.format((radius*radius*3.14159)));
        System.out.println(""The volume is ""+ dfVolume.format(((radius*radius*3.14159)*panjang)));
    }
    
}",False,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of `DecimalFormat` for formatting the output in Sample 2, different variable names, and overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable usage, output formatting, and overall code organization. Sample 1 uses local variables within the `main` method, while Sample 2 uses class-level variables. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}
}",True,,True,"The two code samples are nearly identical in every aspect, including the input prompts, variable names, mathematical calculations, and output statements. The only differences are the class names and the presence of a comment header in the second sample. These minor changes do not constitute a significant alteration of the original code, strongly suggesting that one sample was directly copied from the other or both were derived from a common source."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	public static void main(String[] args){
		Scanner masukan = new Scanner(System.in);
		double rad,panjang;
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
		
		double a;
		//perhitungan
		a = rad * rad * 3.14159;
		double vol;
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, calculation formulas for area and volume, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a slightly different code structure, indicating it's not a direct copy but rather a closely inspired adaptation."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder
        double r=0;
        double len=0;
        double a =0;
        double volume=0;

        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = r * r * 3.14159;
        volume = a * len;
        //Output
        System.out.println(""The area is "" + a);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, input handling, and overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
       
        double jejari = input.nextDouble();
        double panjang = input.nextDouble();
		
        double area = jejari * jejari * 3.14159;
        double volume = area * panjang;
        // Mencetak luas dan volume
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
        }
}",True,,True,"The two code samples share the same basic structure and logic for calculating the area and volume of a cylinder, including identical input prompts and mathematical formulas. However, the second sample includes comments in a different language and uses different variable names (`jejari` and `panjang` instead of `radius` and `length`). Despite these superficial differences, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 
{

    public static void main(String[] args) 
    {
        Scanner x = new Scanner(System.in);
        double vol = 0;
        double luasAlas = 0;
        
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = x.nextDouble();
        double length = x.nextDouble();
        
        luasAlas = radius * radius * 3.14159;
        vol = luasAlas * length;
        
        System.out.println(""The area is "" + luasAlas);
        System.out.println(""The volume of the cylinder is "" + vol);
    }
}",True,,True,"The two code samples share significant similarities in their overall structure, purpose, and specific details like the input prompt, calculation formulas, and output formats. Both samples prompt the user to enter the radius and length of a cylinder, calculate the area and volume using the same formulas, and display the results in a similar manner. Despite minor differences in variable names and some comments, the core logic and approach are nearly identical, suggesting that one sample may have been derived from the other or both from a common source, indicating likely plagiarism."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L3 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        double radius = in.nextDouble();
        double length = in.nextDouble();
        // Hitung Area
        double luas = radius * radius * 3.14159;
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        //Hitung Volume
        double volume = luas * length;
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, calculation formulas for area and volume, and output formats. However, the second sample shows evidence of modification, such as translated variable names and additional comments. Despite these differences, the core logic and approach are nearly identical, suggesting that the second sample (Kasus2L3) is likely derived from the first (T2) with minor modifications to disguise the copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L3 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2 = 0;
        double panjang = 0;
        System.out.print(""Enter the radius and length of a cylinder: "");
        jari2 = input.nextDouble();
        panjang = input.nextDouble();
        double luas = jari2 * jari2 * 3.14159;
        double total = luas * panjang;
        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, mathematical formulas for calculating the area and volume of a cylinder, and output formats. Despite minor differences in variable names and slight variations in how the results are printed, the core logic and approach are nearly identical. This strongly suggests that one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l,ar,vol;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        ar = rad*rad*3.14159;//mencari area
        vol = ar*l;//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
    }

}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, calculations for area and volume, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and comments in a different language, indicating it's not a direct copy but rather a closely inspired adaptation."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        cetak();
    }

    public static void cetak() {
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable usage, method organization, and overall code structure. Sample 2 introduces a separate method (`cetak`) for printing the results and uses class-level variables, while Sample 1 keeps everything within the `main` method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static double hitungArea(double r) {
        return r * r * Math.PI;
    }
    
    public static double hitungVolume(double r, double l) {
        return hitungArea(r) * l;
    }
    
    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        
        System.out.println(""The area is "" + hitungArea(r));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(r, l));
    }
}",True,,False,"The two code samples share the same basic purpose and input/output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of separate methods for calculations in Sample 2 (`hitungArea` and `hitungVolume`), the use of `Math.PI` instead of a hardcoded value for π, and the overall code organization. These differences suggest that the samples are likely independent solutions rather than a case of direct plagiarism."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	static double rad,panjang;
	
	static void input()
	{
		Scanner masukan = new Scanner(System.in);
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
	}
	static double hitArea()
	{
		return rad * rad * 3.14159;
	}
	public static void main(String[] args){
		
		
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		input();
		
		double a;
		//perhitungan
		a = hitArea();
		double vol;
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 1 uses a straightforward approach with inline calculations, while Sample 2 separates input and calculation into different methods. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {
    public static double area(double r){
        double area;
        area=r*r*3.14159;
        return area;
    }
    public static double volume(double len,double a){
        double volume;
        volume=len*a;
        return volume;
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    
        double r=0;
        double len=0;
        double a =0;
        double volume=0;

        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = area(r);
        volume = volume(len,a);
        //Output
        System.out.println(""The area is "" + a);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of separate methods for area and volume calculations in Sample 2, variable usage, and overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double jejari = input.nextDouble();
        double panjang = input.nextDouble();
        
        // Mencetak luas dan volume
        System.out.println(""The area is "" + hitungArea(jejari));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(panjang, jejari));
        }
    
    public static double hitungArea(double jejari){
        double area;
        return area = jejari * jejari * 3.14159;
    }
    
    public static double hitungVolume(double panjang, double jejari){
        double volume;
        return volume = hitungArea(jejari) * panjang;
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, the use of the `Scanner` class for input, and the same mathematical formulas for calculating the area and volume of a cylinder. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate methods for area and volume calculations. These modifications indicate that while the second sample may have been inspired by the first, it is not a direct copy but rather a closely inspired adaptation."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        //masukkan nilai
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double tinggi = input.nextDouble();
        
        System.out.println(""The area is "" + hitungLuasAlas(radius));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(hitungLuasAlas(radius), tinggi));
    }

    //fungsi luas alas
    public static double hitungLuasAlas(double rad) {
        double luasAlas = rad * rad * 3.14159;
        return luasAlas;
    }

    //fungsi volume
    public static double hitungVolume(double luasAlas, double tinggi) {
        double volume = luasAlas * tinggi;
        return volume;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable names, and the use of helper functions. Sample 2 introduces separate methods for calculating the area and volume, which is a notable structural difference from Sample 1. These differences suggest that the samples are likely independent solutions rather than a case of direct plagiarism."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L4 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        float radius = in.nextFloat();
        float length = in.nextFloat();
        // Hitung Area
        double luas = hitungLuas(radius);
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        //Hitung Volume
        double volume = hitungVolume(luas, length);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
    private static double hitungLuas(float radius){
        return radius * radius * 3.14159;
    }
    
    private static double hitungVolume(double luas, float length){
        return luas * length;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Code Sample 2 introduces separate methods for calculating the area and volume, which is a notable difference from Code Sample 1's inline calculations. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L4 {

    public static double hitLuas(double jari2) {
        return jari2 * jari2 * 3.14159;
    }

    public static double total(double luas, double panjang) {
        return luas * panjang;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2 = 0;
        double panjang = 0;
        System.out.print(""Enter the radius and length of a cylinder: "");
        jari2 = input.nextDouble();
        panjang = input.nextDouble();
        double luas = hitLuas(jari2);
        double total = total(luas,panjang);
        
        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, the use of mathematical formulas for area and volume calculations, and the output format. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for area and volume calculations. These modifications suggest that while the second sample may have been inspired by the first, it is not a direct copy but rather a closely inspired adaptation."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l,ar,vol;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        ar = hitungAr(rad);//mencari area
        vol = hitungVol(ar,l);//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
     
    }
    
    public static double hitungVol(double ar,double l)
    {
        return ar*l;
    }
    
    public static double hitungAr(double rad)
    {
        return rad*rad*3.14159;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable names, and the use of helper methods. Sample 2 introduces separate methods for calculating the area and volume, which is a notable structural difference from Sample 1. These differences suggest that the samples are likely independent solutions rather than a case of direct plagiarism."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        cetak();
    }

    public static void cetak() {
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable usage, method organization, and overall code structure. Sample 2 introduces a separate method (`cetak`) for printing the results and uses class-level variables, while Sample 1 keeps everything within the `main` method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static double hitungArea(double r) {
        return r * r * Math.PI;
    }
    
    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        
        System.out.println(""The area is "" + hitungArea(r));
        System.out.println(""The volume of the cylinder is "" + hitungArea(r)*l);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of a separate method for area calculation in Sample 2 (`hitungArea`), the use of `Math.PI` instead of a hardcoded value for π, and different variable names. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	static double rad,panjang;
	
	static void input()
	{
		Scanner masukan = new Scanner(System.in);
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
	}
	static double hitArea()
	{
		return rad * rad * 3.14159;
	}
	public static void main(String[] args){
				
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		input();
		
		double vol, a;
		//perhitungan
		a = hitArea();
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, the use of the same mathematical formulas for area and volume calculations, and similar output formats. However, the second sample shows evidence of modification, such as translated variable names, the use of static methods for input and area calculation, and a slightly different organization of the code. These modifications suggest that while the second sample may have been inspired by the first, it is not a direct copy but rather a closely inspired adaptation."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {
    public static double area(double r){
        double area;
        area=r*r*3.14159;
        return area;
    }
    public static double volume(double len,double a){
        double volume;
        volume=len*a;
        return volume;
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    
        double r,len,a;


        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = area(r);

        //Output
        System.out.println(""The area is "" + area(r));
        System.out.println(""The volume of the cylinder is "" + volume(len,a));

    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of separate methods for area and volume calculations in Sample 2, variable names, and overall code organization. These differences suggest that they are likely independent solutions rather than a case of direct plagiarism."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double jejari, panjang;
        jejari = input.nextDouble();
        panjang = input.nextDouble();
        
        // Mencetak luas dan volume
        System.out.println(""The area is "" + hitungArea(jejari));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(panjang, jejari));
        }
    
    public static double hitungArea(double jejari){
        double area;
        return area = jejari * jejari * 3.14159;
    }
    
    public static double hitungVolume(double panjang, double jejari){
        double volume;
        return volume = hitungArea(jejari) * panjang;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable names, and the use of helper methods in Sample 2. Sample 2 also includes comments in a different language and a more modular approach with separate methods for calculating area and volume. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 
{
    public static void main(String[] args) 
    {
        Scanner input = new Scanner(System.in);
        double radius, tinggi;
        
        //masukkan nilai
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = input.nextDouble();
        tinggi = input.nextDouble();

        hitung(radius, tinggi);
    }

    private static void hitung(double radius, double tinggi) 
    {
        double area = radius * radius * 3.14159;
        double volume = radius * radius * 3.14159 * tinggi;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, the use of the same mathematical formulas for calculating the area and volume of a cylinder, and similar output formats. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with a separate method for calculations, indicating it's not a direct copy but rather a closely inspired adaptation."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L5 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        //input radius
        float input = in.nextFloat();
        // Hitung Area
        double luas = hitungLuas(input);
        //input Length
        input = in.nextFloat();
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        //Hitung Volume
        double volume = hitungVolume(luas, input);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
    private static double hitungLuas(float radius){
        return radius * radius * 3.14159;
    }
    
    private static double hitungVolume(double luas, float length){
        return luas * length;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 2 uses separate methods for calculating the area and volume, while Sample 1 performs these calculations directly in the `main` method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L5 {

    public static double hitLuas(double jari2) {
        return jari2 * jari2 * 3.14159;
    }

    public static double total(double luas, double panjang) {
        return luas * panjang;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2, panjang;
        double luas, total;
        System.out.print(""Enter the radius and length of a cylinder: "");
        jari2 = input.nextDouble();
        panjang = input.nextDouble();
        luas = hitLuas(jari2);
        total = total(luas, panjang);

        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, the use of mathematical formulas for area and volume calculations, and the output format. However, the second sample shows evidence of modification, such as translated variable names and a reorganized code structure with separate functions for area and volume calculations. These modifications suggest that while the second sample is not a direct copy, it is closely inspired by the first, indicating likely plagiarism."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l,ar,vol;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        ar = hitungAr(rad);//mencari area
        vol = hitungVol(ar,l);//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
     
    }
    
    public static double hitungVol(double ar,double l)
    {
        return ar*l;
    }
    
    public static double hitungAr(double rad)
    {
        return rad*rad*3.14159;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable names, and the use of helper methods. Sample 2 introduces separate methods for calculating the area and volume, which is a notable structural difference from Sample 1. These differences suggest that the samples are likely independent solutions rather than a case of direct plagiarism."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
            Scanner input = new Scanner(System.in);
            
            //Enter radius of the cylinder
            System.out.print(""Enter the radius and length of a cylinder: ""); 
            double radius = input.nextDouble();
            double length = input.nextDouble();
            
            double areas = radius * radius * 3.14159;
            double volumes = areas * length;
            
            System.out.println(""The area is "" + areas);
            System.out.println(""The volume of the cylinder is "" + volumes); }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names (`area` vs. `areas`, `volume` vs. `volumes`), and overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism. The similarities can be attributed to the nature of the problem and the constraints of the Java language, as both implement a common beginner's task using standard programming constructs."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    
    public static double hitungArea(double r) {
        return r * r * Math.PI;
    }
    
    public static double hitungVolume(double area, double l) {
        return area * l;
    }
    
    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        
        double area = hitungArea(r);
        double volume = hitungVolume(area, l);
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of separate methods for calculations in Sample 2, the use of `Math.PI` instead of a hardcoded value for π, and the overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	public static void main(String[] args){
		Scanner masukan = new Scanner(System.in);
		
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double rad = masukan.nextDouble();
		double panjang = masukan.nextDouble();
		
		//perhitungan
		double a = rad * rad * 3.14159;
		double vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, calculation formulas for area and volume, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and a slightly different code structure, indicating it's not a direct copy but rather a closely inspired adaptation."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    

        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = scan.nextDouble();
        double len = scan.nextDouble();
        double a = r * r * 3.14159;
        double volume = a * len;
        //Output
        System.out.println(""The area is "" + a);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, input handling, and overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double jejari = input.nextDouble();
        double length = input.nextDouble();
        double area = jejari * jejari * 3.14159;
        double volume = area * length;
        // Mencetak luas dan volume
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
        }
}",True,,True,"The two code samples share the same basic structure and logic for calculating the area and volume of a cylinder, including identical input prompts and mathematical formulas. However, the differences in variable names (e.g., `radius` vs. `jejari`) and the presence of comments in different languages suggest that while the core logic is the same, the second sample has been modified to some extent. These modifications, however, are minimal and do not significantly alter the core functionality, indicating that one sample was likely derived from the other or both from a common source."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {
    
    //program menghitung luas alas dan volume
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        System.out.print(""Enter the radius and length of a cylinder: "");
        double rad = in.nextDouble();
        double panjang = in.nextDouble();
        
        double luas = rad * rad * 3.14159;
        double vol = luas * panjang;
        System.out.println(""The area is "" + luas);
        System.out.println(""The volume of the cylinder is "" + vol);
    }
}",True,,True,"The two code samples share significant similarities in their overall structure, purpose, and specific details like the input prompt, calculation formulas, and output formats. Both samples prompt the user to enter the radius and length of a cylinder, calculate the area and volume using the same formulas, and display the results in a similar manner. Despite minor differences in variable names and comments, the core logic and approach are nearly identical, suggesting that one sample may have been derived from the other or both from a common source, indicating likely plagiarism."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L2 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        float radius = in.nextFloat();
        float length = in.nextFloat();
        // Hitung Area
        double luas = radius * radius * 3.14159;
        //Hitung Volume
        double volume = luas * length;
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ in several implementation details such as variable types (double vs. float), variable names, and comments. The differences in coding style, variable names, and overall structure suggest they are likely independent solutions rather than a case of direct plagiarism."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;


public class L2 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print(""Enter the radius and length of a cylinder: "");
        double jari2 = input.nextDouble();
        double panjang = input.nextDouble();
        double luas = jari2 * jari2 * 3.14159;
        double total = luas * panjang;
        System.out.println(""The area is "" + luas);
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, mathematical formulas for calculating the area and volume of a cylinder, and output formats. The differences are mainly in variable names and minor formatting details. Given the high degree of similarity in the core logic and structure, it strongly suggests that one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        double rad = sc.nextDouble();//menginput radius
        double l = sc.nextDouble();//menginput length
        double ar = rad*rad*3.14159;//mencari area
        double vol = ar*l;//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
    }

}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, calculations for area and volume, and output formats, which strongly suggest that one was derived from the other. However, the second sample shows evidence of modification, such as translated variable names and comments, indicating it's not a direct copy but rather a closely inspired adaptation."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
            Scanner input = new Scanner(System.in);
            
            //Enter radius of the cylinder
            System.out.print(""Enter the radius and length of a cylinder: ""); 
            double radius = input.nextDouble();
            double length = input.nextDouble();
            
            double area = radius * radius * 3.14159;
            double volume = area * length;
            
            System.out.println(""The area is "" + area);
            System.out.println(""The volume of the cylinder is "" + volume); }
}",True,,True,"The two code samples are nearly identical in every aspect, including the input prompts, variable names, mathematical calculations, and output statements. The only difference is the presence of an author comment in the second sample. Given the high degree of similarity and lack of significant differences, it is highly likely that one sample was directly copied from the other or both were derived from a common source, indicating plagiarism."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder dddd
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}
}",True,,True,"The two code samples are nearly identical in every aspect, including the input prompts, variable names, mathematical calculations, and output statements. The only differences are superficial, such as the class names and the presence of a comment in the second sample. These minor changes do not alter the core functionality or logic of the program, strongly suggesting that one sample was directly copied from the other or both were derived from a common source."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;
public class inputoutput{
	public static void main(String[] args){
		Scanner input = new Scanner(System.in);
		
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();
		
		//perhitungan
		double area = radius * radius * 3.14159;
		double volume = area * length;
		
		// cetak hasil
		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);		
	}
}",True,,True,"The two code samples share the same basic structure and logic for calculating the area and volume of a cylinder, including identical input prompts, mathematical formulas, and output statements. However, the second sample includes comments in a different language and a different class name, which suggests an attempt to disguise the copying. Despite these superficial changes, the core functionality and specific details are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder

        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double length = input.nextDouble();
        double area = radius * radius * 3.14159;
        double volume = area * length;
        //Output
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,True,"The two code samples are nearly identical in every aspect, including the input prompts, variable names, mathematical calculations, and output statements. The only difference is the class name (`T2` vs. `Main`), which is a trivial change. The overwhelming similarity in all other aspects strongly suggests that one sample was directly copied from the other or both were derived from a common source, indicating likely plagiarism."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double length = input.nextDouble();
        double area = radius * radius * 3.14159;
        double volume = area * length;
        // Mencetak luas dan volume
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
        }
}",True,,False,"The two code samples share the same basic structure and logic for calculating the area and volume of a cylinder, including identical input prompts and mathematical formulas. However, the differences in comments (one in English and the other in Indonesian) and the presence of a license header in the second sample suggest that while they solve the same problem in a similar manner, they may have been independently developed or adapted from a common source. The similarities are likely due to the straightforward nature of the problem rather than direct copying."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) 
    {
        Scanner input = new Scanner(System.in);
        
        //masukkin radius
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double length = input.nextDouble();
        
        double area = radius * radius * 3.14159;
        double volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
    }
}",True,,True,"The two code samples are nearly identical in terms of structure, logic, and specific details. Both samples prompt the user to enter the radius and length of a cylinder, calculate the area and volume using the same formulas, and then print the results. The only differences are minor, such as the presence of comments and author information in the second sample. These minor differences do not significantly alter the core functionality or logic of the code, strongly suggesting that one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L1 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double radius = input.nextDouble();
        double length = input.nextDouble();
        // Hitung Area
        double area = radius * radius * 3.14159;
        //Hitung Volume
        double volume = area * length;
        // Print area cylinder
        System.out.println(""The area is "" + area);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, calculations for area and volume, and output formats. Both samples use the same formula for calculating the area and volume of a cylinder and follow the same sequence of operations. Despite minor differences in comments and formatting, the core logic and approach are nearly identical, suggesting that one sample may have been derived from the other or both from a common source, indicating likely plagiarism."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inputoutput{

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        double radius = input.nextDouble();//menginput radius
        double length = input.nextDouble();//menginput length
        double area = radius*radius*3.14159;//mencari area
        double volume = area*length;//mencari voulume
        System.out.println(""The area is "" + area);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + volume);//mengeluarkan hasil
    }

}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and overall code organization. The second sample includes comments in a different language and uses a different class name, suggesting they are likely independent solutions rather than a case of direct plagiarism."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        cetak();
    }

    public static void cetak() {
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable usage, method organization, and overall code structure. Sample 2 introduces a separate method (`cetak`) for printing the results and uses class-level variables, while Sample 1 keeps everything within the `main` method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        System.out.println(""The area is "" + r*r*Math.PI);
        System.out.println(""The volume of the cylinder is "" + r*r*Math.PI*l);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, the use of `Math.PI` versus a hardcoded value for π, and the overall code organization. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

class inputoutput{
	static double rad,panjang;
	static Scanner masukan = new Scanner(System.in);
	static void input()
	{
		
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
	}
	static double hitArea()
	{
		return Math.pow(rad,2) * 3.14159;
	}
	public static void main(String[] args){
				
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		input();
		
		double vol, a;
		//perhitungan
		a = hitArea();
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable usage, and the approach to input handling. Sample 1 uses a straightforward approach with inline calculations, while Sample 2 uses separate methods for input and area calculation, indicating a more modular design. These differences suggest that the samples are likely independent solutions to a common beginner programming exercise rather than a case"
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {
    public static double area(double r){
        double area;
        area=r*r*3.14159;
        return area;
    }
    public static double volume(double len,double a){
        double volume;
        volume=len*a;
        return volume;
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    
        double r,len,a;


        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = area(r);

        //Output
        System.out.println(""The area is "" + area(r));
        System.out.println(""The volume of the cylinder is "" + volume(len,a));

    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as the use of separate methods for area and volume calculations in Sample 2, variable names, and overall code organization. These differences suggest that they are likely independent solutions rather than a case of direct plagiarism."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double jejari, panjang;
        jejari = input.nextDouble();
        panjang = input.nextDouble();
        
        // Mencetak luas dan volume
        System.out.println(""The area is "" + hitungArea(jejari));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(panjang, jejari));
        }
    
    public static double hitungArea(double jejari){
        double area;
        return area = Math.pow(jejari, 2) * 3.14159;
    }
    
    public static double hitungVolume(double panjang, double jejari){
        double volume;
        return volume = hitungArea(jejari) * panjang;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable names, and the use of helper methods in the second sample. The second sample also includes comments in a different language and a more modular approach with separate methods for calculating area and volume. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double radius, tinggi;

        //masukkan nilai
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = in.nextDouble(); tinggi = in.nextDouble();

        count(radius, tinggi);
    }

    private static void count(double rad, double height) {
        System.out.println(""The area is "" + Math.pow(rad, 2) * Math.PI);
        System.out.println(""The volume of the cylinder is "" + Math.pow(rad, 2) * Math.PI * height);
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable names, and the use of `Math.PI` versus a hardcoded value for π. The first sample performs calculations directly in the `main` method, while the second sample delegates the calculations to a separate `count` method. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L6 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        //input radius
        float input = in.nextFloat();
        //Hitung Area
        double luas = hitungLuas(input);
        //input Length
        input = in.nextFloat();
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + hitungVolume(luas, input));
    }
    
    private static double hitungLuas(float radius){
        return radius * radius * 3.14159;
    }
    
    private static double hitungVolume(double luas, float length){
        return luas * length;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 1 performs all calculations directly in the `main` method, while Sample 2 uses separate methods for calculating the area and volume. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L6 {

    public static double hitLuas(double jari2) {
        return jari2 * jari2 * 3.14159;
    }

    public static double total(double luas, double panjang) {
        return luas * panjang;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2, panjang;
        double luas, total;
        jari2 = 0;
        panjang = 0;
        System.out.print(""Enter the radius and length of a cylinder: "");
        for (int i = 0; i < 1; i++) {
            jari2 = input.nextDouble();
            panjang = input.nextDouble();
        }

        luas = hitLuas(jari2);
        total = total(luas, panjang);

        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,True,"The two code samples share significant structural similarities, including identical input prompts, the use of mathematical formulas for area and volume calculations, and the output format. However, the second sample shows evidence of modification, such as translated variable names, the use of separate methods for calculations, and a slightly different approach to handling input. These modifications suggest that while the second sample may have been inspired by the first, it is not a direct copy but rather a closely inspired adaptation."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        hitungVol(hitungAr(rad), l);
        
     
    }
    
    public static void hitungVol(double ar,double l)
    {
        double vol= ar*l;
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
        
    }
    
    public static double hitungAr(double rad)
    {
        double ar= rad*rad*3.14159;
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        return ar;
    }
}",True,,False,"The two code samples share the same basic purpose and output format, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as method organization, variable usage, and overall code structure. Sample 1 performs all calculations within the `main` method, while Sample 2 uses separate methods for area and volume calculations. These differences suggest they are likely independent solutions rather than a case of direct plagiarism."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T05 {
    public static void main(String[] args) {
          Scanner s = new Scanner(System.in);
          System.out.print(""Enter an integer "");
          int a= s.nextInt();
          reverse(a);
    }
    public  static  void reverse(int number){
        String cek = String.valueOf(number);
        for (int i = 0; i < cek.length(); i++) {
            System.out.print(cek.charAt(cek.length()-1-i));
        }
        System.out.println("""");
    }
}",False,,False,"The core logic for reversing the number is fundamentally different between the two samples: the first uses a mathematical approach with modulo and division operations, while the second converts the number to a string and reverses it using string manipulation. Additionally, the implementation details, such as the loop structure and variable handling, are distinct enough to suggest independent development rather than copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;
public class T05
{
   public static void main(String[] args)
   {
      Scanner sc = new Scanner(System.in);
      System.out.print(""Enter an integer: "");
      int number= sc.nextInt();

      reverse(number);
   }
   public static void reverse (int number)
   {
      String balik ="""";
      while(number > 0)
      {
         balik = balik + (number%10);
         number = number/ 10;
      }
      System.out.println(balik);
   }
}",False,,False,"The two code samples share the same basic goal of reversing an integer and use similar input and output methods. However, the implementation details differ significantly. Code Sample 1 uses a mathematical approach with modulo and division operations to reverse the number directly, while Code Sample 2 constructs a reversed string representation of the number. These differences in approach and implementation suggest that the samples were likely developed independently, despite solving the same problem."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T05 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = sc.nextInt();
        reverse(angka);
    }
    
    public static void reverse(int number) {
        int tamp = number;
        int hit = 0;
        while(number != 0) {
            number = number / 10;
            hit++;
        }
        number = tamp;
        int jumlah = 0;
        for(int i = hit; i > 0; i--) {
            int jumlah10 = 1;
            int akhir = number % 10;
            for(int j = 1; j < i; j++) {
                jumlah10 = jumlah10 * 10;
            }
            jumlah = jumlah + (akhir * jumlah10);
            number = number / 10;
        }
        System.out.println(jumlah);
    }
}",False,,False,"The two code samples share the same basic goal of reversing an integer, but they employ different methods to achieve this. Code Sample 1 uses a straightforward approach with a while loop and modulo operations to reverse the digits. Code Sample 2, on the other hand, uses a more complex approach involving multiple loops and additional calculations to achieve the same result. The differences in implementation details, such as the use of additional variables and nested loops in Sample 2, suggest that these are independent solutions to the same problem rather than one being a"
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class Main {

    public  static void reverse(int number){
        String angka=number+"""";
        for(int i=angka.length()-1;i>=0;i--){
            System.out.print(angka.charAt(i));
        }
    }
    public static void main(String[] args) {
    	Scanner sc=new Scanner(System.in);
    	System.out.print(""Enter an integer: "");
    	int number=sc.nextInt();
    	reverse(number);
    }
}",False,,False,"The two code samples share the same goal of reversing an integer, but they use different approaches to achieve this. Code Sample 1 uses a mathematical approach with modulo and division operations, while Code Sample 2 converts the number to a string and reverses it using string manipulation. The differences in implementation details, such as the loop structure and variable handling, suggest that these are independent solutions to a common problem rather than instances of plagiarism."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter an integer: "");
        int number = sc.nextInt();

        reverse(number);
    }

    public static void reverse(int number)
    {
        int tempDigit = 0;

        while (number > 0){

            tempDigit = number % 10;
            System.out.print(tempDigit);
            number = number / 10;
        }
    }
}",False,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t05 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int num = sc.nextInt();
        reverse(num);
    }

    public static void reverse(int number) {
        String tmpNumber = String.valueOf(number);
        for (int i = tmpNumber.length() - 1; i > -1; i--) {
            System.out.print(tmpNumber.charAt(i));
        }
        System.out.println("""");
    }
}",False,,False,"The core logic for reversing the number is fundamentally different between the two samples: the first uses a mathematical approach with modulo and division operations, while the second converts the number to a string and reverses it using string manipulation. Additionally, the implementation details, such as the loop structure and variable handling, are distinct enough to suggest independent development rather than copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T05 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int a = sc.nextInt();
        String b = String.valueOf(a);
        for (int i = 0; i < b.length(); i++) {
            System.out.print(b.charAt(b.length()-1-i));
        }
    }
}",False,,False,"The core logic for reversing the number is fundamentally different between the two samples: the first uses a mathematical approach with modulo and division operations, while the second converts the number to a string and reverses it using string manipulation. Additionally, the implementation details, such as the loop structure and variable handling, are distinct enough to suggest independent development rather than copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T05 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer : "");
        int number = sc.nextInt();
        reverse(number);
    }

    public static void reverse(int number) {
        String numberString = String.valueOf(number);        
        for (int i = numberString.length(); i > 0; i--) {
            System.out.print(numberString.charAt(i-1));
        }
        System.out.println("""");
    }
}",False,,False,"The core logic for reversing the number is fundamentally different between the two samples: the first uses a mathematical approach with modulo and division operations, while the second converts the number to a string and reverses it using string manipulation. Additionally, the implementation details, such as the loop structure and variable handling, are distinct enough to suggest independent development rather than copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T05 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int inp = sc.nextInt();
        reverse(inp);
    }
    
    public static void reverse(int number){
        int a = 0;
        int i = (int)(Math.log10(number));
        while(number!=0){
            int b = number%10;
            a += b * Math.pow(10, i--);
            number/=10;
        }
        System.out.println(a);
    }
}",False,,False,"The two code samples share the same basic goal of reversing an integer, but they employ different methods to achieve this. Code Sample 1 uses a straightforward approach with modulo and division operations to reverse the digits and print them directly. Code Sample 2, on the other hand, uses a more complex approach involving logarithmic calculations and power functions to reconstruct the reversed number. The differences in the algorithm and implementation details suggest that these are independent solutions to the same problem rather than instances of plagiarism."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template fil3e, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T05 {

    static int a;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer:"");
        int a = sc.nextInt();
        reverse(a);
    }

    public static void reverse(int number) {
        int reverse = 0;
        while (number != 0) {
            reverse = reverse * 10;
            reverse = reverse + number % 10;
            number = number / 10;
        }
        System.out.println(reverse);
    }
}",False,,False,"The two code samples share the same basic goal of reversing an integer, but they employ different methods to achieve this. Code Sample 1 uses a straightforward approach with modulo and division operations to print each digit in reverse order directly. Code Sample 2, on the other hand, constructs the reversed number by accumulating the digits in a new variable and then prints the final reversed number. The differences in implementation details, such as the use of a separate variable to store the reversed number and the overall structure of the code, suggest that these are independent solutions to the same problem rather than instances of plagiarism.

Plagiar"
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No5 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        String inp= sc.next();
        reverse(inp);
    }
    
    public static void reverse(String a){
        for(int i=a.length()-1; i>=0; i--) {
            System.out.print(a.charAt(i));
        }
    }
    
}",False,,False,"The core logic for reversing the number is fundamentally different between the two samples: the first uses a mathematical approach with modulo and division operations, while the second converts the number to a string and reverses it using string manipulation. Additionally, the implementation details, such as the loop structure and variable handling, are distinct enough to suggest independent development rather than copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal5 {
    
    public static void reverse(int number){
        String a = String.valueOf(number);
        
        for(int i = a.length()-1; i>-1; i--){
            System.out.print(a.charAt(i));
        }
        System.out.println("""");
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int number = sc.nextInt();
        reverse(number);
    }
}",False,,False,"The core logic for reversing the number is fundamentally different between the two samples: the first uses a mathematical approach with modulo and division operations, while the second converts the number to a string and reverses it using string manipulation. Additionally, the implementation details, such as the loop structure and variable handling, are distinct enough to suggest independent development rather than copying."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        System.out.print(""Enter an integer: "");
        balik(number);
    }

        public static void balik(int number) {
            while (number != 0) {
                int remainder = number % 10;
                System.out.print(remainder);
                number = number / 10;
            }
            
            System.out.println();
        }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in method names and the order of input prompts, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        reverse(number);
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in the order of method definitions and the presence of comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
		public static void beautyReverse(int num) 
	{
		while (num != 0)
			{
			int r = num % 10;
				System.out.print(r);
			num = num / 10;
		}
		System.out.println();
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			beautyReverse(n);
	}
	
	

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {

    public static void main(String[] args) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        int nmb=0;
        //enter the number
        System.out.print(""Enter an integer: "");

        nmb = sc.nextInt();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int get=0;
        while (nmb != 0) {
            get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        }
        System.out.println();
    }


}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        reverse(angka);
    }

    public static void reverse(int angka) {
        // Di sini mengulang hingga number habis
        while (angka != 0) {
            int remainder = angka % 10;
            System.out.print(remainder);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        //cara lain memanggil scanner
        java.util.Scanner input = new java.util.Scanner(System.in);
        int angka;
        
        System.out.print(""Enter an integer: "");
        angka = input.nextInt();
        reverse(angka);
    }

    //fungsi membalik
    public static void reverse(int number) {
        int sisa;
        while (number != 0) {
            sisa = number % 10;
            System.out.print(sisa);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L3 {
    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = inp.nextInt();
        reverseNumber(angka);
    }

    public static void reverseNumber(int angka) {
        //proses membalikkan angka
        while (angka != 0) {
            //mengambil angka terakhir
            int temp = angka % 10;
            //membuang angka terakhir
            angka = angka / 10;
            //tampilkan angka yang diambil
            System.out.print(temp);
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L3 {

    public static void main(String[] args) 
    {
        int nomor = 0;
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
        
        balik(nomor);
    }

    public static void balik(int nomor) {
        int sisa = 0 ;   
        while (nomor != 0)      
        {
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        while (angka != 0) {//looping sampai angka habis
             int   sisa ;
             sisa= angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(sisa);
            angka = angka / 10;
        }
        
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int number;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        System.out.print(""Enter an integer: "");
        number = input.nextInt();
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }

        System.out.println();
    }
}",True,,False,"The two code samples share the same basic algorithm for reversing an integer, including the use of modulo and division operations within a loop. However, there are notable differences in implementation details, such as the use of a separate method for reversing the number in Sample 1, while Sample 2 performs the reversal directly within the `main` method. Additionally, Sample 2 includes a private static variable for storing the number, which is not present in Sample 1. These differences suggest that while the samples solve the same problem using a similar approach, they were likely developed independently rather than being direct copies of each other"
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static void reverse(int number) {
        System.out.print(number%10);
    }
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        for( ; number>0 ; number/=10)
            reverse(number);
        System.out.println("""");
    }
}",True,,False,"The two code samples share the same basic purpose of reversing an integer and printing its digits. However, they differ significantly in their implementation details. Code Sample 1 uses a `while` loop within the `reverse` method to handle the digit extraction and printing, while Code Sample 2 uses a `for` loop in the `main` method and calls the `reverse` method within the loop to print each digit. The differences in loop structures, method usage, and overall code organization suggest that these are likely independent solutions to a"
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
		public static void beautyReverse(int num) 
	{
		while (num != 0)
			{
			int r = num % 10;
				System.out.print(r);
			num = num / 10;
		}
		System.out.println();
	}
	static void reverse(int n)
	{
		beautyReverse(n);
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			reverse(n);
	}
	
	

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {
    static java.util.Scanner sc = new java.util.Scanner(System.in);
    public static int input(){
        System.out.print(""Enter an integer: "");
        return sc.nextInt();
    }

    public static void main(String[] args) {

        int nmb=input();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int get=0;
        while (nmb != 0) {
            get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        }
        System.out.println();
    }


}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in method organization and variable names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        while (angka != 0) {
            int remainder = angka % 10;
            System.out.print(remainder);
            angka = angka / 10;
        }
        System.out.println();
    }

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        java.util.Scanner masukkan = new java.util.Scanner(System.in);
        int number;
        int sisaBagi;
        
        System.out.print(""Enter an integer: "");
        number = masukkan.nextInt();
        
        while (number != 0) {
            sisaBagi = number % 10;
            System.out.print(sisaBagi);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L4 {

    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = inp.nextInt();

        //proses membalikkan angka
        while (angka != 0) {
            //mengambil angka terakhir
            int temp = angka % 10;
            //membuang angka terakhir
            angka = angka / 10;
            //tampilkan angka yang diambil
            System.out.print(temp);
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L4 {

    public static void main(String[] args) 
    {
        int nomor = 0;
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
        
        int sisa = 0 ;   
        while (nomor != 0)      
        {
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        while (input != 0) {//looping sampai angka habis
               int sisa ;
               sisa= input % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
               System.out.print(sisa);
               input = input / 10;
        }

    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int number;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        System.out.print(""Enter an integer: "");
        number = input.nextInt();
        for (int i = 0; number != 0; i++) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }

        System.out.println();
    }
}",True,,False,"The two code samples share the same basic algorithm for reversing an integer, including the use of modulo and division operations to extract and print digits in reverse order. However, there are notable differences in implementation details. Code Sample 1 uses a separate method (`reverse`) to handle the reversal logic, while Code Sample 2 incorporates the logic directly within the `main` method. Additionally, Code Sample 2 uses a `for` loop with an unused loop variable (`i`), whereas Code Sample 1 uses a `while` loop. These differences suggest that while the core logic is similar due to the simplicity"
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static int reverse(int number) {
        return number%10;
    }
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        for( ; number>0 ; number/=10)
            System.out.print(reverse(number));
        System.out.println("""");
    }
}",True,,False,"The two code samples share the same basic goal of reversing an integer and printing the digits in reverse order. However, they differ significantly in their implementation details. Code Sample 1 uses a `while` loop within a separate `reverse` method to achieve the task, while Code Sample 2 uses a `for` loop in the `main` method and a different approach to reversing the number by calling a `reverse` method that returns the last digit of the number. The differences in loop structures, method usage, and overall code"
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
		public static void beautyReverse(int num) 
	{
		
		for(;num !=0;num/=10)
			{
			int r = num % 10;
				System.out.print(r);

		}
		System.out.println();
	}
	static void reverse(int n)
	{
		beautyReverse(n);
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			reverse(n);
	}
	
	

}",True,,False,"The two code samples share the same basic functionality of reversing an integer and printing the digits in reverse order. However, they differ significantly in their implementation details. Code Sample 1 uses a straightforward approach with a `while` loop directly in the `reverse` method, while Code Sample 2 introduces an additional method `beautyReverse` and uses a `for` loop for the same purpose. The second sample also includes a class named `method` and a static method `reverse` that calls `beautyReverse`, adding an extra layer of abstraction. These differences in structure and implementation suggest that the two"
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class Main {
    static Scanner sc = new Scanner(System.in);
    public static int input(){
        System.out.print(""Enter an integer: "");
        return sc.nextInt();
    }

    public static void main(String[] args) {

        int nmb=input();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int get=0;
        do {
            get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        } while (nmb != 0);
        System.out.println();
    }


}",True,,False,"The two code samples share the same basic algorithm for reversing an integer, which involves extracting digits using modulo and division operations. However, there are notable differences in their implementation details. Code Sample 1 uses a `while` loop, while Code Sample 2 uses a `do-while` loop. Additionally, Code Sample 2 includes a separate method for input and a different structure for handling the main logic. These differences suggest that while the core logic is similar due to the simplicity of the task, the implementations are distinct enough to"
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        for (angka = angka; angka != 0; angka = angka / 10) {
            int remainder = angka % 10;
            System.out.print(remainder);
        }
        System.out.println();
    }

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {

    public static void main(String[] args) {
        Scanner masukkan = new Scanner(System.in);
        int angka, sisaBagi;

        System.out.print(""Enter an integer: "");
        angka = masukkan.nextInt();

        while (angka != 0) { //ulang sampai tidak bisa dibagi integer dengan 10
            sisaBagi = angka % 10;
            System.out.print(sisaBagi);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L5 {
    
    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = inp.nextInt();
        
        //proses membalikkan angka
        while (angka != 0) {
            //tampilkan angka yang diambil
            System.out.print(angka % 10);
            //membuang angka terakhir
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L5 {

    public static void main(String[] args) 
    {
        int nomor, sisa = 0;
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
      
        
        while (nomor!=0)    
        {
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        for(int i=0;i<=angka;i++) {//looping sampai angka habis
             int   sisa ;
             sisa= angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(sisa);
            angka = angka / 10;
            i=0;
        }
        
        System.out.println();
    }
}",True,,False,"The two code samples share the same basic algorithm for reversing an integer, which involves extracting digits using modulo and division operations. However, there are notable differences in implementation details. Code Sample 1 uses a `while` loop to reverse the number, while Code Sample 2 uses a `for` loop with an additional variable `i` that is reset within the loop, which is an unconventional approach. Additionally, the variable names and some comments in Code Sample 2 are in a different language, suggesting independent development. Despite the similarities in the core logic, the differences in implementation details and coding style indicate that"
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        balik(number);
    }

        public static void balik(int number) {
            while (number != 0) {
                int remainder = number % 10;
                System.out.print(remainder);
                number = number / 10;
            }
            
            System.out.println();
        }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in method names and class names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			beautyReverse(n);
	}
	
	//method reverse
	public static void beautyReverse(int num) 
	{
		while (num != 0)
			{
			int r = num % 10;
				System.out.print(r);
			num = num / 10;
		}
		System.out.println();
	}
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int    input =    sc.nextInt();//input integer
          terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        while (angka != 0) {//looping sampai angka habis
             int   sisa = angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(sisa);
            angka = angka / 10;
        }
        
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {

    public static void main(String[] args) {
        //enter the number
        System.out.print(""Enter an integer: "");
        java.util.Scanner sc = new java.util.Scanner(System.in);
        int nmb = sc.nextInt();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        while (nmb != 0) {
            int get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        }
        System.out.println();
    }


}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L2 {
    public static void main(String[] args) {
        //input data
        System.out.print(""Enter an integer: "");
        Scanner inp = new Scanner(System.in);
        int angka = inp.nextInt();
        reverseNumber(angka);
    }

    public static void reverseNumber(int angka) {
        //proses membalikkan angka
        while (angka != 0) {
            //mengambil angka terakhir
            int temp = angka % 10;
            //tampilkan angka yang diambil
            System.out.print(temp);
            //membuang angka terakhir
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner in = new java.util.Scanner(System.in);
        int angka = in.nextInt();
        balik(angka);
    }

    //fungsi membalik
    public static void balik(int angka) {
        while (angka != 0) {
            int sisa = angka % 10;
            System.out.print(sisa);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L2 {

    public static void main(String[] args) 
    {
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        int nomor = input.nextInt();
        
        balik(nomor);
    }

    public static void balik(int nomor) {
           while (nomor != 0)
        {
                int sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        reverse(angka);
    }

    public static void reverse(int angka) {
        // Di sini mengulang hingga number habis
        while (angka != 0) {
            int remainder = angka % 10;
            System.out.print(remainder);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        reverse(number);
    }

        public static void reverse(int number) {
            while (number != 0) {
                int remainder = number % 10;
                System.out.print(remainder);
                number = number / 10;
            }
            
            System.out.println();
        }
}",True,,True,"The two code samples are nearly identical in every aspect, including the structure, logic, and specific details such as variable names, method names, and the approach to reversing the integer. The only difference is the presence of an author comment in the second sample, which does not affect the core functionality. This high degree of similarity strongly suggests that one sample was directly copied from the other or both were copied from a common source."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in class names and the presence of comments in the second sample, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		//pamggil method
			reverse(number);
	}
	
	//method reverse
	public static void reverse(int number) 
	{
		while (number != 0)
			{
			int remainder = number % 10;
				System.out.print(remainder);
			number = number / 10;
		}
		System.out.println();
	}
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in class names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {

    public static void main(String[] args) {
        //enter the number
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        //reverse number
        reverse(number);

    }
    public static void reverse(int number) {
        while (number != 0) {
            int remainder = number % 10;
            //output
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }


}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. The differences are minimal, such as the class name and the addition of comments in the second sample. The core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        reverse(number);
    }

    public static void reverse(int number) {
        // Di sini mengulang hingga number habis
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in comments and class names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        reverse(number);
    }

    //fungsi membalik
    public static void reverse(int number) {
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in comments and author information, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L1 {
    public static void main(String[] args) {
        //input data
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        reverse(number);
    }
    public static void reverse(int number) {
        //proses membalikkan angka
        while (number != 0) {
            //mengambil angka terakhir
            int remainder = number % 10;
            //tampilkan angka yang diambil
            System.out.print(remainder);
            //membuang angka terakhir
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in comments and formatting, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class method {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        int    number =    input.nextInt();//input integer
          reverse(number);//memanggil fungsi reverse
    }

    public static void reverse(int number)  {
        while (number != 0) {//looping sampai angka habis
             int   remainder = number % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(remainder);
            number = number / 10;
        }
        
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in comments and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int number;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        System.out.print(""Enter an integer: "");
        number = input.nextInt();
        for (int i = 99999; number != 0; i--) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }

        System.out.println();
    }
}",True,,False,"The two code samples share the same basic algorithm for reversing an integer by extracting digits using modulo and division operations. However, there are notable differences in implementation details. Code Sample 1 uses a separate method `reverse` to handle the digit extraction and printing, while Code Sample 2 incorporates this logic directly within the `main` method and includes an unnecessary loop with a decrementing counter. These differences in structure and coding style suggest that while the core logic is similar due to the simplicity of the task, the implementations are likely independent."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static void reverse(int number) {
        if(number>0) {
            System.out.print(number%10);
            reverse(number/=10);
        }
    }
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        reverse(number);
        System.out.println("""");
    }
}",True,,False,"The two code samples share the same basic functionality of reversing an integer and printing the digits in reverse order. However, they differ significantly in their implementation approach. Code Sample 1 uses an iterative approach with a `while` loop, while Code Sample 2 employs a recursive method to achieve the same result. The differences in the approach, method structure, and specific implementation details suggest that these are independent solutions to a common problem rather than instances of plagiarism."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
	static java.util.Scanner input = new java.util.Scanner(System.in);
		public static void beautyReverse(int num) 
	{
		
		for(;num >0;num/=100*10)
			{

				System.out.print(num % 10);

		}
		System.out.println();
	}
	static void reverse()
	{
		int n = input.nextInt();
		beautyReverse(n);
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			
		
		//pamggil method
			reverse();
	}
	
	

}",True,,False,"The two code samples share the same basic goal of reversing an integer and displaying the result. However, they differ significantly in their implementation details. Code Sample 1 uses a `while` loop and directly handles the reversal within the `reverse` method. In contrast, Code Sample 2 introduces a `beautyReverse` method and uses a `for` loop with a different approach to handle the reversal. The second sample also includes additional structure and method calls that are not present in the first sample. These differences in implementation suggest that the two samples were developed independently rather than one being derived from the other."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class Main {
    static Scanner sc = new Scanner(System.in);
    public static int input(){
        System.out.print(""Enter an integer: "");
        return sc.nextInt();
    }

    public static void main(String[] args) {

        int nmb=input();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int x=1;
        String rev=String.valueOf(nmb);
        do {

            System.out.print(rev.charAt(rev.length()-x));
            x++;
            nmb = nmb / 10;
        } while (nmb != 0);
        System.out.println();
    }
}",True,,False,"The two code samples share the same basic goal of reversing an integer and displaying the result. However, they differ significantly in their implementation details. Code Sample 1 uses a mathematical approach with modulo and division operations to reverse the number, while Code Sample 2 converts the number to a string and uses string manipulation to achieve the same result. Additionally, the second sample includes a separate method for input and uses a `do-while` loop, which is different from the `while` loop used in the first sample. These differences in"
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        for (angka = angka; angka > 0; angka = angka / 10) {
            int remainder = angka % 10;
            System.out.print(remainder);
        }
        System.out.println();
    }

}",True,,False,"The two code samples share the same basic algorithm for reversing an integer, including the use of modulo and division operations to extract and print digits in reverse order. However, there are notable differences in implementation details, such as the use of a separate method in Code Sample 1 and an inline loop in Code Sample 2. Additionally, variable names and some structural elements differ, suggesting that while the core logic is similar due to the simplicity of the task, the implementations are distinct enough to indicate independent development rather than direct copying."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        Scanner input = new Scanner(System.in);
        int bil = input.nextInt();

        rekursif(bil);
        System.out.println("""");
    }

    //rekursif ah...
    public static int rekursif(int bil){
        if(bil!=0){
            int sisaMod = bil % 10;
            System.out.print(sisaMod);
            bil = bil / 10;
            rekursif(bil);
        }
        return bil;
    }
}",True,,False,"The two code samples share the same basic goal of reversing an integer and printing the result. However, they differ significantly in their implementation. Code Sample 1 uses an iterative approach with a `while` loop, while Code Sample 2 employs a recursive method to achieve the same result. The differences in approach, method names, and overall structure suggest that these are independent solutions to a common problem rather than instances of plagiarism."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L6 {

    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        String angka = inp.next();
        for (int i = angka.length() - 1; i >= 0; i--) {
            System.out.print(angka.charAt(i));
        }
        System.out.println();
    }
}",True,,False,"The two code samples share the same goal of reversing an integer, but they use fundamentally different approaches. Code Sample 1 uses a mathematical approach with modulo and division operations to reverse the number, while Code Sample 2 converts the number to a string and reverses it by iterating over the string characters in reverse order. The differences in implementation details, such as the use of string manipulation versus mathematical operations, suggest that these are independent solutions to the same problem rather than instances of plagiarism."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L6_fix {

    public static void main(String[] args) 
    {
        int nomor, sisa = 0;
        System.out.print(""Enter an integer: "");       
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
      
        
        while (nomor!=0)    
        {
            if (nomor!=0){
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;}
        }
        System.out.println();
    }

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        List arr =new ArrayList();
        for(int i=0;i<=angka;i++) {//looping sampai angka habis
             int   sisa ;
             sisa= angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
             arr.add(sisa);
             angka = angka / 10;
             i=0;
        }
        for(int i=0;i<arr.size();i++)
        {
            System.out.print(arr.get(i));
        }
        
        System.out.println();
    }
}",True,,False,"The two code samples share the same basic goal of reversing an integer, but they employ different approaches and structures. Code Sample 1 uses a simple while loop with modulo and division operations to reverse the number directly. In contrast, Code Sample 2 uses an ArrayList to store the digits and then prints them in reverse order. The differences in data structures, method names, and overall approach suggest that these are independent implementations of a common problem rather than instances of plagiarism."
