L,case,sample_1,sample_2,plagiarized,reason,pred_predicted,pred_explanation
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T07 {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.println(""Enter a 4-by-4 matrix row by row"");
        double[][] a = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                a[i][j] = s.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(a));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if(i==j)
                    sum += m[i][j];
            }
        }

        return sum;
    }

}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;
public class T07
{
   public static void main(String[] args)
   {
      
      Scanner sc = new Scanner(System.in);
      double[][] numbers = new double[4][4];
      System.out.println(""Enter a 4-by4 matrix row by row:"");

      for(int i=0;i < 4;i++)
      {
         String rows = sc.nextLine();
         String[] rowssplit = rows.split(""\\s+"");
         for (int j = 0; j < 4; j++)
         {
            numbers[i][j] = Double.parseDouble(rowssplit[j]);
         }
      }
     System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(numbers));

   }
   public static double sumMajorDiagonal (double[][] m)
   {
      double jumdiagonal = 0;
      for(int i=0;i < 4;i++)
      {
         for(int j = 0; j < 4; j++)
         {
            if(i == j)
            {
               jumdiagonal = jumdiagonal + m[i][j];
            }
         }
       }
       return jumdiagonal;
    }

}",False,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. However, there are differences in variable names and formatting choices, indicating that the code samples were likely developed independently rather than copied from each other. Therefore, the code samples are not considered plagiarism."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T07 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] arr = new double[4][4];
        
        System.out.println(""Enter a 4-by-4 row by row: "");
        for(int i = 0; i < 4; i++) {
            for(int j = 0; j < 4; j++) {
                arr[i][j] = sc.nextDouble();
            }
            System.out.print("""");
        }
        sumMajorDiagonal(arr);
    }
    
    public static double sumMajorDiagonal(double[][] m) {
        double total = m[0][0] + m[1][1] + m[2][2] + m[3][3];
        System.out.println(""Sum of the elements in the major diagonal is "" + total);
        return total;
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix initialization, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    public static double sumMajorDiagonal(double[][] m){
        double hasil=0;
        for(int i=0;i<4;i++){
            hasil+=m[i][i];
        }
        return hasil;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        double[][] m=new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row:"");
        for(int i=0;i<4;i++){
            for(int j=0;j<4;j++){
                m[i][j]=sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(m));
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        double a[][] =new double[4][4];
        for (int i=0;i<4;i++)
        {
            for (int j=0;j<4;j++)
            {
                 a[i][j]=sc.nextDouble();
            }
          }
        
        
        for (int i=0;i<4;i++)
        {
            for (int j=0;j<4;j++)
            {   if(a[i][j]%1==0){
                    DecimalFormat decimalFormat = new DecimalFormat(""#"");
                    String numberAsString = decimalFormat.format(a[i][j]);
                    System.out.print(numberAsString);
                }
                else{
                        System.out.print(a[i][j]);
                }
                System.out.print("" "");
            }
              System.out.println("""");
        }
        
        
         
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(a));
    }
    
public static double sumMajorDiagonal(double[][] array)
{
    double total = 0;

    for (int index = 0; index < array.length; index++)
    {
            total += array[index][index];
    }

    return total;
}
}",False,,False,"The two code samples are not plagiarism because they solve different problems. The first code sample prompts the user to enter a 4x4 matrix and calculates the sum of the diagonal elements, while the second code sample prompts the user to enter a 4x4 matrix and prints the matrix with formatting adjustments. While both samples use a 4x4 matrix and a Scanner object, the differences in implementation and output indicate that they are independent solutions to different programming tasks."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t07 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] matriks = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row: "");
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matriks[i][j] = sc.nextDouble();
            }

        }

        System.out.println(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(matriks));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double hasil = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if (i == j) {
                    hasil += m[i][j];
                }
            }

        }
        return hasil;
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T07 {
    static Scanner sc = new Scanner(System.in);
    public static double sumMajorDiagonal(double[][] m) {
        double hasil = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
                if(i==j){
                    hasil += m[i][j];
                }
            }
        }
        return hasil;
    }
    public static void main(String[] args) {
        
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row:"");
        System.out.println(""Sum of the elements in the major diagonal is ""+sumMajorDiagonal(m));
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix initialization, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T07 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row to row : "");
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = sc.nextDouble();
            }
        }
        double result = sumMajorDiagonal(matrix);
        System.out.println(""Sum of the element in the major diagonal is "" + result);
    }

    public static double sumMajorDiagonal(double[][] m) {
        double result = 0;
        for (int i = 0; i < 4; i++) {
            result+=m[i][i];
        }
        return result;
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T07 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        double[][] matrix = new double[4][4];
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter a 4-by-4 matrix row by row"");
        for(int i=0;i<4;i++){
            for(int j=0;j<4;j++){
                matrix[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(matrix));
    }
    
    public static double sumMajorDiagonal(double[][] m){
        double sum = 0;
        for(int i=0;i<4;i++){
            sum += m[i][i];
        }
        return sum;
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. While there are minor differences in naming and code organization, the core implementation is almost exactly the same, strongly suggesting that one sample was derived from the other or both were derived from a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D Afiany 2451041557A22145B3701B0184109CAB035
 */
public class T07 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        double[][] m = new double[4][4];
        System.out.println(""Enter a 4-by-4 matrix row by row: "");
        for (int i = 0; i < m.length; i++) {
            for (int j = 0; j < m.length; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(m));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double tambah = m[0][0] + m[1][1] + m[2][2] + m[3][3];
        return tambah;
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No7 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        double[][] matrix = new double[4][4];
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter a 4-by-4 matrix row by row"");
        for(int i=0;i<4;i++){
            for(int j=0;j<4;j++){
                matrix[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(matrix));
    }
    
    public static double sumMajorDiagonal(double[][] m){
        double sum = 0;
        for(int i=0;i<4;i++){
            sum += m[i][i];
        }
        return sum;
    }
    
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 2645BB47F923271FA1FC06C04E9691EA
 */
public class Soal7 {
    
    public static double sumMajorDiagonal(double[][] m){
        double hasil=0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if(i==j){
                    hasil += m[i][j];
                }
            }
        }
        return hasil;
    }
    
    public static void main(String[] args) {
        double[][] m = new double[4][4];
        Scanner sc = new Scanner(System.in);
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
    }
    
         
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. While there are minor differences in variable names and code organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static double hasilPertambahanDiagonal(double[][] m) {
        double sum = 0;
        
        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        
        return sum;
    }
    
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        System.out.print(""Sum of the elements in the major diagonal is "" + hasilPertambahanDiagonal(n));
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix initialization, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 0; i < 4; i++)
			for (j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
		System.out.print(""Sum of the elements in the major diagonal is ""+ sum(ma));
	}
	

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
        double hasil;
        hasil=HitungDiagonal(matrix);                         
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ hasil);//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal(double[][] matriks) {//fungsi untuk mengitung diagonal
        double total;
        total = 0;
        for (int i = 0; i < matriks.length; i++) {
            total += matriks[i][i];
        }
        return total;
    }
}",True,,False,"The two code samples are not plagiarism because they use different implementations to solve the same problem. While they share the common goal of summing a matrix's diagonal, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise. Sample 2 uses an ArrayList and a separate method to calculate the diagonal sum, while Sample 1 uses a 2D array and an inline calculation."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];
        Scanner s = new Scanner(System.in);
        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");


        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                mtx[i][j] = s.nextDouble();


        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L3 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = inp.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonalKanan(matrix));
    }

    public static double jumlahDiagonalKanan(double[][] matrix) {
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        double[][] matriks = new double[4][4];
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int bar = 0; bar < 4; bar++) {
            for (int kol = 0; kol < 4; kol++) {
                matriks[bar][kol] = scan.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is ""
                + diagonal(matriks));
    }

    public static double diagonal(double[][] x) {
        double jumlah = 0;
        for (int i = 0; i < x.length; i++)
            jumlah += x[i][i];
        return jumlah;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L3 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(arr));
    }

    public static double sumMajorDiagonal(double[][] m) {
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        double sum = 0;
        
        for (int i = 0; i < n.length; i++)
            sum += n[i][i];
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus7 {

    public static void inputMatrix(double[][] matrix, int n) {
        Scanner sc = new Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = sc.nextDouble();
            }
        }
    }
    
    public static void sumMajorDiagonal(double[][] matrix) {
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sum);
    }
    
    public static void main(String[] args) {
        
        int n=4;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[n][n];
        
        inputMatrix(matrix, n);
        sumMajorDiagonal(matrix);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and method organization, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 0; i < 4; i++)
			for (j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
			
					double sum = 0;
		for ( i = 0; i < ma.length; i++)
			sum += ma[i][i];

		System.out.print(""Sum of the elements in the major diagonal is ""+ sum);
	}
	

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    static Scanner s = new Scanner(System.in);
    public static void inputData(double[][] mtx){

        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                mtx[i][j] = s.nextDouble();

    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        inputData(mtx);



        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i][i];
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sum);
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double[][] matriks;
        matriks = new double[4][4];
        double sum = 0;
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int b = 0; b < 4; b++) {
            for (int k = 0; k < 4; k++) {
                matriks[b][k] = in.nextDouble();
            }
        }
        
        for (int x = 0; x < matriks.length; x++){
            sum += matriks[x][x];
        }
            
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix initialization, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L4 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = inp.nextDouble();
            }
        }
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L4 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }

    public static void print(double[][] m) {
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        print(m);
    }

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and even wording in output messages, which is highly unlikely to occur independently. While there are minor differences in naming and code organization, the core implementation - especially the method for summing the diagonal elements - is almost exactly the same, strongly suggesting that one sample was derived from the other or both were derived from a common source."
4,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
        double hasil;
        hasil = 0;
        for (int i = 0; i < matrix.length; i++) {
            hasil += matrix[i][i];
        }
                         
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ hasil);//menampilkan fungsi hasil perhitungan diagonal
    }
}",True,,False,"The two code samples solve the same problem of summing the diagonal elements of a 4x4 matrix, but they differ significantly in implementation details. Sample 1 uses a nested for loop to iterate through the matrix and sum the diagonal elements, while Sample 2 uses a single for loop and an ArrayList to store the diagonal elements before summing them. The differences in approach and variable names suggest independent development rather than direct copying."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        double sum = 0;
        
        int i=0;
        while(i<n.length){
            sum += n[i][i];
        }
            
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. However, they differ in the method of summing the diagonal elements, with Sample 1 using a for loop and Sample 2 using a while loop. While this difference suggests independent development, the overall similarity in structure and functionality still raises the possibility of plagiarism from a common source or one sample being derived from the other."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus7 {
    
    public static void sumMajorDiagonal(double[][] matrix, int n) {
        double sum = 0;
        Scanner sc = new Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            int j=0;
            while(j<n) {
                 matrix[i][j] = sc.nextDouble();
                j++;
            }
        }
        
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        System.out.println(""Sum of the elements in the major diagonal is "" + sum);
    }
    
    public static void main(String[] args) {
        
        int n=4;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[n][n];
        
        sumMajorDiagonal(matrix , n);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix initialization, and diagonal sum calculation. The only differences are in variable names, method organization, and input method, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 0; i < 4; i++)
			for (j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
			
					double sum = 0;
		i=0;
		while(i<ma.length)
		{
			sum += ma[i][i];
			i++;
		}
			

		System.out.print(""Sum of the elements in the major diagonal is ""+ sum);
	}
	

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names, formatting, and the use of a while loop in Sample 2 instead of a for loop in Sample 1. However, these differences are not significant enough to suggest independent development, and the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    static Scanner s = new Scanner(System.in);
    public static void inputData(double[][] mtx){
        int i =0;
        int j=0;
        while(i<4) {
            while(j<4){
                mtx[i][j] = s.nextDouble();
                j++;
            }
			j=0;
        i++;
        }

    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        inputData(mtx);

        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menjumlahkan angka yang terdapat di dalam array
        double sum;
        sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i][i];
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sum);
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] matriks = new double[4][4];
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int bar = 0; bar < 4; bar++) {
            for (int kol = 0; kol < 4; kol++) {
                matriks[bar][kol] = sc.nextDouble();
            }
        }
        
        hasil(matriks);
    }

    public static double sum(double[][] x) {
        double jumlah = 0;
        int i = 0;
        while(i < 4){
            jumlah += x[i][i];
            i++;
        }
        return jumlah;
    }

    //fungsi output program
    private static void hasil(double[][] x) {
        System.out.print(""Sum of the elements in the major diagonal is ""+ sum(x));
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L5 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        int i = 0;
        double sum = 0;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        while (i < 4) {
            int j = 0;
            while (j < 4) {
                matrix[i][j] = inp.nextDouble();
                j++;
            }
            i++;
        }

        i = 0;
        while (i < matrix.length) {
            sum += matrix[i][i];
            i++;
        }

        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L5 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        int hit = 0;

        while (hit != m.length) {
            sum += m[hit][hit];
            hit++;
        }
        return sum;
    }

    public static void print(double[][] m) {
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = sc.nextDouble();
            }
        }
        print(m);
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. While there are minor differences in naming and code organization, the core implementation - especially the method for summing the diagonal elements - is almost exactly the same, strongly suggesting that one sample was derived from the other or both were derived from a common source."
5,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
        double hasil;
        hasil=HitungDiagonal(matrix);                         
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ hasil);//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal(double[][] matriks) {//fungsi untuk mengitung diagonal
        double total;
        total = 0;
        int i;
        i=0;
        while(i<matriks.length){
         total+=matriks[i][i];
         i++;
        }
        return total;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        System.out.print(""Sum of the elements in the major diagonal is "" + hasilPertambahanDiagonal(n));
    }

    public static double hasilPertambahanDiagonal(double[][] m) {
        double sum = 0;
        
        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				ma[i][j] = input.nextDouble();
		System.out.print(""Sum of the elements in the major diagonal is ""+ sum(ma));
	}
	
	// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
                matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
                                 
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ HitungDiagonal(matrix));//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal(double[][] matriks) {//fungsi untuk mengitung diagonal
        double total = 0;
        for (int i = 0; i < matriks.length; i++) {
            total += matriks[i][i];
        }
        return total;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] mtx = new double[4][4];

        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                mtx[i][j] = s.nextDouble();


        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i++)
            sum += mtx[i][i];
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. While there are minor differences in variable names and formatting choices, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L2 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];
        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                matrix[i][j] = inp.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonalKanan(matrix));
    }

    public static double jumlahDiagonalKanan(double[][] matrix) {
        double sum = 0;
        for (int i = 0; i < matrix.length; i++) {
            sum += matrix[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[4][4];
        for (int x = 0; x < 4; x++) 
        {
            for (int y = 0; y < 4; y++) 
            {
                matrix[x][y] = sc.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is ""
                + hitungDiagonal(matrix));
    }

    public static double hitungDiagonal(double[][] matrix) 
    {
        double jumlah = 0;
        for (int i = 0; i < matrix.length; i++) 
        {
            jumlah += matrix[i][i];
        }
        return jumlah;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;
public class L2 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        for (int i = 0; i < 4; i++) 
        {
            for (int j = 0; j < 4; j++)
            {
                m[i][j] = sc.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) 
        { 
            sum += m[i][i];
        }
        return sum;
    }
    
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(arr));
    }

    public static double sumMajorDiagonal(double[][] m) {
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
    }

    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        
        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        
        return sum;
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];
		//masukan array
		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();
		System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(m));
	}
	
	// menambahkan seluruh isi array
	public static double sumMajorDiagonal(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class multiarray {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];//inisialisai array 2 dimensi
                                      
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();//menginput angka ke dalam array 2d
            }
                          
        }
                                 
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ sumMajorDiagonal(m));//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double sumMajorDiagonal(double[][] m) {//fungsi untuk mengitung diagonal
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];

        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                m[i][j] = input.nextDouble();


        System.out.print(""Sum of the elements in the major diagonal is ""          + sumMajorDiagonal(m));
        }
    //function for Summary
    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;

        for (int i = 0; i < m.length; i++)
            sum += m[i][i];
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in minor formatting choices and variable names, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L1 {

    public static void main(String[] args) {
        //minta input
        Scanner input = new Scanner(System.in);
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        //input the matrix
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));

    }

    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. While there are minor differences in variable names and formatting choices, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in); //harus import dulu
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(m));
    }

    //fungsi untuk menjumlahkan diagonal
    public static double sumMajorDiagonal(double[][] m) {
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] m = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                m[i][j] = input.nextDouble();
            }
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sumMajorDiagonal(m));
    }

    public static double sumMajorDiagonal(double[][] m) {
        // Menjumlahkan angka yang terdapat di dalam array
        double sum = 0;
        for (int i = 0; i < m.length; i++) {
            sum += m[i][i];
        }
        return sum;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] n = new double[4][4];
        
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                n[i][j] = input.nextDouble();
            }
        }
        
        double sum = 0;
        
        int i=0;
        while(i<n.length){
            sum += n[i][i];
            i++;
        }
            
        
        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. While there are minor differences in variable names and code organization, the core implementation is almost exactly the same, indicating that one sample was likely copied from the other or both were derived from a common source."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus7 {

    public static void inputMatrix(double[][] matrix, int n) {
        Scanner sc = new Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = sc.nextDouble();
            }
        }
    }
    
    public static double sumMajorDiagonal(double[][] matrix, int n) {
        if(n>=0) {
            return matrix[n][n] + sumMajorDiagonal(matrix, --n);
        }
        else
            return 0;
    }
    
    public static void main(String[] args) {
        
        int n=4;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        double[][] matrix = new double[n][n];
        
        inputMatrix(matrix, n);
        System.out.println(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(matrix, --n));
    }
}",True,,False,"The two code samples solve the same problem of summing the diagonal elements of a 4x4 matrix, but they use different approaches to achieve this goal. Sample 1 uses a straightforward loop to iterate over the diagonal elements, while Sample 2 uses a recursive method to sum the diagonal elements. The differences in implementation and variable names suggest independent development rather than direct copying."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

class multiarray
{
		// menambahkan seluruh isi array
	public static double sum(double[][] m)
	{
		double sum = 0;
		for (int i = 0; i < m.length; i++)
			sum += m[i][i];
		return sum;
	}
	
	// 25779F8829AB7A7650E85A4CC871E6AC sangat ganteng
	public static void main(String[] args)
	{
		int i,j;
		
		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] ma = new double[4][4];
		//masukan array
		Scanner input = new Scanner(System.in);
		for (i = 3; i >=0; i--)
			for (j = 3; j >= 0; j--)
				ma[3-i][3-j] = input.nextDouble();
			
					double sum = 1;
		i=1;
		while(i<=ma.length)
		{
			sum += ma[i][i];
			i++;
		}
			

		System.out.print(""Sum of the elements in the major diagonal is ""+ (sum-1));
	}
	

}",True,,False,"The two code samples solve the same problem of summing the diagonal elements of a 4x4 matrix, but they differ significantly in implementation details. Sample 1 uses a nested for loop to iterate through the matrix, while Sample 2 uses a while loop and reverse indexing to achieve the same result. Additionally, Sample 2 includes extraneous code and comments that suggest it was not copied from Sample 1. Therefore, the code samples are not plagiarized."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

public class Main {
    static Scanner s = new Scanner(System.in);
    public static void inputData(double[][] mtx){
        int i =0;
        int j=0;
        while(i<4) {
            while(j<4){
                mtx[i][j] = s.nextDouble();
                j++;
            }
			j = 0;
            i++;
        }

    }
    //function for Summary
    public static double sumMajorDiagonal(double[][] mtx) {
        double sum = 0;

        for (int i = 0; i < mtx.length; i=+2)
            sum += mtx[i][i]+mtx[i+1][i+1];
        return sum;
    }

    public static void main(String[] args) {

        double[][] mtx = new double[4][4];

        //input 4*4 matrix data
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        inputData(mtx);

        System.out.print(""Sum of the elements in the major diagonal is ""+ sumMajorDiagonal(mtx));
    }

}",True,,False,"The two code samples solve the same problem of summing the diagonal elements of a 4x4 matrix, but they differ significantly in implementation details. Sample 1 uses a straightforward nested loop to input and calculate the sum, while Sample 2 uses a while loop and a modified summing function that skips every other diagonal element. These differences suggest independent development rather than direct copying, and the lack of any verbatim code segments or identical variable names further supports this conclusion."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        double[][] arr;
        Scanner input = new Scanner(System.in);
        // Input angka ke dalam array n x n pada bagian ini
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        arr = new double[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                arr[i][j] = input.nextDouble();
            }
        }
        // Menjumlahkan angka yang terdapat di dalam array
        double sum;
        sum = 0;
        for (int i = 0; i < arr.length; i = i + 1) {
            sum += arr[i][i];
        }
        // Menampilkan hasil dari pemanggilan fungsi sumMajorDiagonal
        System.out.print(""Sum of the elements in the major diagonal is ""
                + sum);
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 
{
    public static void main(String[] args) 
    {
        Scanner masukkan = new Scanner(System.in);
        double[][] mat = new double[4][4];
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        for (int baris = 0; baris < 4; baris+=1) 
        {
            for (int kolom = 0; kolom < 4; kolom+=1) 
            {
                mat[baris][kolom] = masukkan.nextDouble();
            }
        }
        
        ngitung(mat);
    }

    public static void ngitung(double[][] matriks) 
    {
        double jumlah = 0;
        int i = 3;
        while(i >= 0){
            jumlah += matriks[i][i];
            i--;
        }
        System.out.print(""Sum of the elements in the major diagonal is ""+ jumlah);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus7L6 {

    public static void main(String[] args) {
        //minta input
        Scanner inp = new Scanner(System.in);
        double[][] matrix = new double[4][4];
        int i = 0;
        double sum = 0;
        System.out.print(""Enter a 4 by 4 matrix row by row: "");

        //input the matrix
        while (i < 4) {
            int j = 0;
            while (j < 4) {
                matrix[i][j] = inp.nextDouble();
                
                if(i == j){
                    sum += matrix[i][j];
                }
                
                j++;
            }
            i++;
        }

        System.out.print(""Sum of the elements in the major diagonal is "" + sum);
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal sum calculation. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.*;

public class L6 {

    public static double jumlahDiagonal(double[][] m) {
        double sum = 0;
        int hit = m.length-1;

        while (hit >= 0) {
            sum += m[hit][hit];
            hit--;
        }
        return sum;
    }

    public static void print(double[][] m) {
        System.out.print(""Sum of the elements in the major diagonal is "" + jumlahDiagonal(m));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double[][] m = new double[4][4];
        System.out.println(""Enter a 4 by 4 matrix row by row: "");

        for (int i = 3; i >= 0 ; i--) {
            for (int j = 3; j >= 0; j--) {
                m[i][j] = sc.nextDouble();
            }
        }
        print(m);
    }

}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, matrix input, and diagonal summing method. However, they differ in variable names, loop directions, and even the order of matrix input, indicating independent development rather than direct copying. Therefore, the code samples are not plagiarized."
6,7,"import java.util.Scanner;

public class T7 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		System.out.print(""Enter a 4 by 4 matrix row by row: "");
		double[][] m = new double[4][4];

		for (int i = 0; i < 4; i++)
			for (int j = 0; j < 4; j++)
				m[i][j] = input.nextDouble();

		System.out.print(""Sum of the elements in the major diagonal is "" + sumMajorDiagonal(m));
	}

	public static double sumMajorDiagonal(double[][] m) {
		double sum = 0;

		for (int i = 0; i < m.length; i++)
			sum += m[i][i];

		return sum;
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class arraylebihdarisatu {
   
    public static void main(String[] args) {
        
        
        
        System.out.print(""Enter a 4 by 4 matrix row by row: "");
        
                
       
        
                  
        System.out.print(""Sum of the elements in the major  diagonal is  ""+ HitungDiagonal());//menampilkan fungsi hasil perhitungan diagonal
    }

    public static double HitungDiagonal() {//fungsi untuk mengitung diagonal
        Scanner sc = new Scanner(System.in);
        double hasil=0;
        double[][] matrix = new double[4][4];//inisialisai array 2 dimensi
         for (int x = 0; x < 4; x++) {
            for (int y = 0; y< 4; y++) {
               matrix[x][y] = sc.nextDouble();//menginput angka ke dalam array 2d
               if(x==y)
               {
                  hasil+=matrix[x][y];
               }
            }
                          
        }
        return hasil;
    }
}",True,,False,"The two code samples solve the same problem of summing the diagonal elements of a 4x4 matrix, but they differ significantly in implementation details. Sample 1 uses a double data type and a nested for loop to iterate through the matrix, while Sample 2 uses a List and a single for loop to achieve the same result. The differences in variable names, input methods, and overall structure suggest independent development rather than direct copying."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T06 {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int[] a = new int[10];
        for (int i = 0; i < a.length; i++) {
            System.out.print(""Read a number: "");
            a[i] = s.nextInt();
        }
        for (int i = a.length-1; i >= 0 ; i--) {
            System.out.println(a[i]);
        }
        
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;
public class T06
{
   public static void main(String[] args)
   {
      
      Scanner sc = new Scanner(System.in);
      int[] numbers = new int[10];
      for(int i=0;i < 10;i++)
      {
         System.out.print(""Read a number: "");
         numbers[i]= sc.nextInt();
      }
      for(int i=9;i > -1 ;i--)
      {
         System.out.println(numbers[i]);
      }

   }
}",False,,True,"The two code samples are nearly identical in structure, logic flow, and even variable names, indicating that one was directly copied from the other. The lack of any meaningful differences or variations in implementation strongly suggests that one code sample was simply copied and pasted into the other, with no attempt to modify or adapt the code."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T06 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];
        
        for(int i = 0; i < 10; i++) {
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        
        for(int i = 9; i >= 0; i--) {
            System.out.println(arr[i]);
        }
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int[] numbers=new int[10];
        for(int i=0;i<10;i++){
            System.out.print(""Read a number: "");
            numbers[i]=sc.nextInt();
        }
        for(int i=9;i>=0;i--){
            System.out.println(numbers[i]);
        }
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ in variable names and formatting choices, indicating independent development rather than direct copying. While the core algorithm is the same, the differences in implementation suggest that the code samples are not plagiarized."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a[]=new int[10];
        
        for (int i=0;i<10;i++)
        {
            System.out.print(""Read a number: "");
            int number = sc.nextInt();
            a[i]=number;
        }
        
        for (int i=9;i>=0;i--)
        {
            System.out.println(a[i]);
        }


    }
    
}",False,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reading in 10 integers and printing them in reverse order. Despite minor differences in variable names and formatting choices, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t06 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arrNum = new int[10];
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number: "");
            arrNum[i] = sc.nextInt();
        }
        for (int i = 9; i > -1; i--) {
            System.out.println(arrNum[i]);
        }
    }
}",False,,False,"The two code samples share the same basic structure and purpose, including identical user prompts, array initialization, and output formatting. However, they differ in variable names and minor formatting choices, suggesting independent development rather than direct copying. While the code samples are similar, the differences are significant enough to suggest that they were developed independently."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T06 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a[] = new int[10];
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number"");
            a[i] = sc.nextInt();
        }
        for (int i = 0; i < 10; i++) {
            System.out.println(a[9-i]);
        }
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even the order of the loop iteration, suggesting independent development rather than direct copying."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T06 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] numbers = new int[10];
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number : "");
            numbers[i] = sc.nextInt();
        }
        for (int i = 9; i > -1; i--) {
            System.out.println(numbers[i]);
        }
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T06 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int[] arr = new int[10];
        Scanner sc = new Scanner(System.in);
        for(int i=0;i<10;i++){
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        for(int i=9;i>=0;i--){
            System.out.println(arr[i]);
        }
    }
    
}",False,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ in variable names and formatting choices, indicating independent development rather than direct copying. While the core algorithm is the same, the differences in implementation suggest that the code samples are not plagiarized."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T06 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] array = new int[10];
        for (int i = 0; i < array.length; i++) {
            System.out.print(""Read a number: "");
            array[i] = sc.nextInt();
        }

        System.out.println(array[9]);
        System.out.println(array[8]);
        System.out.println(array[7]);
        System.out.println(array[6]);
        System.out.println(array[5]);
        System.out.println(array[4]);
        System.out.println(array[3]);
        System.out.println(array[2]);
        System.out.println(array[1]);
        System.out.println(array[0]);

    }
}",False,,False,"The two code samples solve the same problem of reading in 10 integers and printing them in reverse order, but they differ significantly in implementation details. Sample 1 uses a loop to read in the integers and another loop to print them in reverse order, while Sample 2 uses a single loop to read in the integers and then prints them in reverse order using individual array indices. The differences in approach and variable names suggest independent development rather than direct copying."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No6 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int[] arr = new int[10];
        Scanner sc = new Scanner(System.in);
        for(int i=0;i<10;i++){
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        for(int i=9;i>=0;i--){
            System.out.println(arr[i]);
        }
    }
    
}",False,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ in variable names and minor formatting choices, indicating independent development rather than direct copying. The differences are significant enough to suggest that the two samples were developed independently, rather than one being copied from the other."
0,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 2645BB47F923271FA1FC06C04E9691EA
 */
public class Soal6 {
    public static void reverse(String number){
        
        for(int i = number.length()-1; i>-1; i--){
            System.out.println(number.charAt(i));
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        String input = """";
        int a;
        for (int i = 0; i < 10; i++) {
            System.out.print(""Read a number: "");
            a = sc.nextInt();
            input+=a;
        }
        reverse(input);
    }
}",False,,False,"The two code samples solve the same problem of reading in 10 integers and then printing them out in reverse order. However, they use different approaches to accomplish this, with Sample 1 using an array and Sample 2 using a string and a separate method for reversal. While there are some similarities in user prompts and output formatting, the differences in implementation suggest independent development rather than direct copying."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(nums[i]);
        }
    }
}",True,,False,"The two code samples are very similar in structure, variable names, and even comments, indicating that one was likely copied from the other or both were derived from a common source. However, there are some minor differences in formatting and spacing, suggesting that the code was not simply copied and pasted but rather modified slightly. Overall, the similarities are strong enough to suggest plagiarism, but the differences are enough to suggest some independent development."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];
	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		for (int i = 0; i < 10; i++) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
		}
		for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, class structure, and even input/output formatting choices, suggesting independent development rather than direct copying."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        for (int x = 0; x < 10; x++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
        }
        for (int x = 9; x >= 0; x--) {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific methods used, suggesting independent development rather than direct copying."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

public class Main {


    public static void main (String[] args) {
        int[] number = new int[10];
     Scanner s = new Scanner(System.in);



        for (int i = 0; i < 10; i++) {

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
        }

        // Output the number
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L3 {
    public static void main (String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
        }
        // Display the array
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(arrNum[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, including the use of a loop to read in 10 integers and then print them out in reverse order. However, there are differences in variable names, formatting, and even comments, indicating that the two samples were likely developed independently rather than copied from each other or a common source."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        java.util.Scanner in = new java.util.Scanner(System.in);
        int[] arrAngka;
        arrAngka = new int[10];
        
        for (int x = 0; x < 10; x++) {
            System.out.print(
                    ""Read a number: "");
            arrAngka[x] = in.nextInt();
        }

        for (int x = 9; x >= 0; x--) {
            System.out.println(arrAngka[x]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;
public class L3 {

    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < 10; i++) 
        {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
        }

        for (int i = 9; i >= 0; i--)
        {
            
            System.out.println(angka[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
3,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(angka[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, including the use of a loop to read in 10 integers and then display them in reverse order. However, there are differences in variable names, formatting, and even comments, indicating that the two samples were likely developed independently rather than copied from each other or a common source."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static int[] nums;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        outputs();
    }
    
    public static void outputs(){
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(nums[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even output formatting, suggesting independent development rather than direct copying."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus6 {
    
    public static void simpanArray(int[] arr, int n) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        
    }
    
    public static void tampilArray(int[] arr, int n) {
        for (int i = n-1 ; i >= 0 ; i--) {
            System.out.println(arr[i]);
        }
    }
    
    public static void main(String[] args) {
        int n=10;
        int[] arr = new int[n];
        simpanArray(arr, n);
        tampilArray(arr, n);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even input prompts, suggesting independent development rather than direct copying."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];
	static void print()
	{
				for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		for (int i = 0; i < 10; i++) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
		}
print();
	}
}",True,,False,"The two code samples solve the same problem of reading in 10 integers and printing them out in reverse order, but they differ significantly in implementation details such as variable names, method organization, and even output formatting. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {
    public static void printNumber(int[] number){
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }

    }

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];


        for (int i = 0; i < 10; i++) {

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
        }

        // Output the number
        printNumber(number);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and printing an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even output formatting, suggesting independent development rather than direct copying."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        showArray(angka);
    }
    
    public static void showArray(int[] angka){
         // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(angka[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method names used, suggesting independent development rather than direct copying."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        proses();
    }
    
    public static void proses(){
        java.util.Scanner in;
        in = new java.util.Scanner(System.in);
        int[] angka;
        angka = new int[10];
        for (int a = 0; a < 10; a++) {
            System.out.print(""Read a number: "");
            angka[a] = in.nextInt();
        }

        for (int b = 9; b >= 0; b--) {
            System.out.println(angka[b]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, including the use of a loop to read in 10 integers and then print them out in reverse order. However, there are differences in variable names and formatting choices, indicating that the two samples were likely developed independently rather than copied from each other or a common source."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L4 {
    public static void main (String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
        }
        // Display the array
        Reverse(arrNum);
    }
    
    private static void Reverse(int[] arr){
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(arr[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and reversing an array of integers. However, they differ significantly in implementation details such as variable names, method organization, and even specific output messages used, suggesting independent development rather than direct copying."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;
public class L4 {
public static void print (int [] arr)
{
    
        for (int i = 9; i >= 0; i--)
        {
            
            System.out.println(arr[i]);
        }
}
    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < 10; i++) 
        {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
        }

       print(angka);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and printing an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even output formatting, suggesting independent development rather than direct copying."
4,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        arr=inputArr(arr);
        printArr(arr);
    }
    
    public static int[] inputArr(int[] arr)
    {
      Scanner sc = new Scanner(System.in);
      for (int x = 0; x < 10; x++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
      }
      return arr;
    }
    
    public static void printArr(int[] arr)
    {
         for (int x = 9; x >= 0; x--) {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
         }

    }
}",True,,False,"The two code samples share the same basic structure and purpose of reading in 10 integers and displaying them in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even input/output messages, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static int[] nums;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        outputs();
    }
    
    public static void outputs(){
        //Display the array
        int i = 9;
        while(i >= 0){
            System.out.println(nums[i--]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even output formatting, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus6 {
    
    public static void simpanArray(int[] arr, int n) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        
        for (int i = 0; i < n; i++) {
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
    }
    
    public static void tampilArray(int[] arr, int i) {
        System.out.println(arr[i]);
    }
    
    public static void main(String[] args) {
        int n=10;
        int[] arr = new int[n];
        simpanArray(arr, n);
        for (int i = n-1 ; i >= 0 ; i--) {
            tampilArray(arr, i);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even input prompts, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];
	static void print()
	{
				for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		int i=0;
		while (i < 10) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
			i++;
		}
print();
	}
}",True,,False,"The two code samples solve the same problem of reading in 10 integers and printing them out in reverse order, but they differ significantly in implementation details such as variable names, loop structures, and even output formatting. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {
    public static void printNumber(int[] number){
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }

    }

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];
        int i=0;
        while(i<10){

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
            i++;
        }

        // Output the number
        printNumber(number);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and print them out in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even input prompts, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        showArray(angka);
    }
    
    public static void showArray(int[] angka){
         // Menampilkan array
        int i = 9;
        while ( i >= 0) {
            System.out.println(angka[i]);
             i--;
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific output messages used, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); //panggil dari package
        int arrAngka[] = new int[10];

        for (int x = 0; x < 10; x++) {
            System.out.print(""Read a number: "");
            arrAngka[x] = sc.nextInt();
        }

        for (int x = 9; x >= 0; x--)
            System.out.println(arrAngka[x]);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L5 {

    public static void main(String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        int i = 0;
        while(i < 10){
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
            i++;
        }
        // Display the array
        Reverse(arrNum);
    }

    private static void Reverse(int[] arr) {
        int i = 9;
        while (i >= 0) {
            //Print angka dalam array
            System.out.println(arr[i]);
            i--;
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and reversing an array of integers. However, they differ significantly in implementation details such as variable names, loop structures, and even output formatting, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

public class L5 {

    public static void print(int[] arr) {
        int i = 9;
        while (i >= 0) {

            System.out.println(arr[i]);
            i--;
        }
    }

    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        int i = 0;
        while (i != 10) {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
            i++;
        }

        print(angka);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and printing an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, loop structures, and even output formatting choices, suggesting independent development rather than direct copying."
5,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        arr=inputArr(arr);
        printArr(arr);
    }
    
    public static int[] inputArr(int[] arr)
    {
      Scanner sc = new Scanner(System.in);
      int x=0;
      while(x<10) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
            x++;
      }
      return arr;
    }
    
    public static void printArr(int[] arr)
    {
         int x=9;
         while(x>=0)  {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
            x--;
         }

    }
}",True,,False,"The two code samples solve the same problem of reading in 10 integers and displaying them in reverse order, but they differ significantly in implementation details. Sample 1 uses a for loop to read in the integers and a separate for loop to display them in reverse order, while Sample 2 uses a while loop and separate methods for input and output. The differences in variable names and overall structure suggest independent development rather than direct copying."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] nums = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(nums[i]);
        }
    }
}",True,,False,"The two code samples are very similar in structure, variable names, and even comments, indicating that one was likely copied from the other or both were derived from a common source. However, there are some minor differences in formatting and spacing, suggesting that the code was not simply copied and pasted but rather modified slightly. Overall, the similarities are strong enough to suggest plagiarism, but the differences are enough to suggest some independent development."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	public static void main (String[] args)
	{
		java.util.Scanner inp = new java.util.Scanner(System.in);
		int[] n = new int[10];
		for (int i = 0; i < 10; i++) 
		{
			System.out.print(""Read a number: "");
			n[i] = inp.nextInt();
		}
		for (int a = 9; a >= 0; a--) 
		{
			System.out.println(n[a]);
		}
	}
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, class names, and even specific method calls used, suggesting independent development rather than direct copying."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        for (int x = 0; x < 10; x++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
        }
        for (int x = 9; x >= 0; x--) {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific methods used, suggesting independent development rather than direct copying."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];


        for (int i = 0; i < 10; i++) {

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
        }

        // Output the number
        for (int i = 9; i >= 0; i--) {
            System.out.println(number[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and outputting an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L2 {
    public static void main (String[] args) {
        //Delarasi
        Scanner inp = new Scanner(System.in);
        int[] arrNum = new int[10];
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
        }
        // Display the array
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(arrNum[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, including the use of a scanner to read in 10 integers and a loop to print them out in reverse order. However, there are differences in variable names, formatting, and even comments, indicating that the two samples were likely developed independently rather than copied from each other or a common source."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        java.util.Scanner masukkan = new java.util.Scanner(System.in);
        int[] number = new int[10];
        
        //masukkan data
        for (int a = 0; a < 10; a++) {
            System.out.print(
                    ""Read a number: "");
            number[a] = masukkan.nextInt();
        }

        //tampilkan ke layar
        for (int a = 9; a >= 0; a--) {
            System.out.println(number[a]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class L2_6 {

    public static void main(String[] args) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        int[] angka = new int[10];
        
        for (int i = 0; i < 10; i++) 
        {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
        }

        for (int i = 9; i >= 0; i--)
        {
            
            System.out.println(angka[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
2,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(angka[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, including identical user prompts, array initialization, and output formatting. However, they differ significantly in variable names, comments, and even licensing information, suggesting independent development rather than direct copying."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
            java.util.Scanner input = new java.util.Scanner(System.in);
            int[] num = new int[10];
        
        for (int i = 0; i < 10; i++) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            num[i] = input.nextInt();
        }
        
        //Display the array
        for (int i = 9; i >= 0; i--) {
            System.out.println(num[i]);
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and even variable names, with only minor differences in formatting and comments. The core algorithm and implementation details are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	public static void main (String[] args)
	{
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];
		for (int i = 0; i < 10; i++) 
		{
			System.out.print(
			""Read a number: "");
			num[i] = input.nextInt();
		}
		for (int i = 9; i >= 0; i--) 
		{
			System.out.println(num[i]);
		}
	}
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as class name, variable names, and even specific formatting choices, suggesting independent development rather than direct copying."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class singlearray {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];//inisialisasi array
        for (int i = 0; i < 10; i++) {//looping untuk input array
            System.out.print( ""Read a number: "");
            num[i] = input.nextInt();//input ke array
        }
        for (int i = 9; i >= 0; i--) {//looping untuk menampilkan array
            System.out.println(num[i]);//menampilkan array
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific method calls used, suggesting independent development rather than direct copying."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {

    public static void main (String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];


        for (int i = 0; i < 10; i++) {

            // Input the number

              System.out.print(""Read a number: "");
            num[i] = input.nextInt();
        }

        // Output the number
          for (int i = 9; i >= 0; i--) {
              System.out.println(num[i]);
          }
    }
}",True,,True,"The two code samples are very similar in structure, logic flow, and even variable names, indicating that one was likely copied from the other or both were derived from a common source. The only differences are in minor formatting choices and comments, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L1 {
    public static void main (String[] args) {
        //Delarasi
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];
        // for untuk 10 kali input
        for (int i = 0; i < 10; i++) {
            // Read a number
            System.out.print(""Read a number: "");
            num[i] = input.nextInt();
        }
        // Display the array
        for (int i = 9; i >= 0; i--) {
            //Print angka dalam array
            System.out.println(num[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, comments, and even specific formatting choices, suggesting independent development rather than direct copying."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 
{
    public static void main(String[] args) 
    {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];
        for (int i = 0; i < 10; i++) 
        {
            System.out.print(
                    ""Read a number: "");
            num[i] = input.nextInt();
        }
        
        //tampilkan ke layar
        for (int i = 9; i >= 0; i--) 
        {
            System.out.println(num[i]);
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one code sample was likely copied from the other or both were derived from a common source."
1,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int[] num = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            num[i] = input.nextInt();
        }
        // Menampilkan array
        for (int i = 9; i >= 0; i--) {
            System.out.println(num[i]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, including identical user prompts, array initialization, and output formatting. However, they differ in minor details such as variable names and comments, suggesting independent development rather than direct copying. Therefore, the code samples are not plagiarized."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static int[] nums;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        nums = new int[10];
        
        for (int i = 10; i >= 0; i--) {
            //Read a number
            System.out.print(
                    ""Read a number: "");
            nums[i] = input.nextInt();
        }
        
        outputs();
    }
    
    public static void outputs(){
        //Display the array
        int i = 9;
        while(i >= 0){
            System.out.println(nums[i--]);
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as loop direction, variable names, and even output formatting, suggesting independent development rather than direct copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus6 {
    
    public static void simpanArray(int[] arr, int i) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        
        if(i>0) {
            simpanArray(arr, --i);
            System.out.print(""Read a number: "");
            arr[i] = sc.nextInt();
        }
        
    }
    
    public static void tampilArray(int[] arr, int i) {
        if(i>=0){
            System.out.println(arr[i]);
            tampilArray(arr, --i);
        }
    }
    
    public static void main(String[] args) {
        int n=10;
        int[] arr = new int[n];
        simpanArray(arr, n);
        tampilArray(arr, --n);
    }
}",True,,False,"The two code samples solve the same problem of reading in 10 integers and displaying them in reverse order, but they differ significantly in implementation. Sample 1 uses a for loop to read in the integers and a separate for loop to display them in reverse order, while Sample 2 uses recursive methods to accomplish the same task. The differences in structure, variable names, and even output formatting suggest independent development rather than direct copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

class singlearray
{
	static int[] n = new int[10];

	public static void main (String[] args)
	{
				
		java.util.Scanner inp = new java.util.Scanner(System.in);

		int i=9;
		int a=0;
		while (i >=0) 
		{
			System.out.print(""Read a number: "");
			n[a] = inp.nextInt();
			a++;
			i--;
		}
	print();
	}
		static void print()
	{
				for (int a = 0; a <=9; a++) 
		{
			System.out.println(n[9-a]);
		}
	}
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and print them out in reverse order. However, they differ significantly in implementation details such as variable names, loop structures, and even the use of a separate method in Sample 2. These differences suggest independent development rather than direct copying, and therefore the code samples are not considered plagiarism."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","public class Main {
    public static void printNumber(int[] number){
        for (int i = 0; i < 10; i++) {
            System.out.println(number[i]);
        }

    }

    public static void main (String[] args) {
        java.util.Scanner s = new java.util.Scanner(System.in);
        int[] number = new int[10];
        int i=9;
        while(i>=0){

            // Input the number

            System.out.print(""Read a number: "");
            number[i] = s.nextInt();
            i--;
        }

        // Output the number
        printNumber(number);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and print them out in reverse order. However, they differ significantly in implementation details such as variable names, input methods, and output formatting, suggesting independent development rather than direct copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int[] angka;
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = new int[10];
        for (int i = 0; i < 10; i++) {
            // Input angka pada bagian ini
            System.out.print(
                    ""Read a number: "");
            angka[i] = input.nextInt();
        }
        showArray(angka);
    }
    
    public static void showArray(int[] angka){
         // Menampilkan array
        int i = 0;
        while ( i <= 9) {
            System.out.println(angka[i]);
             i++;
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and displaying an array of integers in reverse order. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific output messages used, suggesting independent development rather than direct copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 
{
    static Scanner sc = new Scanner(System.in);
    
    public static void tampil(int[]angka){
        for (int x = 10; x > 0; x--)
            System.out.println(angka[x]);
    }
    
    public static void main(String[] args) 
    {
        int arrAngka[] = new int[10];

        for (int x = 0; x < arrAngka.length; x++) 
        {
            System.out.print(""Read a number: "");
            arrAngka[x] = sc.nextInt();
        }

        tampil(arrAngka);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and display them in reverse order. However, they differ significantly in implementation details such as variable names, method organization, and even output formatting, suggesting independent development rather than direct copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus6L6 {
    
    public static void main(String[] args) {
        //Delarasi
        int[] arrNum = new int[10];
        Scanner inp = new Scanner(System.in);
        // for untuk 10 kali input
        int i = 9;
        while(i >= 0){
            // Read a number
            System.out.print(""Read a number: "");
            arrNum[i] = inp.nextInt();
            i--;
        }
        
        // Display the array
        Reverse(arrNum);
    }

    private static void Reverse(int[] arr) {
        int i = 0;
        while (i < 10) {
            //Print angka dalam array
            System.out.println(arr[i]);
            i++;
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of reading and reversing an array of integers. However, they differ significantly in implementation details such as variable names, loop structures, and even output formatting, suggesting independent development rather than direct copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.*;

public class L6 {

    public static void print(int[] arr) {
        int i = 9;
        int j = 0;
        while (j < 10) {

            System.out.println(arr[i]);
            i--;
            j++;
        }
    }

    public static void main(String[] args) {
        int[] angka = new int[10];
        Scanner sc = new java.util.Scanner(System.in);
        int i = 0;
        while (i != 10) {

            System.out.print(""Read a number: "");
            angka[i] = sc.nextInt();
            i++;
        }

        print(angka);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to read in 10 integers and print them out in reverse order. However, they differ significantly in implementation details such as variable names, loop structures, and even output formatting, suggesting independent development rather than direct copying."
6,6,"public class T6 {
	public static void main(String[] args) {
		java.util.Scanner input = new java.util.Scanner(System.in);
		int[] num = new int[10];

		for (int i = 0; i < 10; i++) {
			// Read a number
			System.out.print(""Read a number: "");

			num[i] = input.nextInt();
		}

		// Display the array
		for (int i = 9; i >= 0; i--) {
			System.out.println(num[i]);
		}
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TestSatuArray {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[10];//inisialisasi array
        
        printArr(inputArr(arr));
    }
    
    public static int[] inputArr(int[] arr)
    {
      Scanner sc = new Scanner(System.in);
      int x=0;
      int[] arr2=new int [10];
      while(x<10) {//looping untuk input array
            System.out.print( ""Read a number: "");
            arr[x] = sc.nextInt();//input ke array
            x++;
      }
      x=9;
      for(int i=0;i<10;i++){
         arr2[i]=arr[x];
         x--;
      }
      return arr2;
    }
    
    public static void printArr(int[] arr)
    {
         int x=0;
         while(x<10)  {//looping untuk menampilkan array
            System.out.println(arr[x]);//menampilkan array
            x++;
         }

    }
}",True,,False,"The two code samples solve the same problem of reading in 10 integers and then printing them out in reverse order. However, they differ significantly in implementation, with Sample 2 using an ArrayList and separate methods for input and output, while Sample 1 uses a simple array and a single loop. The differences in approach and structure suggest independent development rather than direct copying."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T01 {
    public static void main(String[] args) {
        for (int i=0;i<5;i++){
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,True,"The two code samples are nearly identical in structure, logic, and output, with only minor differences in formatting and comments. The core functionality and purpose are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class T01
{
   public static void main(String[] args)
   {
      for(int i=0;i < 5;i++)
      {
         System.out.println(""Welcome To Java"");
      }
      
   }
}",False,,False,"The two code samples share the same output and purpose, but differ significantly in implementation details such as variable names, formatting choices, and even the specific number of iterations in the loop. These differences suggest independent development rather than direct copying, and the code samples are not considered plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

public class T01 {
    public static void main(String[] args) {
        for(int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples share the same output message and purpose, but differ significantly in implementation details such as loop structure and variable names. These differences suggest independent development rather than direct copying, as the core algorithm is simple and widely used. Therefore, the code samples are not considered plagiarism."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {

    public static void main(String[] args) {
	    for(int i=0;i<5;i++){
	        System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples share the same output message and structure, but differ in implementation details such as variable names and loop structure. These differences suggest independent development rather than direct copying, as the core algorithm is simple and common enough to be developed independently by multiple programmers."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author 672CAF27F5363DC833BDA5099775E891
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        String a = ""Welcome To Java"";
        for(int i=0;i<6;i++)
        {
            System.out.println(a);
        }
        
    }
    
}",False,,False,"The two code samples produce the same output, but they differ significantly in implementation details. Sample 1 uses repeated print statements, while Sample 2 uses a loop and a string variable. The differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
public class t01 {

    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }

    }
}",False,,False,"The two code samples produce identical output and solve the same task, but they differ significantly in implementation details such as variable names, formatting choices, and even class names. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T01 {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,True,"The two code samples are nearly identical in structure, logic, and output, with only minor differences in formatting and comments. However, the differences are not significant enough to suggest independent development, and the presence of a license header and author comment in Sample 2 suggests an attempt to disguise copied code. Therefore, the code samples are likely plagiarized from each other or a common source."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T01 {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,False,"The two code samples share the same basic structure and output, but differ in implementation details such as the use of a loop in Sample 2 and different variable names. However, the task of printing ""Welcome to Java"" five times is a common programming exercise, and the differences in implementation suggest independent development rather than direct copying."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T01 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        for(int i=0;i<5;i++)
            System.out.println(""Welcome To Java"");
    }
    
}",False,,True,"The two code samples are nearly identical in structure, logic flow, and output, with only minor differences in variable names and formatting choices. The core functionality and purpose are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T01 {

    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome To Java"");
        }
    }
}",False,,True,"The two code samples are nearly identical in structure, logic, and output, with only minor differences in formatting and comments. The core functionality and purpose are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No1 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
        System.out.println(""Welcome To Java"");
    }
    
}",False,,False,"These code samples are not plagiarism because they use different variable names, formatting choices, and even comments, indicating independent development. While they produce the same output, the task is so simple and common that it is unlikely to be considered plagiarism in most contexts, especially given the differences in implementation details."
0,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal1 {
    public static void main(String[] args) {
        for(int i = 0; i<5; i++)    
            System.out.println(""Welcome to Java"");
        
    }
}",False,,False,"The two code samples share the same output message and structure, but differ in implementation details such as the use of a loop in Sample 2 and the absence of a Scanner object. These differences suggest independent development rather than direct copying, as the core algorithm and purpose are simple enough to be arrived at independently."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	public static void main(String[] args)
	{
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,False,"These code samples are not plagiarism because they use different class names and have no other similarities beyond printing the same message five times. While the output is the same, this is a trivial task that can be solved in many ways, and the differences in class structure and naming suggest independent development rather than copying."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including different class names, variable names, and even comments. While they share the common goal of printing a specific message, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus1L3 {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //Print Welcome to java 5 kali
		String teks = ""Welcome to Java"";
        System.out.println(teks);
        System.out.println(teks);
        System.out.println(teks);
        System.out.println(teks);
        System.out.println(teks);
    }
    
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and output, with only minor differences in comments and variable names. The core functionality and purpose are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they use different class names, comments, and license headers, indicating independent development. While the core functionality and output are the same, the differences in non-functional elements suggest that the code was developed independently or modified from a common source."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L3 {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples are identical in structure, logic, and output, indicating that one was directly copied from the other. The lack of any meaningful differences or variations in implementation strongly suggests that one code sample was simply copied and pasted into the other, with no attempt to modify or adapt the code."
3,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 //class
{
    public static void main(String[] args) //main method
    {
        System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they use different class and method names, and the second sample includes additional comments and licensing information. While the core functionality and output are the same, the differences in coding style and structure suggest independent development rather than direct copying."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
        cetak();
    }
    public static void cetak(){
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java""); 
        System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including different class names, different commenting styles, and different method structures. While they share the common goal of printing ""Welcome to Java"" five times, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	static String s;
	static void Cetak()
	{
		System.out.println(s);
		
		System.out.println(s);
		System.out.println(s);
		
		System.out.println(s);
		
		System.out.println(s);
	}
	public static void main(String[] args)
	{
		s = ""Welcome to Java"";
		// code to print ""Welcome to Java""
		Cetak();
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,True,"These code samples can be considered plagiarism because they produce identical, specific output and solve the same unusual task, with the second sample appearing to be an attempt to disguise copied code through minimal modifications. Despite differences in class name and method organization, the core functionality and purpose remain the same, indicating a lack of originality that would likely be considered plagiarism in academic or professional contexts."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {

    public static void main(String[] args) {
        printHello();

    }

    private static void printHello() {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }

}",True,,True,"These code samples can be considered plagiarism because they produce identical, specific output and solve the same unusual task, with the second sample appearing to be an attempt to disguise copied code through minimal modifications. Despite the addition of a separate method and comments in Sample 2, the core functionality and purpose remain the same, indicating a lack of originality that would likely be considered plagiarism in academic or professional contexts."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {
    public static void printOut(){
        System.out.println(""Welcome to Java"");
    }

    public static void main(String[] args) {
        //print 5x ""Welcome To Java""
        printOut();
        printOut();
        printOut();
        printOut();
        printOut();
    }
}",True,,False,"These code samples are not plagiarism because they use different implementations to achieve the same output. While both samples print ""Welcome to Java"" five times, Sample 2 uses a separate method to achieve this, while Sample 1 simply repeats the print statement. Additionally, Sample 2 uses a different class and method name, indicating independent development rather than copying."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L4 {

    public static void print() {
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }

    public static void main(String[] args) {
        
        print();
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including separate methods vs. inline printing, different class names, and unique variable names. While they share the common goal of printing a specific message, the differences in coding style, structure, and overall implementation indicate they are independent solutions to a standard programming exercise."
4,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        String kal = ""Welcome to Java"";
        tampil(kal);
    }

    //fungsi menampilkan kalimat
    private static void tampil(String kalimat) {
        System.out.println(kalimat);
        System.out.println(kalimat);
        System.out.println(kalimat);
        System.out.println(kalimat);
        System.out.println(kalimat);
    }
}",True,,True,"These code samples can be considered plagiarism because they produce identical, specific output and solve the same unusual task, with the second sample appearing to be an attempt to disguise copied code through minimal modifications. Despite the addition of a separate method and some minor changes in formatting and variable names, the core functionality and purpose remain the same, indicating a lack of originality that would likely be considered plagiarism in academic or professional contexts."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class WelcomeToJava {
    public static void test(int i) {
        while(i>0) {
            System.out.println(""Welcome To Java"");
            i--;
        }
    }
    
    public static void main(String[] args) {
        test(5);
    }
}",True,,False,"The two code samples share the same output message and purpose, but differ significantly in implementation details. Sample 1 uses repeated print statements, while Sample 2 uses a loop and separate method to achieve the same result. The differences in variable names and formatting choices also suggest independent development rather than direct copying."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {

    public static void main(String[] args) {
        printHello();

    }

    private static void printHello() {
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi lagi
    }

}",True,,False,"The two code samples share the same output message and structure, but differ significantly in implementation details such as variable names, method organization, and even the use of a loop in Sample 2. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class PrintJava {

    public static void main(String[] args) {
        printAll();
    }

    public static void printAll() {
        //mencetak welcome to java sebanyak 5 kali
        for (int i = 0; i < 5; i++) {
            System.out.print(""Welcome to Java"");
            System.out.println("""");
        }
    }

}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including separate methods vs. inline printing, different looping structures, and unique formatting choices. While they share the common goal of printing ""Welcome to Java"" five times, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
        cetak();
    }
    public static void cetak(){
        for (int i = 0; i < 5; i++) {
            System.out.println(""Welcome to Java""); 
            
        }
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including separate methods vs. inline printing, different looping structures, and unique commenting styles. While they share the common goal of printing a specific message, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
5,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L5 {

    public static void print() {

        for (int i = 0; i < 5; i++) {
            System.out.print(""Welcome to Java\n"");
        }
    }

    public static void main(String[] args) {
        print();
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including separate methods vs. inline printing, different loop structures, and unique variable names. While they share the common goal of printing ""Welcome to Java"" five times, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class WelcomeToJava {
    public static void main(String[] args) {
		{
            System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
			System.out.println(""Welcome To Java"");
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic, and output, with only minor differences in formatting and comments. However, the differences are not significant enough to suggest independent development, and the presence of a license header and author comment in Sample 2 suggests an attempt to disguise copied code. Therefore, the code samples are likely plagiarized from each other or a common source."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including different class names, variable names, and even comments. While they share the common goal of printing a specific message, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class PrintJava {
    public static void main(String[] args) {
            //mencetak welcome to java sebanyak 5 kali
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they solve a simple task of printing a specific message multiple times, which is a common programming exercise. While they share the same output message and structure, the differences in comments, formatting, and even license headers suggest independent development and originality."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they use different class names, comments, and license headers, indicating independent development. While the core functionality and output are the same, the differences in non-functional elements suggest that the code was developed independently or modified from a common source."
2,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author 19984DCAEA13176BBB694F62BA6B5B35
 */
public class L2 {
     public static void main(String[] args) {
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,True,"The two code samples are identical in structure, logic, and output, indicating that one was directly copied from the other. The only difference is in the author comment and license header, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java""); 
            System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they use different class names, comments, and license headers, indicating independent development. While the core functionality and output are the same, the differences in non-functional elements suggest that the code was developed independently or modified from a common source."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}",True,,True,"The two code samples are identical in structure, logic, and output, indicating that one was directly copied from the other. The lack of any meaningful differences or variations in implementation strongly suggests that one code sample was simply copied and pasted into the other, with no attempt to modify or adapt the code."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	public static void main(String[] args)
	{
		
		// code to print ""Welcome to Java""
		System.out.println(""Welcome to Java"");
		
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		
		System.out.println(""Welcome to Java"");
		
		System.out.println(""Welcome to Java"");
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including different class names, different main method names, and different commenting styles. While they share the common goal of printing ""Welcome to Java"" five times, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {

    public static void main(String[] args) {
        //print ""Welcome To Java""

    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");
    System.out.println(""Welcome to Java"");

    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including different class names, different variable names, and different commenting styles. While they share the common goal of printing ""Welcome to Java"" five times, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
            //mencetak welcome to java sebanyak 5 kali
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
            System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they solve a simple task of printing a specific message multiple times, which is a common programming exercise. While they share the same output and structure, the differences in comments, formatting, and even license headers suggest independent development rather than direct copying."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args)
    {
        //menampilkan sesuatu ke layar
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they use different variable names, comments, and even a different license header. While they produce the same output and have the same basic structure, the differences in formatting and comments suggest independent development rather than direct copying."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus1L1 {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //Print Welcome to java 5 kali
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
        System.out.println(""Welcome to Java"");
    }
}",True,,False,"These code samples are not plagiarism because they use different variable names, comments, and even licensing information. While they produce the same output and solve the same task, the differences in coding style and structure indicate they are independent solutions to a standard programming exercise."
1,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Welcome to Java""); //ini buat ngeprint
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi
        System.out.println(""Welcome to Java""); //ini buat ngeprint lagi lagi lagi lagi
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including different class names, different variable names, and different numbers of lines of code. While they share the common goal of printing a specific message multiple times, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) { 
        cetak();
    }
    public static void cetak(){
        for (int i = 5; i > -1; i--) {
            System.out.println(""Welcome to Java""); 
            
        }
    }
}",True,,False,"These code samples are not plagiarism because they use different implementations to achieve the same output. While both samples print the same message five times, they differ in the use of loops and methods, as well as the presence of comments and licensing information in Sample 2. These differences suggest independent development rather than direct copying or modification of one sample from the other."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class WelcomeToJava {
    public static String test(int i) {
        if(i>0) {
            System.out.println(""Welcome To Java"");
            return test(--i);
        }
        else
            return """";
    }
    
    public static void main(String[] args) {
        int i=5;
        test(i);
    }
}",True,,False,"The two code samples produce the same output, but they differ significantly in implementation. Sample 1 uses repeated print statements, while Sample 2 uses a recursive method to achieve the same result. The differences in approach and structure suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","class HelloWorld
{
	static String s;
	static void Cetak()
	{
		for(int a=5;a>0;a--)
		System.out.println(s);

	}
	public static void main(String[] args)
	{
		s = ""Welcome to Java"";
		// code to print ""Welcome to Java""
		Cetak();
		
		//End of code
		// 25779F8829AB7A7650E85A4CC871E6AC Ganteng
		
	}
	
}",True,,False,"The two code samples share the same output message and structure, but differ significantly in implementation details such as variable names, formatting choices, and even class declaration. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class Main {

    public static void main(String[] args) {
	//print ""welcome to java"" 5x
    String java=""Welcome To Java"";
for(int baris=9;baris>=0;baris-=2){
    System.out.print(java);
    System.out.println();
}
    }
}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including different looping structures, variable names, and output formatting. While they share the common goal of printing a specific message multiple times, the differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class PrintJava {

    public static void main(String[] args) {
        printAll();
    }

    public static void printAll() {
        //mencetak welcome to java sebanyak 5 kali
        for (int i = 5; i > 0; i--) {
            System.out.print(""Welcome to Java"");
            System.out.println("""");
        }
    }

}",True,,False,"These code samples are not plagiarism because they use distinctly different implementations to solve the same problem, including separate methods vs. inline printing, different variable names, and unique formatting choices. While they share the common goal of printing ""Welcome to Java"" five times, the differences in coding style, method organization, and overall structure indicate they are independent solutions to a standard programming exercise."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 
{
    public static void main(String[] args) 
    {
        String input = ""Welcome to Java\n"";
        keluaran(input);
    }
    
    private static void keluaran(String kal) 
    {
        int limit=0; //batas perulangan
        while(limit!=5) //perulangan sebanyak 5x
        {
            System.out.print(kal);
            limit++;
        }
    }
}",True,,False,"The two code samples share the same output message and structure, but differ in implementation details such as variable names, formatting choices, and even the use of a separate method in Sample 2. These differences suggest independent development rather than direct copying, and the code samples are not considered plagiarism."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus1L6 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //Print Welcome to java 5 kali
        cetakTeks(""Welcome to Java"");
    }

    private static void cetakTeks(String teks) {
        int i = 5;
        while(i > 0){
            System.out.println(teks);
            i--;
        }
    }
}",True,,False,"The two code samples share the same output message and structure, but differ in implementation details such as variable names and method organization. However, the differences are significant enough to suggest independent development rather than direct copying, as the second sample uses a separate method and while loop to achieve the same output. Therefore, the code samples are not plagiarized."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class L6 {

    public static void print() {

        for (int i = 5; i > 0; i--) {
            System.out.print(""Welcome to Java\n"");
        }
    }

    public static void main(String[] args) {
        print();
    }
}",True,,True,"The two code samples produce the same output and solve the same task, but they differ in implementation details such as variable names and formatting choices. However, these differences are not significant enough to suggest independent development, and the core functionality and purpose remain the same. Therefore, the code samples are likely plagiarized from each other or a common source."
6,1,"public class T1 {
	public static void main(String[] args) {
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
		System.out.println(""Welcome to Java"");
	}

}","public class hellow {

    public static void main(String[] args) {
        printHello();

    }

    private static void printHello() {
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi
        System.out.print(""Welcome to Java \n""); //ini buat ngeprint lagi lagi lagi lagi
    }

}",True,,False,"The two code samples share the same output message and structure, but differ significantly in implementation details such as variable names, method organization, and even the use of a loop in Sample 2. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T04 {
    public static void main(String[] args) {
        System.out.println(""Miles           Kilometers"");
        for (int i = 1; i < 10; i++) {
            System.out.println(i+""               ""+i*1.609);
        }
        System.out.println(10+""              ""+10*1.609);
    }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce the same output format, but they differ significantly in implementation details. Sample 1 uses a while loop and tab characters for formatting, while Sample 2 uses a for loop and a space character. The differences in variable names and formatting choices suggest independent development rather than direct copying."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;
public class T04
{
   public static void main(String[] args)
   {
      System.out.println(""Miles       Kilometers"");

      for(int i=1;i < 11;i++)
      {
         if(i < 10)
         {
            System.out.println(i+""           ""+i*1609);
         }
         else
         {
            System.out.println(i+""          ""+i*1609);
         }
      }

   }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce the same output format, but they differ significantly in implementation details. Sample 1 uses a while loop and calculates the conversion factor, while Sample 2 uses a for loop and hardcodes the conversion factor. The differences in variable names, formatting, and even output values suggest independent development rather than direct copying."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.text.DecimalFormat;

public class T04 {
    public static void main(String[] args) {
        DecimalFormat d = new DecimalFormat(""0.000"");
        
        System.out.println(""Miles\tKilometers"");
        for(int i = 1; i <= 10; i++) {
            System.out.println(i + ""\t"" + d.format(i * 1.609));
        }
    }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce the same output format, but they differ significantly in implementation details such as variable names, loop structure, and output formatting. These differences suggest independent development rather than direct copying, and the code samples are not considered plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles    Kilometers"");
        for(int i=1;i<=10;i++){
            System.out.println(i+""        ""+i*1609);
        }
    }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce the same output, but they use different implementation details such as loop structure, formatting, and even variable names. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int miles = 1;
        System.out.print(""Miles    Kilometer"");
        for(int i=0;i<10;i++)
        {
            double kilo = miles*1.609;
            System.out.println("""");
            System.out.print(miles+""        ""+kilo);
            miles++;

        }
        
    }
    
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce the same output format. However, they differ significantly in implementation details, including the use of a while loop vs. a for loop, different variable names, and different output formatting choices. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
public class t04 {

    public static void main(String[] args) {
        System.out.println(""Miles\tKilometers"");
        for (int i = 1; i < 11; i++) {
            System.out.println(i + ""\t"" + i * 1.609);
        }
    }
}",False,,True,"The two code samples are very similar in structure and output, but they differ in variable names and formatting choices. However, the core algorithm and logic flow are the same, indicating that one sample was likely derived from the other or both were derived from a common source. Despite the differences in variable names and formatting, the code samples are similar enough to suggest a lack of originality and potential plagiarism."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T04 {
    public static void main(String[] args) {
        System.out.println(""miles \t kilometers"");
        for (int i = 0; i < 10; i++) {
            System.out.println(i+1+""\t""+((i+1)*1.609));
        }
    }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce identical output. However, they differ significantly in implementation details such as variable names, formatting choices, and even the use of a while loop vs. a for loop. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T04 {
    public static void main(String[] args) {
        double kilo;
        double milToKilo = 1.609;
        System.out.println(""Miles\tKilometers"");
        for (int i = 1; i < 11; i++) {
            kilo = i * milToKilo;
            System.out.println(i + ""\t"" + kilo);
        }
    }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce the same output format, but they differ significantly in implementation details. Sample 1 uses a while loop and tab characters for formatting, while Sample 2 uses a for loop and spaces for formatting. The variable names and even the conversion factor are different, indicating independent development rather than direct copying."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T04 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int mil = 1609;
        System.out.println(""Miles\tKilometers"");
        for(int i=1;i<=10;i++){
            System.out.println(i + ""\t"" + i*mil);
        }
    }
    
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and produce the same output format, but they use different implementation details such as loop types, variable names, and even conversion factors. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.text.DecimalFormat;
import java.text.NumberFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T04 {

    public static void main(String[] args) {
        NumberFormat formatter = new DecimalFormat(""#0"");
        System.out.println(""Miles"" + ""\t"" + ""Kilometers"");
        System.out.println(""1"" + ""\t"" + (1 * 1.609));
        System.out.println(""2"" + ""\t"" + (2 * 1.609));
        System.out.println(""3"" + ""\t"" + (3 * 1.609));
        System.out.println(""4"" + ""\t"" + (4 * 1.609));
        System.out.println(""5"" + ""\t"" + (5 * 1.609));
        System.out.println(""6"" + ""\t"" + (6 * 1.609));
        System.out.println(""7"" + ""\t"" + (7 * 1.609));
        System.out.println(""8"" + ""\t"" + (8 * 1.609));
        System.out.println(""9"" + ""\t"" + (9 * 1.609));
        System.out.println(""10"" + ""\t"" + (10 * 1.609) + formatter.format(0.0));
    }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers, but they differ significantly in implementation. Sample 1 uses a while loop to iterate through the values, while Sample 2 uses a series of print statements to output the values directly. Additionally, Sample 2 includes formatting options not present in Sample 1. These differences suggest independent development rather than direct copying."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author Elvark
 */
public class No4 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int mil = 1609;
        System.out.println(""Miles\tKilometers"");
        for(int i=1;i<=10;i++){
            System.out.println(i + ""\t"" + i*mil);
    }
    }
    
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers, but use different approaches to achieve the same result. Sample 1 uses a while loop to iterate through the miles and calculate the corresponding kilometers, while Sample 2 uses a for loop and a pre-defined conversion factor. While the output format is similar, the differences in implementation suggest independent development rather than direct copying."
0,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.text.DecimalFormat;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal4 {
    public static void main(String[] args) {
        int arr[][] = new int[11][2];
        DecimalFormat df = new DecimalFormat(""#.###"");
        for(int i = 0; i<11; i++){
            if(i==0)
                System.out.println(""Miles \t Kilometers"");
            else
                System.out.println(i + ""\t"" + df.format(i*1.609));
        }
    }
}",False,,False,"The two code samples solve the same problem of converting miles to kilometers and display the results in a tabular format. However, they differ significantly in implementation, with Sample 1 using a while loop and Sample 2 using a for loop and a DecimalFormat object. The output formatting and variable names are also different, indicating independent development rather than direct copying."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        int mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        
        //Use while loop
        while (mile <= 10) {
                System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
        }
    }
}",True,,True,"The two code samples are very similar in structure, logic flow, and output formatting, but there are some differences in variable names and comments. However, these differences are not significant enough to suggest independent development, and the core algorithm and output are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void Konversi(int n) {
        int miles = 1;
        while (miles <= n) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        Konversi(10);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to convert miles to kilometers and print a table of values. However, they differ significantly in implementation details such as variable names, method organization, and even output formatting, suggesting independent development rather than direct copying."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		int m = 1;
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		
		while (m <= 10) {
		System.out.println(m + ""\t\t"" + m * 1.609);
		m++;
		//ditambahin iteratornya
		}
	}
}",True,,True,"The two code samples share the same basic structure and output, but differ in variable names and minor formatting choices. However, the core algorithm and logic flow are the same, indicating that one sample was likely copied from the other or both were derived from a common source. Despite the minor differences, the code samples are similar enough to suggest a lack of originality and potential plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        //declare MIL
        int mil=1;
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
}",True,,True,"The two code samples share the same basic structure, logic flow, and output formatting, with only minor differences in variable names and formatting choices. However, these differences are not significant enough to suggest independent development, and the core algorithm and variable usage are the same, indicating that one code sample was likely copied from the other or both were derived from a common source."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        while (jarak <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
            jarak++;
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to convert miles to kilometers and print a table of results. However, they differ significantly in implementation details such as variable names, comments, and even specific formatting choices, suggesting independent development rather than direct copying."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        //inisialisasi
        int mile = 1;
        
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        while (mile <= 10) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
            mile++;
        }
    }
}",True,,False,"The two code samples share the same basic structure, output formatting, and even variable names, indicating that one was likely copied from the other or both were derived from a common source. However, the differences in comments, class name, and minor formatting choices suggest that the code was not copied verbatim but rather modified to some extent. Therefore, while the code samples exhibit similarities that suggest plagiarism, the extent of the copying is unclear and may depend on the specific context in which they were used."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L3 {
    public static void main(String[] args) {
        int counter = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        while (counter <= 10) {
            //Menampilkan hasil
            //counter = miles
            System.out.println(counter + ""\t\t"" + counter * 1.609);
            counter++;
        }
    }
}",True,,True,"The two code samples share the same basic structure and output format, but differ in variable names and minor formatting choices. However, the core algorithm and logic flow are the same, indicating that one sample was likely copied from the other or both were derived from a common source. Despite the minor differences, the similarities are significant enough to suggest a lack of originality and potential plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L3 {

    public static void main(String[] args) {
        int mil = 0 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        mil = 1;

        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }

    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in variable names and formatting choices. The core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both were derived from a common source, indicating likely plagiarism."
3,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil ;
        mil= 1;//inisialisasi while pertama kali
        while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }//looping dari 1 sampai 10
   }
}",True,,False,"The two code samples share the same basic structure and output, but differ in implementation details such as variable names and the use of a while loop vs. a for loop. These differences suggest independent development rather than direct copying, as the core algorithm is simple and widely used for unit conversion."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int mile;
    public static void main(String[] args) {
        mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        loops();
    }
    
    public static void loops(){
        //Use while loop
        while (mile <= 10) {
                System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
        }
    }
}",True,,False,"The two code samples share the same basic structure and output, with identical formatting and even identical comments. However, there are some differences in variable names and method organization, indicating that they were likely developed independently. While the core algorithm is the same, the differences in implementation suggest that they are not plagiarized from each other or a common source."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void Konversi(int miles) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        for(int miles=1 ; miles<=10 ; miles++)
            Konversi(miles);
    }
}",True,,False,"The two code samples share the same basic structure and output, with both using a loop to convert miles to kilometers and printing the results in a tabular format. However, the second sample uses a separate method to perform the conversion and print the output, and also includes additional comments and licensing information. These differences suggest independent development rather than direct copying, and therefore the code samples are not considered plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	static void hitHasil(int m)
	{
		while (m <= 10) 
		{
		System.out.println(m + ""\t\t"" + m * 1.609);
		m++;
		//ditambahin iteratornya
		}
	}
	public static void main(String[] args) 
	{
		int m = 1;
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		hitHasil(m);
		
	}
}",True,,True,"The two code samples share the same basic structure and output format, but differ in variable names and implementation details such as the use of a separate method in Sample 2. However, the core algorithm and logic flow are the same, indicating that one sample was likely derived from the other or both from a common source. While the differences in implementation may suggest some independent development, the similarities are significant enough to suggest plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {
    public static void printMil (int mil){
        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
    public static void main(String[] args) {
        //declare MIL
        int mil=1;
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        printMil(mil);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is to convert miles to kilometers and print them in a table format. However, they differ in implementation details such as variable names, method organization, and even output formatting, suggesting independent development rather than direct copying."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        printJarakDalamMilDanKilo(jarak);
        
    }
   
    public static void printJarakDalamMilDanKilo(int jarak){
        while (jarak <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
            jarak++;
        }
    }
}",True,,True,"The two code samples share the same basic structure and output format, but differ in variable names and minor formatting choices. However, the core algorithm and logic flow are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 
{

    public static void main(String[] args) 
    {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        tabelKonversi();
    }

    private static void tabelKonversi() 
    {
        int mil = 1;
        while (mil <= 10) 
        {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }
    }
}",True,,True,"The two code samples share the same basic structure and output, but differ in variable names and method organization. However, the core algorithm and logic flow are the same, indicating that one sample was likely copied from the other or both were derived from a common source. Despite the minor differences, the similarities are significant enough to suggest a lack of originality and potential plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L4 {
    public static void main(String[] args) {
        int counter = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        while (counter <= 10) {
            //Menampilkan hasil
            //counter = miles
            System.out.println(counter + ""\t\t"" + ConvertMilesToKilo(counter));
            counter++;
        }
    }
    
    private static double ConvertMilesToKilo(int miles){
        return miles * 1.609;
    }
}",True,,False,"The two code samples share the same basic structure and output format, but differ significantly in implementation details such as variable names, loop structure, and even the use of a separate method in Sample 2. These differences suggest independent development rather than direct copying, and the core algorithm (converting miles to kilometers) is a common programming exercise that is unlikely to be considered plagiarism."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L4 {

    public static void print(int mil)
    {
          while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }
    }
    public static void main(String[] args) {
        
        int mil = 1 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        print(mil);

    }
}",True,,False,"The two code samples share the same basic structure and output, but differ in implementation details such as variable names and method organization. However, the core algorithm and logic flow are the same, indicating that one sample was likely derived from the other or both from a common source. Despite the differences in variable names and method organization, the similarities in structure and output suggest a lack of originality that could be considered plagiarism in some contexts."
4,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil ;
        print(mil=1);
   }
   
   public static void print(int mil)
   {
       while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }//looping dari 1 sampai 10

   }
}",True,,True,"The two code samples share the same basic structure and output format, but differ in implementation details such as variable names and the use of a separate method in Sample 2. However, the core algorithm and logic flow are the same, indicating that one sample was likely derived from the other or both from a common source. While the differences in implementation may suggest some independent development, the similarities are significant enough to suggest plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int mile;
    public static void main(String[] args) {
        mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        loops();
    }
    
    public static void loops(){
        //Use while loop
        for (int i = 1; i <= 10; i++) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
            
        }
    }
}",True,,True,"The two code samples share the same basic structure and output format, but differ in variable names and implementation details such as the use of a separate method in Sample 2. However, the core algorithm and logic flow are the same, indicating that one sample was likely derived from the other or both from a common source. While the differences in implementation may suggest some independent development, the similarities are significant enough to suggest plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static double Konversi(int miles) {
            return miles * 1.609;
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        for(int miles=1 ; miles<=10 ; miles++)
            System.out.println(miles + ""\t\t"" + Konversi(miles));
    }
}",True,,False,"The two code samples share the same basic structure and output, but differ in implementation details such as the use of a separate method for conversion in Sample 2 and different variable names. However, the core algorithm and purpose remain the same, indicating that one sample was likely derived from the other or both from a common source. While the differences in implementation may suggest independent development, the similarities are significant enough to raise concerns about plagiarism."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	static void hitHasil(int m)
	{
		for(int a=m;a<=10;a++)
		{
		System.out.println(a + ""\t\t"" + a * 1.609);
		//ditambahin iteratornya
		}
	}
	public static void main(String[] args) 
	{
		int m = 1;
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		hitHasil(m);
		
	}
}",True,,False,"The two code samples have the same purpose of converting miles to kilometers and display the result in a table format. However, they differ in implementation details such as variable names, formatting choices, and even the use of a loop vs. a method. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {
    public static void printMil (int mil){

            for(int i =1;i<=10;i++){
            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
    public static void main(String[] args) {
        //declare MIL
        int mil=1;
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        printMil(mil);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, method organization, and even output formatting choices, suggesting independent development rather than direct copying."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        printJarakDalamMilDanKilo(jarak);
        
    }
   
    public static void printJarakDalamMilDanKilo(int jarak){
        for(jarak = jarak; jarak <= 10; jarak++){
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
        }
    }
}",True,,True,"The two code samples share the same basic structure and output format, but differ in implementation details such as variable names and loop structure. However, the core algorithm for converting miles to kilometers is the same, indicating that one sample was likely derived from the other or both from a common source. While the differences in implementation may suggest independent development, the similarities in functionality and output suggest a lack of originality that could be considered plagiarism in academic or professional contexts."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        convert();
    }

    //pakai for
    private static void convert() {
        for(int mill = 1; mill <=10; mill++)
            System.out.println(mill + ""\t\t"" + mill * 1.609);
    }
}",True,,True,"The two code samples share the same basic structure and output, but differ in the implementation details. Sample 1 uses a while loop to iterate through the miles, while Sample 2 uses a for loop. However, the core algorithm and output formatting are the same, indicating that both samples were likely derived from a common source or one was copied from the other."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L5 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use for loop
        for (int i = 1; i <= 10; i++) {
            //Menampilkan hasil
            //i = miles
            System.out.println(i + ""\t\t"" + ConvertMilesToKilo(i));
        }
    }

    private static double ConvertMilesToKilo(int miles) {
        return miles * 1.609;
    }
}",True,,False,"The two code samples share the same basic structure and output format, but differ in implementation details such as the use of a while loop vs. a for loop and the inclusion of a separate method for conversion in Sample 2. These differences suggest independent development rather than direct copying, as the core algorithm and output format are common to many similar programs."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L5 {

    public static void print(int mil)
    {
          for ( int i = 0 ; i < 10 ; i ++){

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }
    }
    public static void main(String[] args) {
        
        int mil = 1 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        print(mil);

    }
}",True,,False,"The two code samples solve the same problem of converting miles to kilometers and produce identical output. However, they differ significantly in implementation, with Sample 1 using a while loop and Sample 2 using a for loop and separate method. The differences in variable names and formatting choices also suggest independent development rather than direct copying. Therefore, the code samples are not plagiarized."
5,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil ;
        print(mil=1);
   }
   
   public static void print(int mil)
   {
       for(int i=mil;i<=10;i++) {
            System.out.println(i + ""\t\t"" + i * 1.609);         
        }//looping dari 1 sampai 10

   }
}",True,,False,"The two code samples share the same basic structure and output format, but differ significantly in implementation details such as the use of a while loop vs. a for loop, variable names, and even the inclusion of an unnecessary import statement in Sample 2. These differences suggest independent development rather than direct copying, and the code samples are not considered plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        
        //Use while loop
        int mile = 1;
        while (mile <= 10) {
                System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in variable names and formatting choices. However, these differences are not significant enough to suggest independent development, and the core algorithm and implementation details are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void Konversi() {
        for (int miles = 1 ; miles <= 10 ; miles++) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
        }
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        Konversi();
    }
}",True,,False,"The two code samples share the same basic structure and output, with both using a loop to convert miles to kilometers and printing the results in a tabular format. However, they differ in implementation details such as variable names, formatting choices, and even loop type, suggesting independent development rather than direct copying."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		int m = 1;
		while (m <= 10) {
		System.out.println(m + ""\t\t"" + m * 1.609);
		m++;
		//ditambahin iteratornya
		}
	}
}",True,,False,"The two code samples share the same basic structure and output, indicating that they solve the same problem of converting miles to kilometers. However, they differ in variable names and minor formatting choices, suggesting independent development rather than direct copying. The lack of any significant similarities in implementation details or logic flow further supports the conclusion that the code samples are not plagiarized."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        int mil = 1;

        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);


            mil++;
        }
    }
}",True,,True,"The two code samples share the same basic structure, logic flow, and output formatting, with only minor differences in variable names and class names. However, these differences are not significant enough to suggest independent development, and the core algorithm and implementation details are identical, indicating that one sample was likely copied from the other or both were derived from a common source."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        int jarak = 1;
        while (jarak <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
            jarak++;
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, comments, and even specific constants used, suggesting independent development rather than direct copying."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        //ulang sebanyak 10x
        int mil = 1;
        while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }
    }
}",True,,True,"The two code samples share the same basic structure and output format, but differ in variable names and minor formatting choices. However, the core algorithm and logic flow are identical, indicating that one sample was likely copied from the other or both were derived from a common source."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L2 {
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        int counter = 1;
        while (counter <= 10) {
            //Menampilkan hasil
            //counter = miles
            System.out.println(counter + ""\t\t"" + counter * 1.609);
            counter++;
        }
    }
}",True,,True,"The two code samples share the same basic structure and output format, but differ in variable names and minor formatting choices. However, the core algorithm and logic flow are the same, indicating that one sample was likely copied from the other or both were derived from a common source. Despite the minor differences, the similarities are significant enough to suggest a lack of originality and potential plagiarism."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L2 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");

        System.out.println(""-------------------------------"");

        int mil = 1;

        while (mil <= 10) {

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }

    }
}",True,,False,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in variable names and formatting choices. However, the core algorithm and purpose are the same, which is expected given they solve the same problem of converting miles to kilometers. The similarities are not significant enough to suggest direct copying, but they do indicate that both samples were likely derived from a common source or inspired by a standard programming exercise."
2,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int mil = 1;//inisialisasi while pertama kali
        while (mil <= 10) {
            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;
        }//looping dari 1 sampai 10
   }
}",True,,True,"The two code samples share the same basic structure and output, but differ in variable names and minor formatting choices. However, the core algorithm and logic flow are the same, indicating that one sample was likely copied from the other or both were derived from a common source. Despite the differences in variable names, the similarity in structure and output strongly suggests plagiarism."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        
        //Use while loop
        int miles = 1;
        while (miles <= 10) {
                System.out.println(miles + ""\t\t"" + miles * 1.609);
                miles++;
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in comments and author tags. However, these differences do not affect the core functionality or implementation of the code, indicating that one sample was likely copied from the other or both were derived from a common source."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in comments and author information. However, these differences do not affect the core functionality or implementation of the code, indicating that one sample was likely copied from the other or both were derived from a common source."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		// print seusatu
	System.out.println(""Miles\t\tKilometers"");
	System.out.println(""-------------------------------"");
	// pake pengulangan while
		int miles = 1;
		while (miles <= 10) {
		System.out.println(miles + ""\t\t"" + miles * 1.609);
		miles++;
		//ditambahin iteratornya
		}
	}
}",True,,False,"The two code samples share the same basic structure and output, indicating that they solve the same problem of converting miles to kilometers. However, they differ in implementation details such as variable names and formatting choices, suggesting independent development rather than direct copying. While the second sample includes additional comments and a class declaration, these are not significant enough to suggest plagiarism."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {

    public static void main(String[] args) {
        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
           int miles = 1;

        while (miles <= 10) {

            System.out.println(miles + ""\t\t"" + miles * 1.609);


            miles++;
            }
        }
    }",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        int miles = 1;
        while (miles <= 10) {
            // Print hasil di sini sebanyak 10 kali
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in comments and variable names. However, the core algorithm and implementation details are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 
{
    public static void main(String[] args) 
    {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        int miles = 1;
        while (miles <= 10) 
        {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in comments and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L1 {
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        int miles = 1;
        while (miles <= 10) {
            //Menampilkan hasil
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in comments and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class pengulangan {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        int miles = 1;//inisialisasi while pertama kali
        while (miles <= 10) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            miles++;
        }//looping dari 1 sampai 10
   }
}",True,,False,"The two code samples share the same basic structure and output, but differ in implementation details such as variable names and the use of a while loop in Sample 1 versus a for loop in Sample 2. These differences suggest independent development rather than direct copying, as the core algorithm and purpose are the same but the specific implementation details differ."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int mile;
    public static void main(String[] args) {
        mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        loops();
    }
    
    public static void loops(){
        //Use while loop
        for (int i = 10; i > 0; i--) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
                mile++;
            
        }
    }
}",True,,False,"The two code samples share the same basic structure and output format, but differ in implementation details such as variable names, loop direction, and even the use of a separate method in Sample 2. These differences suggest independent development rather than direct copying, and the core algorithm is simple enough that it is likely to be developed independently by many programmers."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus4 {

    public static double Konversi(int miles) {
        if(miles <=10) {
            System.out.println(miles + ""\t\t"" + miles * 1.609);
            return Konversi(++miles);
        }
        return 0;
    }
    
    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Use while loop
        Konversi(1);
    }
}",True,,False,"The two code samples solve the same problem of converting miles to kilometers and produce identical output. However, they differ significantly in implementation, with Sample 1 using a while loop and Sample 2 using recursion. The differences in coding style, variable names, and overall structure indicate they are independent solutions to a standard programming exercise."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.*;

class inputoutput{
	static void hitHasil(int a)
	{
		for(;a<=10;a++)
		{
			System.out.println(a + ""\t\t"" + a * 1.609);
		}
	}
	public static void main(String[] args) 
	{
		// print seusatu
	System.out.print(""Miles\t\tKilometers\n"");
	System.out.print(""-------------------------------\n"");
	// pake pengulangan while
		hitHasil(1);
		
	}
}",True,,False,"The two code samples solve the same problem of converting miles to kilometers and produce identical output. However, they differ significantly in implementation, with Sample 1 using a while loop and Sample 2 using a for loop and a separate method. The differences in variable names and formatting also suggest independent development rather than direct copying. Therefore, the code samples are not plagiarized."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class Main {
    public static void printMil (){

        for(int i =1;i<=10;i++){
            System.out.println(i + ""\t\t"" + i * 1.609);

        }
    }
    public static void main(String[] args) {

        //Miles to kilometer
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        // Use while loop
        printMil();
    }
}",True,,False,"The two code samples solve the same problem of converting miles to kilometers and produce identical output. However, they differ significantly in implementation, with Sample 1 using a while loop and Sample 2 using a for loop and separate method. The differences in variable names and formatting choices also suggest independent development rather than direct copying. Therefore, the code samples are not plagiarized."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int jarak;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        // Di sini mengulang perhitungan jarak dalam mil dan kilometer
        jarak = 1;
        printJarakDalamMilDanKilo(jarak);
        
    }
   
    public static void printJarakDalamMilDanKilo(int jarak){
        for(jarak = jarak; jarak <= 10; jarak = jarak + 1){
            // Print hasil di sini sebanyak 10 kali
            System.out.println(jarak + ""\t\t"" + jarak * 1.609);
        }
    }
}",True,,False,"The two code samples share the same basic structure and output, which is expected given they solve the same problem of converting miles to kilometers. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void konversi(int mile) {
        if (mile != 11) {
            System.out.println(mile + ""\t\t"" + mile * 1.609);
            mile++;
            konversi(mile);
        }
    }
    
    public static void main(String[] args) {
        int mile = 1;
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");

        konversi(mile);
    }
}",True,,False,"The two code samples solve the same problem of converting miles to kilometers and use similar output formatting, but differ significantly in implementation details. Sample 1 uses a while loop to iterate through the miles, while Sample 2 uses a recursive method. Additionally, Sample 2 includes unnecessary comments and a license header, suggesting an attempt to disguise copied code. Overall, the differences in implementation and style suggest independent development rather than plagiarism."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus4L6 {

    public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        ShowTable(10);
    }

    private static void ShowTable(int jumlahData) {
        for (int i = jumlahData; i >= 1; i--) {
            //Menampilkan hasil
            int temp = jumlahData + 1 - i;
            System.out.println(temp + ""\t\t"" + ConvertMilesToKilo(temp));
        }
    }

    private static double ConvertMilesToKilo(int miles) {
        return miles * 1.609;
    }
}",True,,False,"The two code samples share the same basic structure and output format, but differ significantly in implementation details. Sample 1 uses a while loop to iterate through miles 1-10, while Sample 2 uses a for loop to iterate through miles 10-1. Additionally, Sample 2 uses a separate method to convert miles to kilometers, while Sample 1 performs the calculation inline. These differences suggest independent development rather than direct copying."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","public class L6 {

    public static void print(int mil)
    {
          for ( int i = 10 ; i > 0 ; i --){

            System.out.println(mil + ""\t\t"" + mil * 1.609);
            mil++;

        }
    }
    public static void main(String[] args) {
        
        int mil = 1 ;
        System.out.println(""Miles\t\tKilometers"");
        
        System.out.println(""-------------------------------"");

        print(mil);

    }
}",True,,False,"The two code samples solve the same problem of converting miles to kilometers and produce identical output. However, they differ significantly in implementation, with Sample 1 using a while loop and Sample 2 using a for loop and separate method. The differences in variable names and formatting choices also suggest independent development rather than direct copying. Therefore, the code samples are not plagiarized."
6,4,"public class T4 {
	public static void main(String[] args) {
		System.out.println(""Miles\t\tKilometers"");
		System.out.println(""-------------------------------"");

		// Use while loop
		int miles = 1;
		while (miles <= 10) {
			System.out.println(miles + ""\t\t"" + miles * 1.609);
			miles++;
		}
	}

}","import java.util.Scanner;

public class looping {

   public static void main(String[] args) {
        System.out.println(""Miles\t\tKilometers"");
        System.out.println(""-------------------------------"");
        print(1);
   }
   
   public static void print(int mil)
   {
       int x;
       for(int i=mil;i<=10;i++) {
            x=(int)(i*1.609);
            System.out.println(i + ""\t\t"" + x);         
        }//looping dari 1 sampai 10

   }
}",True,,False,"The two code samples share the same basic structure and output, but differ in implementation details such as the use of a while loop in Sample 1 and a for loop in Sample 2, as well as differences in variable names and formatting choices. These differences suggest independent development rather than direct copying, and the code samples are not considered plagiarism."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T03 {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = s.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = s.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = s.nextDouble();

        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI Is "" + bmi);

        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        }
        else if(bmi>=18.5 && bmi<25){
            System.out.println(""Normal"");
        }
        else if(bmi>=25 && bmi<35){
            System.out.println(""Overweight"");
        }
        else {
            System.out.println(""Obese"");
        }
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names, minor formatting choices, and an additional condition in Sample 2's if-else statement, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;
public class T03
{
   public static void main(String[] args)
   {
     Scanner sc = new Scanner(System.in);
      System.out.print(""Enter weight in pounds: "");
      int w= sc.nextInt();
      System.out.print(""Enter feet: "");
      int f= sc.nextInt();
      System.out.print(""Enter inches: "");
      int i= sc.nextInt();
      double bmi = ((w*0.45359237)/(((f*12+ i)*0.0254)*((f*12+i)*0.0254)));
      System.out.println(""BMI is ""+bmi);
      if(bmi < 18.5)
      {
         System.out.println(""Underweight"");
      }
      else if(bmi >= 18.5 && bmi < 25)
      {
         System.out.println(""Normal"");
      }
      else if(bmi >= 25 && bmi < 35)
      {
         System.out.println(""Overweight"");
      }
      else if(bmi >= 35)
      {
         System.out.println(""Obese"");
      }


   }
}",False,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable names and formatting choices, indicating that the second sample was likely developed independently from the first, rather than being a direct copy. Therefore, the code samples are not considered plagiarism."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T03 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double weight, feet, inches, height, bmi;
        
        System.out.print(""Enter weight in pounds: "");
        weight = sc.nextDouble();
        
        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        
        System.out.print(""Enter inches: "");
        inches = sc.nextDouble();
        
        height = feet * 12 + inches;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        
        System.out.println(""BMI is "" + bmi);
        if(bmi < 18.5) {
            System.out.println(""Underweight"");
        }else if (bmi >= 18.5 && bmi < 25) {
            System.out.println(""Normal"");
        }else if(bmi >= 25 && bmi < 35) {
            System.out.println(""Overweight"");
        }else if(bmi >= 35) {
            System.out.println(""Obese"");
        }
    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        int weight=sc.nextInt();
        System.out.print(""Enter feet: "");
        int feet=sc.nextInt();
        System.out.print(""Enter inches: "");
        int inches=sc.nextInt();
        double height=feet*12+inches;
        double bmi=weight*0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is ""+bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi>=18.5 && bmi<25)
            System.out.println(""Normal"");
        else if(bmi>=25 && bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",False,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable types and formatting choices, indicating that the two samples were likely developed independently rather than copied from each other. Therefore, the code samples are not considered plagiarism."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pound: "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = sc.nextDouble();
        double height = feet*12+inches;
        double bmi = weight*0.45359237/((height*0.0254)*(height*0.0254));
        System.out.println(""BMI is ""+bmi);
        if(bmi<18.5)
        {
            System.out.println(""Underweight"");
        }
        else if(bmi>=18.5 && bmi<25)
        {
            System.out.println(""Normal"");
        }
        else if(bmi>=25 && bmi<35)
        {
            System.out.println(""Overweight"");
        }
        else
        {
            System.out.println(""Obese"");
        }
    }
    
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t03 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds : "");
        double weight = sc.nextDouble();

        System.out.print(""Enter feet : "");
        double feet = sc.nextDouble();

        System.out.print(""Enter inches : "");
        double inches = sc.nextDouble();

        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254)
                * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""underweight"");
        } else if (bmi >= 18.5 && bmi < 25) {
            System.out.println(""normal"");
        } else if (bmi >= 25 && bmi < 35) {
            System.out.println(""overweight"");
        } else {
            System.out.println(""obese"");
        }

    }
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names, formatting, and the addition of an extra BMI category in Sample 2. However, these differences are not significant enough to suggest independent development, and the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T03 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter Inches: "");
        double inches = sc.nextDouble();
        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / Math.pow((height * 0.0254), 2);
        System.out.println(""BMI is ""+ bmi);
        if(bmi<18.5){
            System.out.println(""underweight"");
        } else if(bmi<25){
            System.out.println(""normal"");
        } else if(bmi<35){
            System.out.println(""overweight"");
        } else{
            System.out.println(""obese"");
        }
    }
}",False,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names, minor formatting choices, and the use of Math.pow() in Sample 2, which is a common and acceptable alternative to multiplying by the same value twice. Therefore, the code samples are likely not plagiarized, but rather independent solutions to a standard programming exercise."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T03 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds : "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet : "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches : "");
        double inches = sc.nextDouble();
        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254)) ;
        System.out.println(""The area is "" + bmi);
        if (bmi < 18.5){
            System.out.println(""Underweight"");
        }else if (bmi < 25){
            System.out.println(""Normal"");
        }else if (bmi < 35){
            System.out.println(""Overweight"");
        }else {
            System.out.println(""Obese"");
        }
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the BMI. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying. Additionally, the second code sample has a different categorization threshold for ""Overweight"", indicating that it was not simply copied from the first sample."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T03 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double weight, feet, inches, bmi, height;
        System.out.print(""Enter weight in pounds: "");
        weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inches = sc.nextDouble();
        height = feet * 12 + inches;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi<25)
            System.out.println(""Normal"");
        else if(bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
    
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 95F548D9E3DDDD7F63A8FCEF1E4957F4 F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T03 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter weight in pounds : "");
        double weight = sc.nextDouble();

        System.out.print(""Enter feet : "");
        double feet = sc.nextDouble();

        System.out.print(""Enter inches : "");
        double inches = sc.nextDouble();

        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height * 0.0254)
                * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi >= 18.5 && bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi >= 25 && bmi < 35) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""obese"");
        }
    }
}",False,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable names and output formatting, indicating that they were likely developed independently with some minor modifications. Therefore, the code samples are not considered plagiarism."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No3 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
                Scanner sc = new Scanner(System.in);
        double height,weight,feet,inches,bmi;
        System.out.print(""Enter weight in pounds: "");
        weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inches = sc.nextDouble();
        height = feet * 12 + inches;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi<25)
            System.out.println(""Normal"");
        else if(bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
    
}",False,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
0,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal3 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = sc.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = sc.nextDouble();
        double height = feet * 12 + inches;
        double bmi = weight * 0.45359237 / ((height *0.0254)*(height *0.0254));
        System.out.println(""BMI is ""+bmi);
        if(bmi<18.5)
            System.out.println(""Underweight"");
        else if(bmi>=18.5 && bmi<25)
            System.out.println(""Normal"");
        else if(bmi>=25 && bmi<35)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",False,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable names and formatting choices, indicating that they were likely developed independently. While the code samples are similar, the differences are significant enough to suggest that they are not plagiarized from each other or a common source."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in comments and author information. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		double kaki;
		double bobot;
		double bmi;
		double inc;
		double height;
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = kaki * 12 + inc;
		 bmi = bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); //menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Prompt the user to enter weight in pounds

        //enter inches
        System.out.print(""Enter inches: "");
        double inchesUser = sc.nextDouble();

        System.out.print(""Enter weight in pounds: "");
        double weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feetUser = sc.nextDouble();

        //process
        double heightUser = feetUser * 12 + inchesUser;
        // Compute BMI
        double bmi = weightUser * 0.45359237 / ((heightUser * 0.0254) * (heightUser * 0.0254));
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L3 {
    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        double tinggi = kaki * 12 + inch;

        double rata = berat * 0.45359237 /((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + rata);
        if (rata < 18.5)
            System.out.println(""Underweight"");
        else if (rata < 25)
            System.out.println(""Normal"");
        else if (rata < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double berat;
        double feet;
        double inches;
        double tinggi;
        double bmi;

        System.out.print(""Enter weight in pounds: "");
        berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        feet = in.nextDouble();
        System.out.print(""Enter inches: "");
        inches = in.nextDouble();
        tinggi = feet * 12 + inches;

        bmi = berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples are very similar in structure, logic flow, and variable usage, indicating that one was likely copied from the other or both were derived from a common source. However, there are some differences in formatting and variable names, suggesting that some effort was made to modify the code. Overall, the similarities outweigh the differences, indicating likely plagiarism."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L3 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat = 0;
        double inci = 0;
        double tinggi = 0 ;
        double bmi = 0;
        double feet = 0;
        
        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
         tinggi = feet * 12 + inci;

       bmi = berat * 0.45359237
                / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat;
        double feet;
        double inches;
        double height;
        double bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double weights,feets,inches,heights,bmi;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        
        //Compute BMI
        heights = feets * 12 + inches;
        bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        cetak();
    }
    public static void cetak(){
        //Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are differences in variable names and minor formatting choices, indicating that the second sample was likely an attempt to modify the original code rather than a direct copy. While the similarities are significant enough to suggest a common source, the differences are enough to suggest independent development."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double feet, double inches) {
        return weight * 0.45359237 / ((hitungTinggi(feet, inches) * 0.0254) * (hitungTinggi(feet, inches) * 0.0254));
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        // Compute BMI
        double bmi = hitungBmi(weight, feet, inches);
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, the second code sample uses separate methods to calculate height and BMI, and includes additional comments and licensing information, indicating that it was likely developed independently from the first sample. Therefore, the code samples are not plagiarized."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	static double hitHeight(double kaki, double inc)
	{
		return kaki * 12 + inc;
	}
	static double hitBmi(double bobot, double height)
	{
		return bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
	}
	public static void main(String[] args) 
	{
		double kaki;
		double bobot;
		double bmi;
		double inc;
		double height;
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = hitHeight(kaki,inc);
		 bmi = hitBmi(bobot,height);
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, the second sample uses different variable names and separates the calculation of height and BMI into separate methods. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {
    public static double countHeightUser(double feet,double inches){
        return feet*12+inches;
    }
    public static double countBmi (double height,double weight){
        return  weight * 0.45359237 /        ((height * 0.0254) * (height * 0.0254));
    }
    public static void printBmi(double bmi){
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");

    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Prompt the user to enter weight in pounds

        //enter inches
        System.out.print(""Enter inches: "");
        double inchesUser = sc.nextDouble();

        System.out.print(""Enter weight in pounds: "");
        double weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feetUser = sc.nextDouble();

        //process
        double heightUser = countHeightUser(feetUser,inchesUser);
        // Compute BMI
        double bmi =countBmi(heightUser,weightUser);
        // Display result
        System.out.println(""BMI is "" + bmi);
        printBmi(bmi);
    }
}",True,,False,"The two code samples share the same purpose of calculating BMI based on user input, but differ significantly in implementation details. Sample 2 uses separate methods for calculating height, BMI, and output, and uses different variable names and formatting choices. While the core algorithm is the same, the differences in implementation suggest independent development rather than direct copying."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat,feet,inches,height,bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = hitungBmi(berat, height);
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
        
    }
    
    public static double hitungBmi(double berat, double height){
        double bmi;
        bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        return bmi;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 
{
    public static void main(String[] args) 
    {
        Scanner in = new Scanner(System.in);
        double berat;
        double kaki;
        double inchi;
        double tinggi;

        System.out.print(""Enter weight in pounds: "");
        berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        kaki = in.nextDouble();
        System.out.print(""Enter inches: "");
        inchi = in.nextDouble();
        tinggi = kaki * 12 + inchi;

        hitungBmi(berat, tinggi);
    }

    //calculate BMI and output message
    private static void hitungBmi(double weight, double height) {
        double bmi;
        bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
        {
            System.out.println(""Underweight"");
        }
        else if (bmi < 25)
        {
            System.out.println(""Normal"");
        }
        else if (bmi < 30)
        {
            System.out.println(""Overweight"");
        }
        else
        {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L4 {
    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        double tinggi = kaki * 12 + inch;

        double rata = hitungBMI(berat, tinggi);

        BMIKategori(rata);
    }
    
    private static double hitungBMI(double weight, double height){
        return weight * 0.45359237 /((height * 0.0254) * (height * 0.0254));
    }
    
    private static void BMIKategori(double BMI){
        System.out.println(""BMI is "" + BMI);
        if (BMI < 18.5)
            System.out.println(""Underweight"");
        else if (BMI < 25)
            System.out.println(""Normal"");
        else if (BMI < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable names and method organization, indicating that the second sample is a modified version of the first rather than a direct copy. The differences are significant enough to suggest independent development, but the core algorithm and structure are still very similar, indicating a possible common source or derivation from the first sample."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L4 {
    public static double hitBmi(double berat, double tinggi)
    {
        return berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat = 0;
        double inci = 0;
        double tinggi = 0 ;
       
        double feet = 0;
        
        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
         tinggi = feet * 12 + inci;

        System.out.println(""BMI is "" + hitBmi(berat,tinggi));
        if (hitBmi(berat,tinggi) < 18.5) {
            System.out.println(""Underweight"");
        } else if (hitBmi(berat,tinggi) < 25) {
            System.out.println(""Normal"");
        } else if (hitBmi(berat,tinggi) < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable names and code organization, indicating that they were likely developed independently. While the core algorithm is the same, the differences in implementation are significant enough to suggest that they are not plagiarized from each other or a common source."
4,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = HitBMI(w, h);//menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        Result(TotalBmi);
    }
    
    public static double HitBMI(double w,double h)
    {
        return  w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); 
    }
    
    public static void Result(double TotalBmi)
    {
         if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are differences in variable names and code organization, indicating that they were likely developed independently. While the similarities suggest that one sample may have been derived from the other or both from a common source, the differences are significant enough to suggest that they are not direct copies of each other."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double weights,feets,inches,heights,bmi;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        
        //Compute BMI
        heights = feets * 12 + inches;
        bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        cetak();
    }
    public static void cetak(){
        //Display result
        System.out.println(""BMI is "" + bmi); 
        if (bmi >= 30){
            System.out.println(""Obese"");
        } else if (bmi >= 25) {
            System.out.println(""Overweight"");
        }else if (bmi >= 18.5) {
            System.out.println(""Normal"");
        } else {
            System.out.println(""Underweight"");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double height) {
        return weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
    }
    
    public static void cekBmi(double bmi) {
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        // Compute BMI
        double bmi = hitungBmi(weight, hitungTinggi(feet, inches));
        // Display result
        System.out.println(""BMI is "" + bmi);
        cekBmi(bmi);
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, the second code sample uses separate methods to calculate height, BMI, and BMI category, and also includes additional comments and licensing information. These differences suggest independent development rather than direct copying, and therefore the code samples are not considered plagiarism."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	static double kaki,bobot,bmi,inc,height;
	static double hitHeight(double kaki, double inc)
	{
		return kaki * 12 + inc;
	}
	static double hitBmi(double bobot, double height)
	{
		return bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
	}
	public static void main(String[] args) 
	{
		
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = hitHeight(kaki,inc);
		 bmi = hitBmi(bobot,height);
		
		
		// hasil
		System.out.print(""BMI is "" + bmi+""\n"");
		if (bmi < 18.5)
		System.out.print(""Underweight""+""\n"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, the second sample uses different variable names and a different class structure, indicating that it was likely independently developed rather than copied from the first sample. Therefore, the code samples are not considered plagiarism."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {
    public static double countHeightUser(double feet,double inches){
        return feet*12+inches;
    }
    public static double countBmi (double height,double weight){
        return  weight * 0.45359237 /        ((height * 0.0254) * (height * 0.0254));
    }
    public static void printBmi(double bmi){
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");

    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        //declare
        double inchesUser,weightUser,feetUser,heightUser,bmi;

        //enter inches
        System.out.print(""Enter inches: "");
        inchesUser = sc.nextDouble();

        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
       weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
       feetUser = sc.nextDouble();

        //process
        heightUser = countHeightUser(feetUser,inchesUser);
        // Compute BMI
        bmi =countBmi(heightUser,weightUser);
        // Display result
        System.out.print(""BMI is "");
        System.out.println(bmi);
        printBmi(bmi);
    }
}",True,,False,"The two code samples share the same purpose of calculating BMI based on user input, but differ significantly in implementation details. Sample 2 uses separate methods for calculating height, BMI, and category, and uses different variable names and formatting choices. While the core algorithm is the same, the differences in implementation suggest independent development rather than direct copying."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat,feet,inches,height,bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = hitungBmi(berat, height);
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
        
    }
    
    public static double hitungBmi(double berat, double height){
        double bmi;
        bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        return bmi;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double berat = 0;
        double feet, inches, tinggi = 0;

        System.out.print(""Enter weight in pounds: ""); berat = in.nextDouble();
        System.out.print(""Enter feet: ""); feet = in.nextDouble();
        System.out.print(""Enter inches: ""); inches = in.nextDouble();
        
        tinggi = feet * 12 + inches;
        
        bmi(berat, tinggi);
    }
    
    private static void bmi(double weight, double height) {
        double bmi = weight * 0.45359237 / Math.pow((height * 0.0254), 2);
        
        System.out.println(""BMI is "" + bmi);
        
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable names and method organization, indicating that they were not directly copied from each other. It is possible that both samples were derived from a common source or that one was inspired by the other, but there is not enough evidence to definitively conclude plagiarism."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L5 {
    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();

        BMIKategori(hitungBMI(berat, kaki * 12 + inch));
    }
    
    private static double hitungBMI(double weight, double height){
        return weight * 0.45359237 /((height * 0.0254) * (height * 0.0254));
    }
    
    private static void BMIKategori(double BMI){
        System.out.println(""BMI is "" + BMI);
        if (BMI < 18.5)
            System.out.println(""Underweight"");
        else if (BMI < 25)
            System.out.println(""Normal"");
        else if (BMI < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are some differences in variable names and method organization, indicating that they were not directly copied from each other. It is possible that both samples were derived from a common source or that one was inspired by the other, but it is not clear enough to definitively label them as plagiarism."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L5 {

    public static double hitBmi(double berat, double tinggi) {
        return berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat, inci, tinggi, feet = 0;

        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
        tinggi = feet * 12 + inci;

        System.out.println(""BMI is "" + hitBmi(berat, tinggi));
        if (hitBmi(berat, tinggi) < 18.5) {
            System.out.println(""Underweight"");
        } else if (hitBmi(berat, tinggi) < 25) {
            System.out.println(""Normal"");
        } else if (hitBmi(berat, tinggi) < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are differences in variable names and code organization, indicating that they were likely developed independently. While the code samples are similar, the differences are significant enough to suggest that they are not plagiarized from each other or a common source."
5,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = HitBMI(w, h);//menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        Result(TotalBmi);
    }
    
    public static double HitBMI(double w,double h)
    {
        return  w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); 
    }
    
    public static void Result(double TotalBmi)
    {
         if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are differences in variable names and code organization, indicating that they were likely developed independently. While the similarities suggest that one sample may have been derived from the other or both from a common source, the differences are significant enough to suggest that they are not direct copies of each other."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        double weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        double feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        
        double heights = feets * 12 + inches;
        
        //Compute BMI
        double bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        
        //Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in variable names and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double height) {
        return weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = hitungTinggi(feet, inches);
        // Compute BMI
        double bmi = hitungBmi(weight, height);
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating BMI. However, they differ significantly in implementation details such as variable names, method organization, and even the specific formula used to calculate BMI, suggesting independent development rather than direct copying."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		double bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		double kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		double inc = input.nextDouble();
		double height = kaki * 12 + inc;
		double bmi = bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feetUser = sc.nextDouble();
        //enter inches
        System.out.print(""Enter inches: "");
        double inchesUser = sc.nextDouble();

        //process
        double heightUser = feetUser * 12 + inchesUser;
        // Compute BMI
        double bmi = weightUser * 0.45359237 / ((heightUser * 0.0254) * (heightUser * 0.0254));
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        double berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;
        // Hitung bmi di sini
        double bmi = berat * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = in.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = in.nextDouble();
        double tinggi = feet * 12 + inches;

        double bmi = berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L2 {
    public static void main(String[] args) {
        Scanner inp = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        double tinggi = kaki * 12 + inch;

        double rata = berat * 0.45359237 /((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + rata);
        if (rata < 18.5)
            System.out.println(""Underweight"");
        else if (rata < 25)
            System.out.println(""Normal"");
        else if (rata < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L2 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        double feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        double inci = sc.nextDouble();
        double tinggi = feet * 12 + inci;

        double bmi = berat * 0.45359237
                / ((tinggi * 0.0254) * (tinggi * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print(""Enter weight in pounds : "");
        double w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        double f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        double i = input.nextDouble();//inputan inches
        double h = f * 12 + i;// menghitung tinggi       
        double TotalBmi = w * 0.45359237 / ((h * 0.0254) * (h * 0.0254)); //menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        if (TotalBmi < 18.5) {
            System.out.println(""Underweight "");
        } else if (TotalBmi < 25) {
            System.out.println(""Normal "");
        } else if (TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Obese "");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        
        double height = feet * 12 + inches;
        
        //Compute BMI
        double bmi = weight * 0.45359237
        / ((height * 0.0254) * (height * 0.0254));
        
        //Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples are very similar in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one code sample was likely copied from the other or both were derived from a common source."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		double weight = input.nextDouble();
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();
		double height = feet * 12 + inches;
		double bmi = weight * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
		
		
		// hasil
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
		System.out.println(""Underweight"");
		else if (bmi < 25)
		System.out.println(""Normal"");
		else if (bmi < 30)
		System.out.println(""Overweight"");
		else
		System.out.println(""Obese"");
	}
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class percabangan {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();//inputan weight
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();//inputan feet
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();//inputan inches
        double height = feet * 12 + inches;// menghitung tinggi       
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254)); //menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        //enter inches
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();

        //process
        double height = feet * 12 + inches;
        // Compute BMI
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        // Display result
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples are very similar in structure, logic flow, and even variable names, indicating that one was likely copied from the other or both were derived from a common source. The only differences are in minor formatting choices and comments, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L1 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();

        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;

        double bmi = weight * 0.45359237 /((height * 0.0254) * (height * 0.0254));

        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi < 25)
            System.out.println(""Normal"");
        else if (bmi < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //masukkan berat dan tinggi
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;
        
        //hitung BMI
        double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));
        
        //kategori
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        double height = feet * 12 + inches;
        // Hitung bmi di sini
        double bmi = weight * 0.45359237
                / ((height * 0.0254) * (height * 0.0254));
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
    }
}",True,,True,"The two code samples share the same purpose, structure, and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double weights,feets,inches,heights,bmi;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        //Prompt the user to enter weight in pounds 
        System.out.print(""Enter weight in pounds: "");
        weights = input.nextDouble();
        
        //Prompt the user to enter height
        System.out.print(""Enter feet: "");
        feets = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        
        //Compute BMI
        heights = feets * 12 + inches;
        bmi = weights * 0.45359237
        / ((heights * 0.0254) * (heights * 0.0254));
        cetak();
    }
    public static void cetak(){
        //Display result
        System.out.println(""BMI is "" + bmi); 
        if (bmi >= 30){
            System.out.println(""Obese"");
        } else if (bmi >= 25) {
            System.out.println(""Overweight"");
        }else if (bmi >= 18.5) {
            System.out.println(""Normal"");
        } else {
            System.out.println(""Underweight"");
        }
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus3 {
    public static double hitungTinggi(double feet, double inches) {
        return feet * 12 + inches;
    }
    
    public static double hitungBmi(double weight, double feet, double inches) {
        return weight * 0.45359237 / ((hitungTinggi(feet, inches) * 0.0254) * (hitungTinggi(feet, inches) * 0.0254));
    }
    
    public static String cekBmi(double bmi) {
        if (bmi < 18.5) {
            return ""Underweight"";
        } else if (bmi < 25) {
            return ""Normal"";
        } else if (bmi < 30) {
            return ""Overweight"";
        } else {
            return ""Obese"";
        }
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        double weight = input.nextDouble();
        // Prompt the user to enter height 
        System.out.print(""Enter feet: "");
        double feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        double inches = input.nextDouble();
        // Display result
        System.out.println(""BMI is "" + hitungBmi(weight, feet, inches));
        System.out.println(cekBmi(hitungBmi(weight, feet, inches)));
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating BMI. However, they differ significantly in implementation details such as variable types, method organization, and even specific constants used, suggesting independent development rather than direct copying. While some similarities exist, such as the use of Scanner and similar output messages, these are not significant enough to suggest plagiarism."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

class inputoutput{
	static double kaki,bobot,bmi,inc,height;
	static double hitHeight(double kaki, double inc)
	{
		return kaki * 12 + inc;
	}
	static double hitBmi(double bobot, double height)
	{
		return bobot * 0.45359237 /
		((height * 0.0254) * (height * 0.0254));
	}
	public static void main(String[] args) 
	{
		
		Scanner input = new Scanner(System.in);
		System.out.print(""Enter weight in pounds: "");
		
		 bobot = input.nextDouble();
		System.out.print(""Enter feet: "");
		 kaki = input.nextDouble();
		
		System.out.print(""Enter inches: "");
		 inc = input.nextDouble();
		 height = hitHeight(kaki,inc);
		 bmi = hitBmi(bobot,height);
		
		
		// hasil
		System.out.print(""BMI is "" + bmi+""\n"");
		if(bmi>=30)
		System.out.println(""Obese"");
	else if(bmi>=25)
		System.out.println(""Overweight"");
	else if (bmi >= 18.5)
		System.out.println(""Normal"");
	else
		System.out.print(""Underweight""+""\n"");
	
	}
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are differences in variable names and code organization, indicating that the second sample is not a direct copy of the first but rather an independent implementation of the same algorithm. Therefore, the code samples are not considered plagiarism."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class Main {
    public static double countHeightUser(double feet,double inches){
        return feet*12+inches;
    }
    public static double countBmi (double height,double weight){
        return  weight * 0.45359237 /    (Math.pow((height * 0.0254),2));
    }
    public static void printBmi(double bmi){
        if (bmi < 18.5)
            System.out.println(""Underweight"");
        else if (bmi > 18.5&& bmi < 25)
            System.out.println(""Normal"");
        else if (bmi > 25&& bmi < 30)
            System.out.println(""Overweight"");
        else if(bmi > 30)
            System.out.println(""Obese"");

    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        //declare
        double inchesUser,weightUser,feetUser,heightUser,bmi;

        //enter inches
        System.out.print(""Enter inches: "");
        inchesUser = sc.nextDouble();

        // Prompt the user to enter weight in pounds
        System.out.print(""Enter weight in pounds: "");
        weightUser = sc.nextDouble();
        // Prompt the user to enter height
        //enter feet
        System.out.print(""Enter feet: "");
        feetUser = sc.nextDouble();

        //process
        heightUser = countHeightUser(feetUser,inchesUser);
        // Compute BMI
        bmi =countBmi(heightUser,weightUser);
        // Display result
        System.out.print(""BMI is "");
        System.out.println(bmi);
        printBmi(bmi);
    }
}",True,,False,"The two code samples share the same purpose of calculating BMI based on user input, but differ significantly in implementation details. Sample 2 uses separate methods for calculating height, BMI, and category, and uses different variable names and formatting choices. While the core algorithm is the same, the differences in implementation suggest independent development rather than direct copying."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double berat,feet,inches,height,bmi;
        
        // Masukan beban dalam satuan pounds
        System.out.print(""Enter weight in pounds: "");
        berat = input.nextDouble();
        // Masukan tinggi dalam satuan kaki dan inci
        System.out.print(""Enter feet: "");
        feet = input.nextDouble();
        System.out.print(""Enter inches: "");
        inches = input.nextDouble();
        height = feet * 12 + inches;
        // Hitung bmi di sini
        bmi = hitungBmi(berat, height);
        // Print hasil di sini
        System.out.println(""BMI is "" + bmi);
        if (bmi < 18.5) {
            System.out.println(""Underweight"");
        } else if (bmi < 25) {
            System.out.println(""Normal"");
        } else if (bmi < 30) {
            System.out.println(""Overweight"");
        } else {
            System.out.println(""Obese"");
        }
        
    }
    
    public static double hitungBmi(double berat, double height){
        double bmi;
        bmi = berat * 0.45359237
                / (Math.pow((height * 0.0254), 2));
        return bmi;
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. The only differences are in variable names, comments, and method organization, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double berat, feet,inches, tinggi;

        System.out.print(""Enter weight in pounds: "");
        berat = in.nextDouble();
        System.out.print(""Enter feet: "");
        feet = in.nextDouble();
        System.out.print(""Enter inches: "");
        inches = in.nextDouble();
        
        result(fungsiBmi(berat, feet, inches));
    }

    private static double fungsiBmi(double berat, double feet, double inches) {
        double tinggi = feet * 12 + inches;
        return berat * 0.45359237 / Math.pow((tinggi * 0.0254), 2);
    }
    
    private static void result(double res) {
        System.out.println(""BMI is "" + res);
        if (res < 18.5)
            System.out.println(""Underweight"");
        else if (res >= 18.5 && res < 25)
            System.out.println(""Normal"");
        else if (res >= 25 && res < 30)
            System.out.println(""Overweight"");
        else
            System.out.println(""Obese"");
    }
}",True,,False,"The two code samples share the same purpose and implementation details, including identical user prompts, BMI calculation formula, and categorization thresholds. However, there are differences in variable names and method organization, indicating that the code samples were not directly copied from each other. It is possible that both samples were derived from a common source or that one was inspired by the other, but there is not enough evidence to definitively conclude plagiarism."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus3L6 {

    public static void main(String[] args) {
        System.out.print(""Enter weight in pounds: "");
        Scanner inp = new Scanner(System.in);
        double berat = inp.nextDouble();

        System.out.print(""Enter feet: "");
        double kaki = inp.nextDouble();
        System.out.print(""Enter inches: "");
        double inch = inp.nextDouble();
        
        //Print Hasil perhitungan
        BMIKategori(hitungBMI(berat, kaki * 12 + inch));
    }

    private static double hitungBMI(double weight, double height) {
        double temp = height * 0.0254;
        return weight * 0.45359237 / (temp * temp);
    }

    private static void BMIKategori(double BMI) {
        System.out.println(""BMI is "" + BMI);
        if (BMI > 30) {
            System.out.println(""Obese"");
        } else if (BMI > 25) {
            System.out.println(""Overweight"");
        } else if (BMI > 18.5) {
            System.out.println(""Normal"");
        } else {
            System.out.println(""Underweight"");
        }
    }
}",True,,False,"The two code samples share the same purpose of calculating BMI based on user input, but differ significantly in implementation details such as variable names, method organization, and even the formula used to calculate BMI. While there are some similarities in user prompts and output messages, these are common elements of any program that performs this task and do not indicate plagiarism. Therefore, the code samples are not plagiarized."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.*;

public class L6 {

    public static double hitBmi(double berat, double tinggi) {
        return berat * 0.45359237 / ((tinggi * 0.0254) * (tinggi * 0.0254));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double berat, inci, tinggi, feet = 0;

        System.out.print(""Enter weight in pounds: "");
        berat = sc.nextDouble();

        System.out.print(""Enter feet: "");
        feet = sc.nextDouble();
        System.out.print(""Enter inches: "");
        inci = sc.nextDouble();
        tinggi = feet * 12 + inci;

        System.out.println(""BMI is "" + hitBmi(berat, tinggi));
        if (hitBmi(berat, tinggi) < 25 && hitBmi(berat, tinggi) > 18.5) {
            System.out.println(""Normal"");
        } else if (hitBmi(berat, tinggi) < 30 && hitBmi(berat, tinggi) > 25) {
            System.out.println(""Overweight"");
        } else if (hitBmi(berat, tinggi) > 30) {
            System.out.println(""Obese"");
        } else {
            System.out.println(""Underweight"");
        }
    }

}",True,,False,"The two code samples solve the same problem of calculating BMI, but they differ significantly in implementation details such as variable names, input prompts, and output formatting. While they share some common elements such as the BMI formula and categorization thresholds, the differences in coding style and structure suggest independent development rather than direct copying."
6,3,"import java.util.Scanner;

public class T3 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Prompt the user to enter weight in pounds
		System.out.print(""Enter weight in pounds: "");
		double weight = input.nextDouble();

		// Prompt the user to enter height
		System.out.print(""Enter feet: "");
		double feet = input.nextDouble();
		System.out.print(""Enter inches: "");
		double inches = input.nextDouble();

		double height = feet * 12 + inches;

		// Compute BMI
		double bmi = weight * 0.45359237 / ((height * 0.0254) * (height * 0.0254));

		// Display result
		System.out.println(""BMI is "" + bmi);
		if (bmi < 18.5)
			System.out.println(""Underweight"");
		else if (bmi < 25)
			System.out.println(""Normal"");
		else if (bmi < 30)
			System.out.println(""Overweight"");
		else
			System.out.println(""Obese"");
	}

}","import java.util.Scanner;

public class cabang {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double w,f,i,h,TotalBmi;
        System.out.print(""Enter weight in pounds : "");
        w = input.nextDouble();//inputan weight
        System.out.print(""Enter feet : "");
        f = input.nextDouble();//inputan feet
        System.out.print(""Enter inches : "");
        i = input.nextDouble();//inputan inches
        h = f * 12 + i;// menghitung tinggi       
        TotalBmi = HitBMI(w, h);//menghitung BMI
        //menampilkan hasil
        System.out.println(""BMI is "" + TotalBmi);
        Result(TotalBmi);
    }
    
    public static double HitBMI(double w,double h)
    {
        return  (w * 0.45359237) / ((h * 0.0254) * (h * 0.0254)); 
    }
    
    public static void Result(double TotalBmi)
    {
         if (TotalBmi > 30) {
            System.out.println(""Obese "");
        } else if (TotalBmi < 25 && TotalBmi>18.5) {
            System.out.println(""Normal "");
        } else if (TotalBmi>25 && TotalBmi < 30) {
            System.out.println(""Overweight "");
        } else {
            System.out.println(""Underweight "");
        }
    }
}",True,,False,"The two code samples share the same purpose of calculating BMI based on user input, but differ significantly in implementation details such as variable names, method organization, and even the specific formula used to calculate BMI. While the overall structure is similar, the differences in implementation suggest independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T02 {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder :"");
        double radius = s.nextDouble();
        double length = s.nextDouble();
        double area = radius *radius * 3.14159;

        DecimalFormat df = new DecimalFormat("".####"");
        DecimalFormat df2= new DecimalFormat("".#"");
        double volume = area * length;
        System.out.println(""The area is ""+df.format(area));
        System.out.println(""The volume is ""+df2.format(volume));
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;
public class T02
{
   public static void main(String[] args)
   {
      Scanner sc = new Scanner(System.in);
      System.out.print(""Enter the radius and length of a cylinder: "");
      String radlen= sc.nextLine();
      String[] splited = radlen.split(""\\s+"");
      float rad = Float.parseFloat(splited[0]);
      float len = Float.parseFloat(splited[1]);
      System.out.println(""The area is ""+Math.round(rad*rad*3.14159*10000.0)/10000.0);
      System.out.println(""The volume is ""+Math.round(rad*rad*3.14159*len*10.0)/10.0);

   }
}",False,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details. Sample 1 uses separate variables for radius and length, while Sample 2 reads them as a single string and splits them. Sample 2 also uses different formatting and rounding techniques for output. These differences suggest independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;
import java.text.DecimalFormat;

public class T02 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double radius, length, area, volume;
        
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = sc.nextDouble();
        length = sc.nextDouble();
        
        area = radius * radius * 3.14159;
        volume = area * length ;
        
        DecimalFormat a = new DecimalFormat(""0.0000"");
        DecimalFormat v = new DecimalFormat(""0.0"");
        
        System.out.println(""The area is "" + a.format(area));
        System.out.println(""The volume is "" + v.format(volume));
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.sql.SQLOutput;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius=sc.nextDouble();
        int length=sc.nextInt();

        double area=radius*radius*3.14159;
        System.out.println(""The area is ""+area);
        System.out.println(""The volume is ""+area*length);
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 672CAF27F5363DC833BDA5099775E891
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        System.out.print(""Enter the radius and length of a cylinder:"");
        Scanner sc = new Scanner(System.in);
        double radius = sc.nextDouble();
        int length = sc.nextInt();
        double area = radius*radius*3.14159;
        double volume = length*radius;
        System.out.println(""The area is ""+area);
        System.out.println(""The volume is ""+volume);
        
    }
    
}",False,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used. The second sample uses a different formula for volume calculation, indicating independent development rather than direct copying. Therefore, the code samples are not plagiarized."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.text.DecimalFormat;
import java.util.Scanner;

public class t02 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder : "");
        double radius = sc.nextDouble();
        double length = sc.nextDouble();
        double area = radius * radius * 3.14159;
        double volume = (radius * radius * 3.14159) * length;
        DecimalFormat areaFormat = new DecimalFormat(""#.#####"");
        DecimalFormat volumeFormat = new DecimalFormat(""#.#"");

        System.out.println(""The area is "" + areaFormat.format(area));
        System.out.println(""The volume is "" + volumeFormat.format(volume));
    }

}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T02 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder:"");
        double radius = sc.nextDouble();
        double length = sc.nextDouble();
        double area = Math.pow(radius, 2) * Math.PI;
        double volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
        
        
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author Shiroinu
 */
public class T02 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and the length of the cilinder : "");
        double rad = sc.nextDouble();
        double length = sc.nextDouble();
        double area = Math.PI * rad * rad;
        double volume = Math.PI * rad * rad* length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
    }
}",False,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample uses the Math.PI constant instead of a hardcoded value for pi, and also uses a different variable name for the radius. These differences suggest independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T02 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double radius, length, area, volume;
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = sc.nextDouble();
        length = sc.nextDouble();
        area = radius * radius * 3.14159;
        volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
    }
    
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T02 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter the radius and length of a cylinder : "");
        double radius = sc.nextDouble();
        double length = sc.nextDouble();

        double area = radius * radius * 3.14159;
        double volume = area * length;

        System.out.println(""The area is "" + area);
        System.out.println(""The volume "" + volume);

    }
}",False,,True,"The two code samples are very similar in structure, logic flow, and output formatting, with only minor differences in variable names and formatting choices. However, the core algorithm and variable usage are the same, indicating that one code sample was likely copied from the other or both were derived from a common source."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No2 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        double radius, length, area, volume;
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = sc.nextDouble();
        length = sc.nextDouble();
        area = radius * radius * 3.14159;
        volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume is "" + volume);
        
    }
    
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and even specific output messages used, suggesting independent development rather than direct copying."
0,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.text.DecimalFormat;
import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        DecimalFormat dfArea = new DecimalFormat(""#.####"");
        DecimalFormat dfVolume = new DecimalFormat(""#.#"");

        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = sc.nextDouble();
        double panjang = sc.nextDouble();
        System.out.println(""The area is "" + dfArea.format((radius*radius*3.14159)));
        System.out.println(""The volume is ""+ dfVolume.format(((radius*radius*3.14159)*panjang)));
    }
    
}",False,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in comments and author information. However, these differences do not indicate independent development, as they are easily added or changed after copying code. Therefore, the code samples are likely plagiarized from each other or a common source."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	public static void main(String[] args){
		Scanner masukan = new Scanner(System.in);
		double rad,panjang;
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
		
		double a;
		//perhitungan
		a = rad * rad * 3.14159;
		double vol;
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample is written in a different language and uses a different class name, indicating independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder
        double r=0;
        double len=0;
        double a =0;
        double volume=0;

        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = r * r * 3.14159;
        volume = a * len;
        //Output
        System.out.println(""The area is "" + a);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
       
        double jejari = input.nextDouble();
        double panjang = input.nextDouble();
		
        double area = jejari * jejari * 3.14159;
        double volume = area * panjang;
        // Mencetak luas dan volume
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
        }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and even language used, suggesting independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 
{

    public static void main(String[] args) 
    {
        Scanner x = new Scanner(System.in);
        double vol = 0;
        double luasAlas = 0;
        
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = x.nextDouble();
        double length = x.nextDouble();
        
        luasAlas = radius * radius * 3.14159;
        vol = luasAlas * length;
        
        System.out.println(""The area is "" + luasAlas);
        System.out.println(""The volume of the cylinder is "" + vol);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and even specific constants used, suggesting independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L3 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        double radius = in.nextDouble();
        double length = in.nextDouble();
        // Hitung Area
        double luas = radius * radius * 3.14159;
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        //Hitung Volume
        double volume = luas * length;
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and even specific constants used, suggesting independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L3 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2 = 0;
        double panjang = 0;
        System.out.print(""Enter the radius and length of a cylinder: "");
        jari2 = input.nextDouble();
        panjang = input.nextDouble();
        double luas = jari2 * jari2 * 3.14159;
        double total = luas * panjang;
        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
3,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l,ar,vol;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        ar = rad*rad*3.14159;//mencari area
        vol = ar*l;//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
    }

}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample also includes additional comments and a different class name, indicating independent development rather than direct copying."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        cetak();
    }

    public static void cetak() {
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static double hitungArea(double r) {
        return r * r * Math.PI;
    }
    
    public static double hitungVolume(double r, double l) {
        return hitungArea(r) * l;
    }
    
    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        
        System.out.println(""The area is "" + hitungArea(r));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(r, l));
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details. Sample 1 uses direct formula calculations, while Sample 2 uses separate methods to calculate area and volume. Additionally, Sample 2 uses different variable names and formatting choices. These differences suggest independent development rather than direct copying."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	static double rad,panjang;
	
	static void input()
	{
		Scanner masukan = new Scanner(System.in);
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
	}
	static double hitArea()
	{
		return rad * rad * 3.14159;
	}
	public static void main(String[] args){
		
		
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		input();
		
		double a;
		//perhitungan
		a = hitArea();
		double vol;
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and even the use of static methods in Sample 2. These differences suggest independent development rather than direct copying, and the lack of any verbatim code segments or identical logic flow further supports this conclusion."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {
    public static double area(double r){
        double area;
        area=r*r*3.14159;
        return area;
    }
    public static double volume(double len,double a){
        double volume;
        volume=len*a;
        return volume;
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    
        double r=0;
        double len=0;
        double a =0;
        double volume=0;

        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = area(r);
        volume = volume(len,a);
        //Output
        System.out.println(""The area is "" + a);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details. Sample 1 uses a straightforward calculation of area and volume, while Sample 2 uses separate methods to calculate area and volume and returns the values. The variable names and formatting choices are also different. Therefore, the code samples are not plagiarized."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double jejari = input.nextDouble();
        double panjang = input.nextDouble();
        
        // Mencetak luas dan volume
        System.out.println(""The area is "" + hitungArea(jejari));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(panjang, jejari));
        }
    
    public static double hitungArea(double jejari){
        double area;
        return area = jejari * jejari * 3.14159;
    }
    
    public static double hitungVolume(double panjang, double jejari){
        double volume;
        return volume = hitungArea(jejari) * panjang;
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, method organization, and even the formula used to calculate area, suggesting independent development rather than direct copying."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        //masukkan nilai
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double tinggi = input.nextDouble();
        
        System.out.println(""The area is "" + hitungLuasAlas(radius));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(hitungLuasAlas(radius), tinggi));
    }

    //fungsi luas alas
    public static double hitungLuasAlas(double rad) {
        double luasAlas = rad * rad * 3.14159;
        return luasAlas;
    }

    //fungsi volume
    public static double hitungVolume(double luasAlas, double tinggi) {
        double volume = luasAlas * tinggi;
        return volume;
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and even the formula used to calculate the area. These differences suggest independent development rather than direct copying, and the lack of verbatim code segments further supports this conclusion."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L4 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        float radius = in.nextFloat();
        float length = in.nextFloat();
        // Hitung Area
        double luas = hitungLuas(radius);
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        //Hitung Volume
        double volume = hitungVolume(luas, length);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
    private static double hitungLuas(float radius){
        return radius * radius * 3.14159;
    }
    
    private static double hitungVolume(double luas, float length){
        return luas * length;
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable types, method organization, and even the use of helper methods in Sample 2. While there are some similarities in output messages and user prompts, the differences in coding style and structure suggest independent development rather than direct copying."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L4 {

    public static double hitLuas(double jari2) {
        return jari2 * jari2 * 3.14159;
    }

    public static double total(double luas, double panjang) {
        return luas * panjang;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2 = 0;
        double panjang = 0;
        System.out.print(""Enter the radius and length of a cylinder: "");
        jari2 = input.nextDouble();
        panjang = input.nextDouble();
        double luas = hitLuas(jari2);
        double total = total(luas,panjang);
        
        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and even the formula used to calculate the area. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
4,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l,ar,vol;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        ar = hitungAr(rad);//mencari area
        vol = hitungVol(ar,l);//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
     
    }
    
    public static double hitungVol(double ar,double l)
    {
        return ar*l;
    }
    
    public static double hitungAr(double rad)
    {
        return rad*rad*3.14159;
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and even the use of helper methods in Sample 2. These differences suggest independent development rather than direct copying, and the lack of any verbatim code segments or identical logic flow further supports this conclusion."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        cetak();
    }

    public static void cetak() {
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static double hitungArea(double r) {
        return r * r * Math.PI;
    }
    
    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        
        System.out.println(""The area is "" + hitungArea(r));
        System.out.println(""The volume of the cylinder is "" + hitungArea(r)*l);
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even the formula used to calculate the area. The second sample uses a separate method to calculate the area, which is a significant departure from the first sample's approach. Therefore, the code samples are not plagiarized."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	static double rad,panjang;
	
	static void input()
	{
		Scanner masukan = new Scanner(System.in);
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
	}
	static double hitArea()
	{
		return rad * rad * 3.14159;
	}
	public static void main(String[] args){
				
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		input();
		
		double vol, a;
		//perhitungan
		a = hitArea();
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and even the use of static methods in Sample 2. While both samples use the same formula for area calculation, the differences in code structure and variable usage suggest independent development rather than direct copying."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {
    public static double area(double r){
        double area;
        area=r*r*3.14159;
        return area;
    }
    public static double volume(double len,double a){
        double volume;
        volume=len*a;
        return volume;
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    
        double r,len,a;


        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = area(r);

        //Output
        System.out.println(""The area is "" + area(r));
        System.out.println(""The volume of the cylinder is "" + volume(len,a));

    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details. Sample 1 uses a straightforward calculation of area and volume, while Sample 2 uses separate methods for area and volume calculations. The variable names and formatting choices are also different. Therefore, the code samples are not plagiarized."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double jejari, panjang;
        jejari = input.nextDouble();
        panjang = input.nextDouble();
        
        // Mencetak luas dan volume
        System.out.println(""The area is "" + hitungArea(jejari));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(panjang, jejari));
        }
    
    public static double hitungArea(double jejari){
        double area;
        return area = jejari * jejari * 3.14159;
    }
    
    public static double hitungVolume(double panjang, double jejari){
        double volume;
        return volume = hitungArea(jejari) * panjang;
    }
}",True,,False,"The two code samples share the same purpose of calculating the area and volume of a cylinder, but differ significantly in implementation details such as variable names, method organization, and even the use of helper methods in Sample 2. While the core algorithm is the same, the differences in coding style and structure suggest independent development rather than direct copying."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 
{
    public static void main(String[] args) 
    {
        Scanner input = new Scanner(System.in);
        double radius, tinggi;
        
        //masukkan nilai
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = input.nextDouble();
        tinggi = input.nextDouble();

        hitung(radius, tinggi);
    }

    private static void hitung(double radius, double tinggi) 
    {
        double area = radius * radius * 3.14159;
        double volume = radius * radius * 3.14159 * tinggi;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, method organization, and even the formula used to calculate volume, suggesting independent development rather than direct copying."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L5 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        //input radius
        float input = in.nextFloat();
        // Hitung Area
        double luas = hitungLuas(input);
        //input Length
        input = in.nextFloat();
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        //Hitung Volume
        double volume = hitungVolume(luas, input);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
    private static double hitungLuas(float radius){
        return radius * radius * 3.14159;
    }
    
    private static double hitungVolume(double luas, float length){
        return luas * length;
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L5 {

    public static double hitLuas(double jari2) {
        return jari2 * jari2 * 3.14159;
    }

    public static double total(double luas, double panjang) {
        return luas * panjang;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2, panjang;
        double luas, total;
        System.out.print(""Enter the radius and length of a cylinder: "");
        jari2 = input.nextDouble();
        panjang = input.nextDouble();
        luas = hitLuas(jari2);
        total = total(luas, panjang);

        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and even the formula used to calculate the area. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
5,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l,ar,vol;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        ar = hitungAr(rad);//mencari area
        vol = hitungVol(ar,l);//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
     
    }
    
    public static double hitungVol(double ar,double l)
    {
        return ar*l;
    }
    
    public static double hitungAr(double rad)
    {
        return rad*rad*3.14159;
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and even the use of helper methods in Sample 2. These differences suggest independent development rather than direct copying, and the lack of any verbatim code segments or identical logic flow further supports this conclusion."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
            Scanner input = new Scanner(System.in);
            
            //Enter radius of the cylinder
            System.out.print(""Enter the radius and length of a cylinder: ""); 
            double radius = input.nextDouble();
            double length = input.nextDouble();
            
            double areas = radius * radius * 3.14159;
            double volumes = areas * length;
            
            System.out.println(""The area is "" + areas);
            System.out.println(""The volume of the cylinder is "" + volumes); }
}",True,,True,"The two code samples are very similar in structure, logic flow, and variable usage, indicating that one was likely copied from the other or both were derived from a common source. The only differences are in minor formatting choices and variable names, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    
    public static double hitungArea(double r) {
        return r * r * Math.PI;
    }
    
    public static double hitungVolume(double area, double l) {
        return area * l;
    }
    
    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        
        double area = hitungArea(r);
        double volume = hitungVolume(area, l);
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details. Sample 1 uses direct formula calculations, while Sample 2 uses separate methods to calculate area and volume. Additionally, Sample 2 uses different variable names and formatting choices. These differences suggest independent development rather than direct copying."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;
class inputoutput{
	public static void main(String[] args){
		Scanner masukan = new Scanner(System.in);
		
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double rad = masukan.nextDouble();
		double panjang = masukan.nextDouble();
		
		//perhitungan
		double a = rad * rad * 3.14159;
		double vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample is written in a different language and uses a different class name, indicating independent development rather than direct copying."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    

        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = scan.nextDouble();
        double len = scan.nextDouble();
        double a = r * r * 3.14159;
        double volume = a * len;
        //Output
        System.out.println(""The area is "" + a);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double jejari = input.nextDouble();
        double length = input.nextDouble();
        double area = jejari * jejari * 3.14159;
        double volume = area * length;
        // Mencetak luas dan volume
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
        }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and even specific constants used, suggesting independent development rather than direct copying."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {
    
    //program menghitung luas alas dan volume
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        System.out.print(""Enter the radius and length of a cylinder: "");
        double rad = in.nextDouble();
        double panjang = in.nextDouble();
        
        double luas = rad * rad * 3.14159;
        double vol = luas * panjang;
        System.out.println(""The area is "" + luas);
        System.out.println(""The volume of the cylinder is "" + vol);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L2 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        float radius = in.nextFloat();
        float length = in.nextFloat();
        // Hitung Area
        double luas = radius * radius * 3.14159;
        //Hitung Volume
        double volume = luas * length;
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;


public class L2 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print(""Enter the radius and length of a cylinder: "");
        double jari2 = input.nextDouble();
        double panjang = input.nextDouble();
        double luas = jari2 * jari2 * 3.14159;
        double total = luas * panjang;
        System.out.println(""The area is "" + luas);
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, language syntax, and even specific constants used, suggesting independent development rather than direct copying."
2,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        double rad = sc.nextDouble();//menginput radius
        double l = sc.nextDouble();//menginput length
        double ar = rad*rad*3.14159;//mencari area
        double vol = ar*l;//mencari voulume
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
    }

}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample also includes comments in a different language, indicating that it was likely developed independently rather than copied from the first sample."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    public static void main(String[] args) {
            Scanner input = new Scanner(System.in);
            
            //Enter radius of the cylinder
            System.out.print(""Enter the radius and length of a cylinder: ""); 
            double radius = input.nextDouble();
            double length = input.nextDouble();
            
            double area = radius * radius * 3.14159;
            double volume = area * length;
            
            System.out.println(""The area is "" + area);
            System.out.println(""The volume of the cylinder is "" + volume); }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and output formatting, with only minor differences in wording and formatting choices. The core algorithm and variable usage are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder dddd
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}
}",True,,True,"The two code samples are very similar in structure and implementation, with only minor differences in comments and variable names. However, the differences are not significant enough to suggest independent development, and the core algorithm and output are identical. Therefore, it is likely that one code sample was copied from the other or both were derived from a common source."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;
public class inputoutput{
	public static void main(String[] args){
		Scanner input = new Scanner(System.in);
		
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();
		
		//perhitungan
		double area = radius * radius * 3.14159;
		double volume = area * length;
		
		// cetak hasil
		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);		
	}
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, calculation formula, and output messages. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder

        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double length = input.nextDouble();
        double area = radius * radius * 3.14159;
        double volume = area * length;
        //Output
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);

    }
}",True,,True,"The two code samples are very similar in structure, logic flow, and output formatting, with only minor differences in class name and comments. However, these differences are not significant enough to suggest independent development, and the core algorithm and variable usage are the same, indicating that one code sample was likely copied from the other or both were derived from a common source."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double length = input.nextDouble();
        double area = radius * radius * 3.14159;
        double volume = area * length;
        // Mencetak luas dan volume
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
        }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and even specific constants used, suggesting independent development rather than direct copying."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) 
    {
        Scanner input = new Scanner(System.in);
        
        //masukkin radius
        System.out.print(""Enter the radius and length of a cylinder: "");
        double radius = input.nextDouble();
        double length = input.nextDouble();
        
        double area = radius * radius * 3.14159;
        double volume = area * length;
        System.out.println(""The area is "" + area);
        System.out.println(""The volume of the cylinder is "" + volume);
    }
}",True,,True,"The two code samples are very similar in structure, logic flow, and output formatting, with only minor differences in comments and formatting choices. However, the core algorithm and variable usage are the same, indicating that one code sample was likely copied from the other or both were derived from a common source."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L1 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double radius = input.nextDouble();
        double length = input.nextDouble();
        // Hitung Area
        double area = radius * radius * 3.14159;
        //Hitung Volume
        double volume = area * length;
        // Print area cylinder
        System.out.println(""The area is "" + area);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + volume);
    }
    
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, comments, and even specific constants used, suggesting independent development rather than direct copying."
1,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inputoutput{

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        double radius = input.nextDouble();//menginput radius
        double length = input.nextDouble();//menginput length
        double area = radius*radius*3.14159;//mencari area
        double volume = area*length;//mencari voulume
        System.out.println(""The area is "" + area);//mengeluarkan hasil
        System.out.println(""The volume of the cylinder is "" + volume);//mengeluarkan hasil
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, cylinder calculation formula, and output messages. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static double radius,length,areas,volumes;
    
    public static void main(String[] args) {
        //Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner input = new Scanner(System.in);
        radius = input.nextDouble();
        length = input.nextDouble();
        areas = radius * radius * 3.14159;
        volumes = areas * length;
        cetak();
    }

    public static void cetak() {
        System.out.println(""The area is "" + areas);
        System.out.println(""The volume of the cylinder is "" + volumes);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus2 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        double r = input.nextDouble();
        double l = input.nextDouble();
        System.out.println(""The area is "" + r*r*Math.PI);
        System.out.println(""The volume of the cylinder is "" + r*r*Math.PI*l);
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

class inputoutput{
	static double rad,panjang;
	static Scanner masukan = new Scanner(System.in);
	static void input()
	{
		
		rad = masukan.nextDouble();
		panjang = masukan.nextDouble();
	}
	static double hitArea()
	{
		return Math.pow(rad,2) * 3.14159;
	}
	public static void main(String[] args){
				
		// masukan silinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		input();
		
		double vol, a;
		//perhitungan
		a = hitArea();
		vol = a * panjang;
		
		// cetak hasil
		System.out.println(""The area is "" + a);
		System.out.println(""The volume of the cylinder is "" + vol);		
	}
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample uses a separate class and methods for input and calculation, indicating independent development rather than direct copying. Therefore, the code samples are not plagiarized."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

public class Main {
    public static double area(double r){
        double area;
        area=r*r*3.14159;
        return area;
    }
    public static double volume(double len,double a){
        double volume;
        volume=len*a;
        return volume;
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        // Enter radius of the cylinder    
        double r,len,a;


        System.out.print(""Enter the radius and length of a cylinder: "");
        r = scan.nextDouble();
        len = scan.nextDouble();

        a = area(r);

        //Output
        System.out.println(""The area is "" + area(r));
        System.out.println(""The volume of the cylinder is "" + volume(len,a));

    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details. Sample 1 uses a straightforward calculation of area and volume, while Sample 2 uses separate methods for area and volume calculations. The variable names and formatting choices are also different. Therefore, the code samples are not plagiarized."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        // Masukan radius silinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        
        double jejari, panjang;
        jejari = input.nextDouble();
        panjang = input.nextDouble();
        
        // Mencetak luas dan volume
        System.out.println(""The area is "" + hitungArea(jejari));
        System.out.println(""The volume of the cylinder is "" + hitungVolume(panjang, jejari));
        }
    
    public static double hitungArea(double jejari){
        double area;
        return area = Math.pow(jejari, 2) * 3.14159;
    }
    
    public static double hitungVolume(double panjang, double jejari){
        double volume;
        return volume = hitungArea(jejari) * panjang;
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample uses separate methods to calculate area and volume, while the first sample calculates them inline. These differences suggest independent development rather than direct copying."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double radius, tinggi;

        //masukkan nilai
        System.out.print(""Enter the radius and length of a cylinder: "");
        radius = in.nextDouble(); tinggi = in.nextDouble();

        count(radius, tinggi);
    }

    private static void count(double rad, double height) {
        System.out.println(""The area is "" + Math.pow(rad, 2) * Math.PI);
        System.out.println(""The volume of the cylinder is "" + Math.pow(rad, 2) * Math.PI * height);
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. The second sample uses a separate method to perform the calculations, and the output messages are slightly different. These differences suggest independent development rather than direct copying."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus2L6 {
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder: "");
        Scanner in = new Scanner(System.in);
        //input radius
        float input = in.nextFloat();
        //Hitung Area
        double luas = hitungLuas(input);
        //input Length
        input = in.nextFloat();
        // Print area cylinder
        System.out.println(""The area is "" + luas);
        // Print volume cylinder
        System.out.println(""The volume of the cylinder is "" + hitungVolume(luas, input));
    }
    
    private static double hitungLuas(float radius){
        return radius * radius * 3.14159;
    }
    
    private static double hitungVolume(double luas, float length){
        return luas * length;
    }
}",True,,False,"The two code samples share the same basic structure and purpose, which is expected given they solve the same problem of calculating the area and volume of a cylinder. However, they differ significantly in implementation details such as variable types, formatting choices, and even specific constants used, suggesting independent development rather than direct copying."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.*;

public class L6 {

    public static double hitLuas(double jari2) {
        return jari2 * jari2 * 3.14159;
    }

    public static double total(double luas, double panjang) {
        return luas * panjang;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double jari2, panjang;
        double luas, total;
        jari2 = 0;
        panjang = 0;
        System.out.print(""Enter the radius and length of a cylinder: "");
        for (int i = 0; i < 1; i++) {
            jari2 = input.nextDouble();
            panjang = input.nextDouble();
        }

        luas = hitLuas(jari2);
        total = total(luas, panjang);

        System.out.print(""The area is "" + luas + "" , "");
        System.out.println(""The volume of the cylinder is "" + total);
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, formatting choices, and even specific constants used. Sample 2 uses separate methods to calculate the area and volume, while Sample 1 calculates them inline. These differences suggest independent development rather than direct copying."
6,2,"import java.util.Scanner;

public class T2 {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		// Enter radius of the cylinder
		System.out.print(""Enter the radius and length of a cylinder: "");
		double radius = input.nextDouble();
		double length = input.nextDouble();

		double area = radius * radius * 3.14159;
		double volume = area * length;

		System.out.println(""The area is "" + area);
		System.out.println(""The volume of the cylinder is "" + volume);
	}

}","import java.util.Scanner;


public class inout{

    public static void main(String[] args) {
        double rad,l;
        Scanner sc = new Scanner(System.in);
        // Enter radius of the cylinder
        System.out.print(""Enter the radius and length of a cylinder : "");//untuk print
        rad = sc.nextDouble();//menginput radius
        l = sc.nextDouble();//menginput length
        hitungVol(hitungAr(rad), l);
        
     
    }
    
    public static void hitungVol(double ar,double l)
    {
        double vol= ar*l;
        System.out.println(""The volume of the cylinder is "" + vol);//mengeluarkan hasil
        
    }
    
    public static double hitungAr(double rad)
    {
        double ar= rad*rad*3.14159;
        System.out.println(""The area is "" + ar);//mengeluarkan hasil
        return ar;
    }
}",True,,False,"The two code samples solve the same problem of calculating the area and volume of a cylinder, but they differ significantly in implementation details such as variable names, method organization, and output formatting. The second sample uses a different approach to method organization and output formatting, indicating independent development rather than direct copying. Therefore, the code samples are not plagiarized."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685903EF83F7A7C8A165F77EED160D9E
 */
public class T05 {
    public static void main(String[] args) {
          Scanner s = new Scanner(System.in);
          System.out.print(""Enter an integer "");
          int a= s.nextInt();
          reverse(a);
    }
    public  static  void reverse(int number){
        String cek = String.valueOf(number);
        for (int i = 0; i < cek.length(); i++) {
            System.out.print(cek.charAt(cek.length()-1-i));
        }
        System.out.println("""");
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and then prints the characters in reverse order. While the core functionality is the same, the differences in implementation suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;
public class T05
{
   public static void main(String[] args)
   {
      Scanner sc = new Scanner(System.in);
      System.out.print(""Enter an integer: "");
      int number= sc.nextInt();

      reverse(number);
   }
   public static void reverse (int number)
   {
      String balik ="""";
      while(number > 0)
      {
         balik = balik + (number%10);
         number = number/ 10;
      }
      System.out.println(balik);
   }
}",False,,False,"The two code samples share the same basic structure and purpose of reversing an integer, but differ significantly in implementation details. Sample 1 uses a while loop to extract digits and print them, while Sample 2 uses a string to store the reversed digits and then prints them. The differences in variable names, input method, and output formatting also suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author B00A50C448238A71ED479F81FA4D9066
 */

import java.util.Scanner;

public class T05 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = sc.nextInt();
        reverse(angka);
    }
    
    public static void reverse(int number) {
        int tamp = number;
        int hit = 0;
        while(number != 0) {
            number = number / 10;
            hit++;
        }
        number = tamp;
        int jumlah = 0;
        for(int i = hit; i > 0; i--) {
            int jumlah10 = 1;
            int akhir = number % 10;
            for(int j = 1; j < i; j++) {
                jumlah10 = jumlah10 * 10;
            }
            jumlah = jumlah + (akhir * jumlah10);
            number = number / 10;
        }
        System.out.println(jumlah);
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different algorithms and approaches. While both use loops to extract digits and print them in reverse order, Sample 2 also uses additional loops and mathematical operations to achieve the same result. The differences in implementation and algorithm suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class Main {

    public  static void reverse(int number){
        String angka=number+"""";
        for(int i=angka.length()-1;i>=0;i--){
            System.out.print(angka.charAt(i));
        }
    }
    public static void main(String[] args) {
    	Scanner sc=new Scanner(System.in);
    	System.out.print(""Enter an integer: "");
    	int number=sc.nextInt();
    	reverse(number);
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over its characters in reverse order. While the core functionality is the same, the differences in implementation suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author C2FE677A63FFD5B7FFD8FACBF327DAD0
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print(""Enter an integer: "");
        int number = sc.nextInt();

        reverse(number);
    }

    public static void reverse(int number)
    {
        int tempDigit = 0;

        while (number > 0){

            tempDigit = number % 10;
            System.out.print(tempDigit);
            number = number / 10;
        }
    }
}",False,,False,"The two code samples share the same basic structure and purpose, which is to reverse an integer entered by the user. However, they differ significantly in implementation details such as variable names, method organization, and even the algorithm used to reverse the integer. These differences suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 51BE04B11C5F2F5AD96A396632DC3F76
 */
import java.util.Scanner;

public class t05 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int num = sc.nextInt();
        reverse(num);
    }

    public static void reverse(int number) {
        String tmpNumber = String.valueOf(number);
        for (int i = tmpNumber.length() - 1; i > -1; i--) {
            System.out.print(tmpNumber.charAt(i));
        }
        System.out.println("""");
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over its characters in reverse order. While the core functionality is the same, the differences in implementation suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6ED61D4B80BB0F81937B32418E98ADCA A94652AA97C7211BA8954DD15A3CF838
 */
public class T05 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int a = sc.nextInt();
        String b = String.valueOf(a);
        for (int i = 0; i < b.length(); i++) {
            System.out.print(b.charAt(b.length()-1-i));
        }
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over its characters in reverse order. While the core functionality is the same, the differences in implementation suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author 92E0988C1682C76D4D307AA15EC8346E
 */
public class T05 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer : "");
        int number = sc.nextInt();
        reverse(number);
    }

    public static void reverse(int number) {
        String numberString = String.valueOf(number);        
        for (int i = numberString.length(); i > 0; i--) {
            System.out.print(numberString.charAt(i-1));
        }
        System.out.println("""");
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over the characters in reverse order. While the core functionality is the same, the differences in implementation suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;
/**
 *
 * @author FD820A2B4461BDDD116C1518BC4B0F77 871C87F67A53ECC7201FF41AF0A05032
 */
public class T05 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int inp = sc.nextInt();
        reverse(inp);
    }
    
    public static void reverse(int number){
        int a = 0;
        int i = (int)(Math.log10(number));
        while(number!=0){
            int b = number%10;
            a += b * Math.pow(10, i--);
            number/=10;
        }
        System.out.println(a);
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different algorithms and variable names. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 uses logarithms and math operations to construct a new integer with the digits in reverse order. While the overall structure and purpose are the same, the differences in implementation suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template fil3e, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 6968A2C57C3A4FEE8FADC79A80355E4D F13FFB0C4AF5E1CE7C646A5222FBC1E9 2451041557A22145B3701B0184109CAB035
 */
public class T05 {

    static int a;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer:"");
        int a = sc.nextInt();
        reverse(a);
    }

    public static void reverse(int number) {
        int reverse = 0;
        while (number != 0) {
            reverse = reverse * 10;
            reverse = reverse + number % 10;
            number = number / 10;
        }
        System.out.println(reverse);
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different algorithms and variable names. Sample 1 uses a simple loop to extract digits and print them in reverse order, while Sample 2 uses a more complex algorithm to build a new integer with the digits in reverse order. The differences in implementation and approach suggest independent development rather than direct copying."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author 9BC88124A9BB1C629D5FFBCD81612170
 */
public class No5 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        String inp= sc.next();
        reverse(inp);
    }
    
    public static void reverse(String a){
        for(int i=a.length()-1; i>=0; i--) {
            System.out.print(a.charAt(i));
        }
    }
    
}",False,,False,"The two code samples solve the same problem of reversing an integer, but they use different approaches and algorithms. Sample 1 uses a mathematical approach to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over its characters in reverse order. The differences in implementation and algorithm suggest independent development rather than plagiarism."
0,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/**
 *
 * @author 4900D0A19B6894A4A514E9FF3AFCC2C0
 */
public class Soal5 {
    
    public static void reverse(int number){
        String a = String.valueOf(number);
        
        for(int i = a.length()-1; i>-1; i--){
            System.out.print(a.charAt(i));
        }
        System.out.println("""");
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int number = sc.nextInt();
        reverse(number);
    }
}",False,,False,"The two code samples solve the same problem of reversing an integer, but use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over its characters in reverse order. While the core functionality is the same, the differences in implementation suggest independent development rather than direct copying."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        System.out.print(""Enter an integer: "");
        balik(number);
    }

        public static void balik(int number) {
            while (number != 0) {
                int remainder = number % 10;
                System.out.print(remainder);
                number = number / 10;
            }
            
            System.out.println();
        }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, integer reversal algorithm, and output formatting. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        reverse(number);
    }
}",True,,True,"The two code samples are identical in functionality, structure, and even variable names, indicating that one was directly copied from the other. The only difference is in the comments and license header, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
		public static void beautyReverse(int num) 
	{
		while (num != 0)
			{
			int r = num % 10;
				System.out.print(r);
			num = num / 10;
		}
		System.out.println();
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			beautyReverse(n);
	}
	
	

}",True,,False,"The two code samples share the same basic structure and purpose, which is to reverse an integer entered by the user. However, they differ significantly in implementation details such as method names, variable names, and even the specific algorithm used to reverse the integer. These differences suggest independent development rather than direct copying."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {

    public static void main(String[] args) {
        java.util.Scanner sc = new java.util.Scanner(System.in);
        int nmb=0;
        //enter the number
        System.out.print(""Enter an integer: "");

        nmb = sc.nextInt();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int get=0;
        while (nmb != 0) {
            get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        }
        System.out.println();
    }


}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        reverse(angka);
    }

    public static void reverse(int angka) {
        // Di sini mengulang hingga number habis
        while (angka != 0) {
            int remainder = angka % 10;
            System.out.print(remainder);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level3 {

    public static void main(String[] args) {
        //cara lain memanggil scanner
        java.util.Scanner input = new java.util.Scanner(System.in);
        int angka;
        
        System.out.print(""Enter an integer: "");
        angka = input.nextInt();
        reverse(angka);
    }

    //fungsi membalik
    public static void reverse(int number) {
        int sisa;
        while (number != 0) {
            sisa = number % 10;
            System.out.print(sisa);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, integer reversal algorithm, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L3 {
    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = inp.nextInt();
        reverseNumber(angka);
    }

    public static void reverseNumber(int angka) {
        //proses membalikkan angka
        while (angka != 0) {
            //mengambil angka terakhir
            int temp = angka % 10;
            //membuang angka terakhir
            angka = angka / 10;
            //tampilkan angka yang diambil
            System.out.print(temp);
        }
        System.out.println();
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L3 {

    public static void main(String[] args) 
    {
        int nomor = 0;
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
        
        balik(nomor);
    }

    public static void balik(int nomor) {
        int sisa = 0 ;   
        while (nomor != 0)      
        {
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite differences in variable names and method names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
3,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        while (angka != 0) {//looping sampai angka habis
             int   sisa ;
             sisa= angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(sisa);
            angka = angka / 10;
        }
        
        System.out.println();
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, integer reversal algorithm, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int number;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        System.out.print(""Enter an integer: "");
        number = input.nextInt();
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }

        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details. Sample 1 uses a separate method for the reversal logic, while Sample 2 incorporates the logic directly into the main method. Additionally, Sample 2 uses a private variable and different formatting choices. These differences suggest independent development rather than direct copying."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static void reverse(int number) {
        System.out.print(number%10);
    }
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        for( ; number>0 ; number/=10)
            reverse(number);
        System.out.println("""");
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 uses a for loop and a separate method to achieve the same result. The differences in variable names, loop structure, and method organization suggest independent development rather than direct copying."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
		public static void beautyReverse(int num) 
	{
		while (num != 0)
			{
			int r = num % 10;
				System.out.print(r);
			num = num / 10;
		}
		System.out.println();
	}
	static void reverse(int n)
	{
		beautyReverse(n);
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			reverse(n);
	}
	
	

}",True,,False,"The two code samples share the same basic structure and purpose, which is to reverse an integer input by the user. However, they differ significantly in implementation details such as method names, method organization, and even variable names, suggesting independent development rather than direct copying. The second code sample also includes an additional method for reversing the integer, which is not present in the first sample."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {
    static java.util.Scanner sc = new java.util.Scanner(System.in);
    public static int input(){
        System.out.print(""Enter an integer: "");
        return sc.nextInt();
    }

    public static void main(String[] args) {

        int nmb=input();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int get=0;
        while (nmb != 0) {
            get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        }
        System.out.println();
    }


}",True,,False,"The two code samples share the same purpose of reversing an integer, but differ significantly in implementation details. Sample 2 uses a separate method for input and a different approach to variable naming and output formatting, indicating independent development rather than direct copying. Therefore, the code samples are not plagiarized."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        while (angka != 0) {
            int remainder = angka % 10;
            System.out.print(remainder);
            angka = angka / 10;
        }
        System.out.println();
    }

}",True,,False,"The two code samples share the same basic structure and purpose, which is to reverse an integer entered by the user. However, they differ significantly in implementation details such as variable names, comments, and even language (Sample 2 includes comments in Indonesian). These differences suggest independent development rather than direct copying, and the code samples are not considered plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level4 {

    public static void main(String[] args) {
        java.util.Scanner masukkan = new java.util.Scanner(System.in);
        int number;
        int sisaBagi;
        
        System.out.print(""Enter an integer: "");
        number = masukkan.nextInt();
        
        while (number != 0) {
            sisaBagi = number % 10;
            System.out.print(sisaBagi);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,False,"The two code samples share the same basic structure and logic flow for reversing an integer, including the same approach to input, digit extraction, and output. However, they differ significantly in variable names, formatting choices, and even specific constants used, suggesting independent development rather than direct copying. Therefore, the code samples are not plagiarized."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L4 {

    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = inp.nextInt();

        //proses membalikkan angka
        while (angka != 0) {
            //mengambil angka terakhir
            int temp = angka % 10;
            //membuang angka terakhir
            angka = angka / 10;
            //tampilkan angka yang diambil
            System.out.print(temp);
        }
        System.out.println();
    }
}",True,,False,"The two code samples share the same purpose of reversing an integer, but differ significantly in implementation details such as variable names, formatting choices, and even the specific algorithm used to reverse the integer. While both use a while loop to extract digits and print them in reverse order, the specific calculations and variable usage are different enough to suggest independent development rather than direct copying."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L4 {

    public static void main(String[] args) 
    {
        int nomor = 0;
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
        
        int sisa = 0 ;   
        while (nomor != 0)      
        {
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }

}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
4,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        while (input != 0) {//looping sampai angka habis
               int sisa ;
               sisa= input % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
               System.out.print(sisa);
               input = input / 10;
        }

    }
}",True,,False,"The two code samples share the same purpose of reversing an integer, but differ significantly in implementation details. Sample 1 uses a separate method to perform the reversal, while Sample 2 performs the reversal within the main method. Additionally, Sample 2 uses different variable names and formatting choices. While the core algorithm is the same, the differences in implementation suggest independent development rather than direct copying."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int number;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        System.out.print(""Enter an integer: "");
        number = input.nextInt();
        for (int i = 0; number != 0; i++) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }

        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details. Sample 1 uses a while loop and a separate method to perform the reversal, while Sample 2 uses a for loop and a private variable. The variable names and formatting choices are also different. Therefore, the code samples are not plagiarized."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static int reverse(int number) {
        return number%10;
    }
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        for( ; number>0 ; number/=10)
            System.out.print(reverse(number));
        System.out.println("""");
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they use different approaches and algorithms. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 uses a for loop and a separate method to extract digits and build a new integer in reverse order. The differences in implementation and algorithm suggest independent development rather than direct copying."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
		public static void beautyReverse(int num) 
	{
		
		for(;num !=0;num/=10)
			{
			int r = num % 10;
				System.out.print(r);

		}
		System.out.println();
	}
	static void reverse(int n)
	{
		beautyReverse(n);
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			reverse(n);
	}
	
	

}",True,,False,"The two code samples share the same basic structure and purpose, which is to reverse an integer entered by the user. However, they differ significantly in implementation details such as method names, variable types, and even the specific algorithm used to reverse the integer. These differences suggest independent development rather than direct copying."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class Main {
    static Scanner sc = new Scanner(System.in);
    public static int input(){
        System.out.print(""Enter an integer: "");
        return sc.nextInt();
    }

    public static void main(String[] args) {

        int nmb=input();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int get=0;
        do {
            get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        } while (nmb != 0);
        System.out.println();
    }


}",True,,False,"The two code samples share the same basic structure and purpose of reversing an integer, but differ significantly in implementation details such as variable names, input method, and output formatting. The second sample uses a separate method for input and a do-while loop for reversing the integer, indicating independent development rather than direct copying. Therefore, the code samples are not plagiarized."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        for (angka = angka; angka != 0; angka = angka / 10) {
            int remainder = angka % 10;
            System.out.print(remainder);
        }
        System.out.println();
    }

}",True,,False,"The two code samples share the same basic structure and purpose of reversing an integer, but differ significantly in implementation details such as variable names, formatting choices, and even the method used to reverse the integer. The differences in implementation suggest independent development rather than direct copying, indicating that the code samples are not plagiarized."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level5 {

    public static void main(String[] args) {
        Scanner masukkan = new Scanner(System.in);
        int angka, sisaBagi;

        System.out.print(""Enter an integer: "");
        angka = masukkan.nextInt();

        while (angka != 0) { //ulang sampai tidak bisa dibagi integer dengan 10
            sisaBagi = angka % 10;
            System.out.print(sisaBagi);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite differences in variable names and minor formatting choices, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L5 {
    
    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        int angka = inp.nextInt();
        
        //proses membalikkan angka
        while (angka != 0) {
            //tampilkan angka yang diambil
            System.out.print(angka % 10);
            //membuang angka terakhir
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. Despite minor differences in variable names and formatting choices, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L5 {

    public static void main(String[] args) 
    {
        int nomor, sisa = 0;
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
      
        
        while (nomor!=0)    
        {
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }

}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. Despite minor differences in variable names and formatting choices, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
5,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        for(int i=0;i<=angka;i++) {//looping sampai angka habis
             int   sisa ;
             sisa= angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(sisa);
            angka = angka / 10;
            i=0;
        }
        
        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 uses a for loop and a separate method to achieve the same result. The variable names and formatting choices are also different, indicating independent development rather than direct copying."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        balik(number);
    }

        public static void balik(int number) {
            while (number != 0) {
                int remainder = number % 10;
                System.out.print(remainder);
                number = number / 10;
            }
            
            System.out.println();
        }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and even variable names, with the only differences being in the method name and some comments. However, the core algorithm and implementation details are the same, indicating that one sample was likely copied from the other or both were derived from a common source."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int n = input.nextInt();
		//pamggil method
			beautyReverse(n);
	}
	
	//method reverse
	public static void beautyReverse(int num) 
	{
		while (num != 0)
			{
			int r = num % 10;
				System.out.print(r);
			num = num / 10;
		}
		System.out.println();
	}
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, integer reversal algorithm, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int    input =    sc.nextInt();//input integer
          terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        while (angka != 0) {//looping sampai angka habis
             int   sisa = angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(sisa);
            angka = angka / 10;
        }
        
        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details such as variable names, method names, and even language syntax. The second sample is written in Indonesian and uses a separate method for the reversal, while the first sample is in English and calls the reversal method directly. These differences suggest independent development rather than direct copying."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {

    public static void main(String[] args) {
        //enter the number
        System.out.print(""Enter an integer: "");
        java.util.Scanner sc = new java.util.Scanner(System.in);
        int nmb = sc.nextInt();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        while (nmb != 0) {
            int get = nmb % 10;
            //output
            System.out.print(get);
            nmb = nmb / 10;
        }
        System.out.println();
    }


}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. Despite minor differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L2 {
    public static void main(String[] args) {
        //input data
        System.out.print(""Enter an integer: "");
        Scanner inp = new Scanner(System.in);
        int angka = inp.nextInt();
        reverseNumber(angka);
    }

    public static void reverseNumber(int angka) {
        //proses membalikkan angka
        while (angka != 0) {
            //mengambil angka terakhir
            int temp = angka % 10;
            //tampilkan angka yang diambil
            System.out.print(temp);
            //membuang angka terakhir
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level2 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner in = new java.util.Scanner(System.in);
        int angka = in.nextInt();
        balik(angka);
    }

    //fungsi membalik
    public static void balik(int angka) {
        while (angka != 0) {
            int sisa = angka % 10;
            System.out.print(sisa);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite differences in variable names and method organization, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L2 {

    public static void main(String[] args) 
    {
        System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        int nomor = input.nextInt();
        
        balik(nomor);
    }

    public static void balik(int nomor) {
           while (nomor != 0)
        {
                int sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite differences in variable names and method names, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
2,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        reverse(angka);
    }

    public static void reverse(int angka) {
        // Di sini mengulang hingga number habis
        while (angka != 0) {
            int remainder = angka % 10;
            System.out.print(remainder);
            angka = angka / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        reverse(number);
    }

        public static void reverse(int number) {
            while (number != 0) {
                int remainder = number % 10;
                System.out.print(remainder);
                number = number / 10;
            }
            
            System.out.println();
        }
}",True,,True,"The two code samples are identical in structure, logic, and even author name, indicating that one was directly copied from the other. The only difference is the author's comment in Sample 2, which does not constitute a meaningful variation in implementation. Therefore, the code samples are likely plagiarized from each other or a common source."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,False,"The two code samples share the same basic functionality of reversing an integer, but differ significantly in implementation details. Sample 1 uses a separate method to perform the reversal, while Sample 2 performs the reversal within the main method. Additionally, Sample 2 includes a license header and author comments, indicating that it was likely developed independently. Therefore, the code samples are not plagiarized."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		//pamggil method
			reverse(number);
	}
	
	//method reverse
	public static void reverse(int number) 
	{
		while (number != 0)
			{
			int remainder = number % 10;
				System.out.print(remainder);
			number = number / 10;
		}
		System.out.println();
	}
}",True,,False,"The two code samples share the same basic structure and purpose, which is to reverse an integer entered by the user. However, they differ in implementation details such as the use of a separate method in Sample 2 and the inclusion of a class declaration and main method in Sample 2. These differences suggest independent development rather than direct copying, and the code samples are not considered plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class Main {

    public static void main(String[] args) {
        //enter the number
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        //reverse number
        reverse(number);

    }
    public static void reverse(int number) {
        while (number != 0) {
            int remainder = number % 10;
            //output
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }


}",True,,False,"The two code samples share the same basic structure and purpose, including identical user prompts, input methods, and output formatting. However, they differ in minor details such as variable names and comments, suggesting independent development rather than direct copying. While the core algorithm and logic flow are the same, the differences in implementation are significant enough to suggest originality."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        reverse(number);
    }

    public static void reverse(int number) {
        // Di sini mengulang hingga number habis
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples exhibit nearly identical logic, structure, and functionality for reversing an integer, including the same approach to input, digit extraction, and output. Despite minor differences in variable names and comments, the core algorithm and even some verbatim code segments are so similar that it strongly suggests one sample was derived from the other or both from a common source, indicating likely plagiarism."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level1 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        reverse(number);
    }

    //fungsi membalik
    public static void reverse(int number) {
        while (number != 0) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples are nearly identical in structure, logic flow, and even variable names, indicating that one was directly copied from the other. The only difference is in the comments and author name, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L1 {
    public static void main(String[] args) {
        //input data
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        reverse(number);
    }
    public static void reverse(int number) {
        //proses membalikkan angka
        while (number != 0) {
            //mengambil angka terakhir
            int remainder = number % 10;
            //tampilkan angka yang diambil
            System.out.print(remainder);
            //membuang angka terakhir
            number = number / 10;
        }
        System.out.println();
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
1,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class method {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        java.util.Scanner input = new java.util.Scanner(System.in);
        int    number =    input.nextInt();//input integer
          reverse(number);//memanggil fungsi reverse
    }

    public static void reverse(int number)  {
        while (number != 0) {//looping sampai angka habis
             int   remainder = number % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
            System.out.print(remainder);
            number = number / 10;
        }
        
        System.out.println();
    }
}",True,,True,"The two code samples share the same purpose and implementation details, including identical user prompts, digit extraction, and output. The only differences are in variable names and minor formatting choices, which are not significant enough to suggest independent development. Therefore, the code samples are likely plagiarized from each other or a common source."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/**
 *
 * @author 020A6EC1A4D0C5BDB29FF826A462DA1C5D88CF08B60A4744AFFD95C61A0C3C7E
 */
public class Main {
    private static int number;
    public static void main(String[] args) {
        java.util.Scanner input = new java.util.Scanner(System.in);
        System.out.print(""Enter an integer: "");
        number = input.nextInt();
        for (int i = 99999; number != 0; i--) {
            int remainder = number % 10;
            System.out.print(remainder);
            number = number / 10;
        }

        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details. Sample 1 uses a while loop to extract digits and print them, while Sample 2 uses a for loop with a fixed iteration count. Additionally, Sample 2 uses a different variable naming convention and includes unnecessary comments and author information. These differences suggest independent development rather than direct copying."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C166AB8FBBBE55174E16A67530426A8A 19011F43894F06E2BA0CA74061427469
 */
public class Kasus5 {
    
    public static void reverse(int number) {
        if(number>0) {
            System.out.print(number%10);
            reverse(number/=10);
        }
    }
    
    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        int number = input.nextInt();
        
        reverse(number);
        System.out.println("""");
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 uses a recursive method to achieve the same result. While the core functionality is the same, the differences in implementation and variable names suggest independent development rather than direct copying."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.*;

class method{
	//method reverse
	static java.util.Scanner input = new java.util.Scanner(System.in);
		public static void beautyReverse(int num) 
	{
		
		for(;num >0;num/=100*10)
			{

				System.out.print(num % 10);

		}
		System.out.println();
	}
	static void reverse()
	{
		int n = input.nextInt();
		beautyReverse(n);
	}
	
	//prog utama
	public static void main(String[] args) 
	{
			System.out.print(""Enter an integer: "");
			
		
		//pamggil method
			reverse();
	}
	
	

}",True,,False,"The two code samples have similar functionality in that they both reverse an integer input by the user. However, the implementation details are significantly different, with Sample 2 using a different method for reversing the integer and different variable names. Therefore, the code samples are not plagiarized from each other or a common source."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

public class Main {
    static Scanner sc = new Scanner(System.in);
    public static int input(){
        System.out.print(""Enter an integer: "");
        return sc.nextInt();
    }

    public static void main(String[] args) {

        int nmb=input();
        //reverse number
        reverse(nmb);

    }
    public static void reverse(int nmb) {
        int x=1;
        String rev=String.valueOf(nmb);
        do {

            System.out.print(rev.charAt(rev.length()-x));
            x++;
            nmb = nmb / 10;
        } while (nmb != 0);
        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over its characters in reverse order. The two samples also differ in variable names and input handling, indicating independent development rather than direct copying."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E3AFED0047B08059D0FADA10F400C1E5
 */
public class Main {

    public static void main(String[] args) {
        int angka;
        System.out.print(""Enter an integer: "");
        java.util.Scanner input = new java.util.Scanner(System.in);
        angka = input.nextInt();
        // Memanggil fungsi reverse untuk membalik nilai yang dihasilkan
        for (angka = angka; angka > 0; angka = angka / 10) {
            int remainder = angka % 10;
            System.out.print(remainder);
        }
        System.out.println();
    }

}",True,,False,"The two code samples share the same basic structure and purpose of reversing an integer, but differ significantly in implementation details such as variable names, loop structure, and even the method of digit extraction. These differences suggest independent development rather than direct copying, and the lack of any verbatim code segments further supports this conclusion."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FD8DBE9073AFCC0504CD6901E1091CAD
 */
public class Level6 {

    public static void main(String[] args) {
        System.out.print(""Enter an integer: "");
        Scanner input = new Scanner(System.in);
        int bil = input.nextInt();

        rekursif(bil);
        System.out.println("""");
    }

    //rekursif ah...
    public static int rekursif(int bil){
        if(bil!=0){
            int sisaMod = bil % 10;
            System.out.print(sisaMod);
            bil = bil / 10;
            rekursif(bil);
        }
        return bil;
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 uses a recursive method to achieve the same result. While there are some similarities in variable names and output messages, the differences in implementation and algorithm suggest independent development rather than plagiarism."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Scanner;

/**
 *
 * @author B15130F5DDB6B5F1622EF91DAC4C1AAE
 */
public class Kasus5L6 {

    public static void main(String[] args) {
        //input data
        Scanner inp = new Scanner(System.in);
        System.out.print(""Enter an integer: "");
        String angka = inp.next();
        for (int i = angka.length() - 1; i >= 0; i--) {
            System.out.print(angka.charAt(i));
        }
        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but use different approaches to achieve the same result. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 converts the integer to a string and iterates over its characters in reverse order. While the core functionality is the same, the differences in implementation suggest independent development rather than direct copying."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","public class L6_fix {

    public static void main(String[] args) 
    {
        int nomor, sisa = 0;
        System.out.print(""Enter an integer: "");       
        java.util.Scanner input = new java.util.Scanner(System.in);
        
        nomor = input.nextInt();
      
        
        while (nomor!=0)    
        {
            if (nomor!=0){
                sisa = nomor % 10;
                System.out.print(sisa);
                nomor = nomor / 10;}
        }
        System.out.println();
    }

}",True,,False,"The two code samples share the same basic structure and purpose of reversing an integer, but differ significantly in implementation details. Sample 2 uses a different approach to digit extraction and output formatting, and includes additional conditional statements that are not present in Sample 1. These differences suggest independent development rather than direct copying, and therefore the code samples are not considered plagiarism."
6,5,"public class T5 {
	public static void main(String[] args) {
		System.out.print(""Enter an integer: "");
		java.util.Scanner input = new java.util.Scanner(System.in);
		int number = input.nextInt();
		reverse(number);
	}

	public static void reverse(int number) {
		while (number != 0) {
			int remainder = number % 10;
			System.out.print(remainder);
			number = number / 10;
		}

		System.out.println();
	}

}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class fungsi {

    public static void main(String[] args) {
         System.out.print(""Enter an integer: "");
        
        Scanner sc = new Scanner(System.in);
        int   input;
        input =    sc.nextInt();//input integer
        terbalik(input);//memanggil fungsi reverse
    }

    public static void terbalik(int angka)  {
        List arr =new ArrayList();
        for(int i=0;i<=angka;i++) {//looping sampai angka habis
             int   sisa ;
             sisa= angka % 10;//membagi bilangan tersebut dengan 0 sampai tidak ada hasil bagi
             arr.add(sisa);
             angka = angka / 10;
             i=0;
        }
        for(int i=0;i<arr.size();i++)
        {
            System.out.print(arr.get(i));
        }
        
        System.out.println();
    }
}",True,,False,"The two code samples solve the same problem of reversing an integer, but they differ significantly in implementation details. Sample 1 uses a while loop to extract digits and print them in reverse order, while Sample 2 uses an ArrayList to store digits and then print them in reverse order. The differences in approach and variable names suggest independent development rather than direct copying."
